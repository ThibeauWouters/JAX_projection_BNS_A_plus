Wed Mar 26 17:15:56 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
17:16 ninjax INFO    : Checking and setting outdir
17:16 ninjax INFO    : The outdir is set to ./outdir/injection_14
17:16 ninjax INFO    : Loading the given config
17:16 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
17:16 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '100', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
17:16 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/outdir/injection_14/complete_config.json
17:16 ninjax INFO    : No seed specified. Generating a random seed: 825583
17:16 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 537403
17:16 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 720003
17:16 ninjax INFO    : Loading the priors
17:16 ninjax INFO    :    Mc_prior = Uniform(1.0, 2.2, naming=["M_c"])
17:16 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
17:16 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
17:16 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
17:16 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
17:16 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
17:16 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
17:16 ninjax INFO    :    dL_prior = PowerLaw(1.0, 500.0, 2.0, naming=["d_L"])
17:16 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
17:16 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
17:16 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
17:16 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
17:16 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
17:16 ninjax INFO    : Finished prior setup
17:16 ninjax INFO    : Setting the transforms
17:16 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
17:16 ninjax INFO    : transforms_str_list has 3 elements
17:16 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
17:16 ninjax INFO    : Setting the likelihood
17:16 ninjax INFO    : GW likelihood provided, setting up the GW pipe
17:16 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz
17:16 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz for BNS injections
17:16 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
17:16 ninjax INFO    : self.is_BNS_run is True
17:16 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
17:16 ninjax INFO    : GW run is an injection
17:16 ninjax INFO    : Setting up GW injection . . . 
17:16 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
17:16 ninjax INFO    : Generating new injection
17:16 ninjax INFO    : Sanity check: generated parameters:
17:16 ninjax INFO    : {'M_c': 1.7585315240193446, 'q': 0.41926376555010736, 's1_z': 0.046958903732431945, 's2_z': 0.022776730836063422, 'lambda_1': 3517.4456208125216, 'lambda_2': 212.4218425403923, 'cos_iota': -0.39804783606679406, 'd_L': 472.65449891867127, 't_c': -0.09508539236992718, 'phase_c': 4.402892216629228, 'psi': 2.2666478186942314, 'ra': 0.42760394870309104, 'sin_dec': -0.5356748913399825}
17:16 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz . . . 
17:16 ninjax INFO    : Injected lambda_1: 5.2203813963268075
17:16 ninjax INFO    : Injected lambda_2: 690.7213908346921
17:16 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.7585315240193446 is 128.0
17:16 ninjax INFO    : After transforms, the injection parameters are:
17:16 ninjax INFO    : {'M_c': 1.7585315240193446, 'q': 0.41926376555010736, 's1_z': 0.046958903732431945, 's2_z': 0.022776730836063422, 'lambda_1': 5.2203813963268075, 'lambda_2': 690.7213908346921, 'cos_iota': -0.39804783606679406, 'd_L': 472.65449891867127, 't_c': -0.09508539236992718, 'phase_c': 4.402892216629228, 'psi': 2.2666478186942314, 'ra': 0.42760394870309104, 'sin_dec': -0.5356748913399825, 'eta': 0.20814265990422767, 'iota': Array(1.98018417, dtype=float64, weak_type=True), 'dec': Array(-0.56530678, dtype=float64, weak_type=True)}
17:16 ninjax INFO    : The trial injection parameters are {'M_c': 1.7585315240193446, 'eta': 0.20814265990422767, 's1_z': 0.046958903732431945, 's2_z': 0.022776730836063422, 'lambda_1': 5.2203813963268075, 'lambda_2': 690.7213908346921, 'd_L': 472.65449891867127, 'phase_c': 4.402892216629228, 'iota': 1.9801841748806697, 't_c': -0.09508539236992718, 'psi': 2.2666478186942314, 'ra': 0.42760394870309104, 'dec': -0.5653067772017372}
17:16 ninjax INFO    : Injecting signals . . .
17:16 ninjax INFO    : self.ifos
17:16 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
17:16 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
17:16 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:16 ninjax INFO    : [ 3.95654057e-23-6.47037292e-23j -2.90480473e-23-3.62148048e-23j
 -1.96626505e-24-5.69927007e-23j ...
  8.09866348e-24+4.55471735e-24j -4.40867356e-23-2.45994459e-24j
  1.05578043e-23+1.12661577e-23j]
17:16 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:16 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
17:16 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:16 ninjax INFO    : [-6.27319259e-23+1.29689709e-22j -1.12741894e-22-7.54792267e-24j
 -8.14118323e-24-6.11808032e-24j ...
 -3.18729226e-23+2.23566031e-23j -2.68283023e-23+1.36675001e-23j
  2.32040820e-23+9.90013735e-25j]
17:16 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:16 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
17:16 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:16 ninjax INFO    : [-6.59574968e-24+5.84449618e-23j -5.24456193e-23+1.36027256e-22j
  5.56066146e-23+4.10528118e-23j ...
  6.98027570e-23+2.15793114e-23j -1.76780630e-23+1.42139452e-23j
 -1.70318374e-23+8.03637080e-23j]
17:16 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
17:16 ninjax INFO    : SNR for ifo H1 is 1.73987257207844
17:16 ninjax INFO    : SNR for ifo L1 is 2.428478882564865
17:16 ninjax INFO    : SNR for ifo V1 is 6.596526161357408
17:16 ninjax INFO    : The network SNR is 7.241465573183859
17:16 ninjax INFO    : The network SNR does not pass the threshold, trying again
17:16 ninjax INFO    : Generating new injection
17:16 ninjax INFO    : Sanity check: generated parameters:
17:16 ninjax INFO    : {'M_c': 1.1910759627337286, 'q': 0.1474670994117619, 's1_z': 0.04126880422050576, 's2_z': -0.008334099488921762, 'lambda_1': 3841.8397197362074, 'lambda_2': 3040.0009664082063, 'cos_iota': -0.0773033033796029, 'd_L': 77.85628160496296, 't_c': -0.06616649208622624, 'phase_c': 3.5232551501451224, 'psi': 2.920705987994826, 'ra': 3.6448018517821126, 'sin_dec': 0.22940666216393213}
17:16 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz . . . 
17:16 ninjax INFO    : Injected lambda_1: 5.2203813963268075
17:16 ninjax INFO    : Injected lambda_2: 43240.23272624047
17:16 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.1910759627337286 is 256.0
17:16 ninjax INFO    : After transforms, the injection parameters are:
17:16 ninjax INFO    : {'M_c': 1.1910759627337286, 'q': 0.1474670994117619, 's1_z': 0.04126880422050576, 's2_z': -0.008334099488921762, 'lambda_1': 5.2203813963268075, 'lambda_2': 43240.23272624047, 'cos_iota': -0.0773033033796029, 'd_L': 77.85628160496296, 't_c': -0.06616649208622624, 'phase_c': 3.5232551501451224, 'psi': 2.920705987994826, 'ra': 3.6448018517821126, 'sin_dec': 0.22940666216393213, 'eta': 0.11199913119237395, 'iota': Array(1.64817683, dtype=float64, weak_type=True), 'dec': Array(0.23146804, dtype=float64, weak_type=True)}
17:16 ninjax INFO    : The trial injection parameters are {'M_c': 1.1910759627337286, 'eta': 0.11199913119237395, 's1_z': 0.04126880422050576, 's2_z': -0.008334099488921762, 'lambda_1': 5.2203813963268075, 'lambda_2': 43240.23272624047, 'd_L': 77.85628160496296, 'phase_c': 3.5232551501451224, 'iota': 1.648176829475228, 't_c': -0.06616649208622624, 'psi': 2.920705987994826, 'ra': 3.6448018517821126, 'dec': 0.2314680436878526}
17:16 ninjax INFO    : Injecting signals . . .
17:16 ninjax INFO    : self.ifos
17:16 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
17:16 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
17:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
17:16 ninjax INFO    : [-1.21156366e-22+1.29713181e-23j  6.74377593e-23-1.63338885e-24j
 -5.29077358e-23+7.00919724e-23j ...
  6.14319806e-23-1.85141458e-23j  2.96306041e-24-1.52768526e-23j
 -2.74184639e-23+2.45410698e-23j]
17:16 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
17:16 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
17:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
17:16 ninjax INFO    : [ 6.98907171e-23+3.43617759e-23j -6.95584786e-23+2.14437996e-23j
 -1.94663960e-23-1.01866782e-22j ...
 -1.93756296e-23-2.85401240e-23j  3.24455141e-24-3.62856876e-23j
 -3.96329779e-23-1.72827469e-23j]
17:16 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
17:16 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
17:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
17:16 ninjax INFO    : [ 1.53897271e-22+1.49474249e-22j -5.38303458e-23+6.67682229e-23j
 -4.92250895e-23-5.53059599e-23j ...
 -5.64045211e-23+9.80487100e-24j  1.58117438e-23-1.68242870e-23j
  1.82681086e-24-2.63589413e-23j]
17:16 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
17:16 ninjax INFO    : SNR for ifo H1 is 4.896405487601529
17:16 ninjax INFO    : SNR for ifo L1 is 5.699688533581258
17:16 ninjax INFO    : SNR for ifo V1 is 7.313654156381525
17:16 ninjax INFO    : The network SNR is 10.485741423381029
17:16 ninjax INFO    : The network SNR does not pass the threshold, trying again
17:16 ninjax INFO    : Generating new injection
17:16 ninjax INFO    : Sanity check: generated parameters:
17:16 ninjax INFO    : {'M_c': 1.2425129280676785, 'q': 0.7205924047848513, 's1_z': 0.046934193750033854, 's2_z': -0.04150143390267036, 'lambda_1': 4445.878827212243, 'lambda_2': 3068.6043744959866, 'cos_iota': 0.9302328418224595, 'd_L': 390.02005225678823, 't_c': 0.06308334606448626, 'phase_c': 3.0052952419629384, 'psi': 1.5074209603584583, 'ra': 4.045160003539005, 'sin_dec': -0.018303235207186574}
17:16 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz . . . 
17:16 ninjax INFO    : Injected lambda_1: 163.81384496003696
17:16 ninjax INFO    : Injected lambda_2: 1141.8097060468965
17:16 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.2425129280676785 is 256.0
17:16 ninjax INFO    : After transforms, the injection parameters are:
17:16 ninjax INFO    : {'M_c': 1.2425129280676785, 'q': 0.7205924047848513, 's1_z': 0.046934193750033854, 's2_z': -0.04150143390267036, 'lambda_1': 163.81384496003696, 'lambda_2': 1141.8097060468965, 'cos_iota': 0.9302328418224595, 'd_L': 390.02005225678823, 't_c': 0.06308334606448626, 'phase_c': 3.0052952419629384, 'psi': 1.5074209603584583, 'ra': 4.045160003539005, 'sin_dec': -0.018303235207186574, 'eta': 0.24340734391561086, 'iota': Array(0.37574949, dtype=float64, weak_type=True), 'dec': Array(-0.01830426, dtype=float64, weak_type=True)}
17:16 ninjax INFO    : The trial injection parameters are {'M_c': 1.2425129280676785, 'eta': 0.24340734391561086, 's1_z': 0.046934193750033854, 's2_z': -0.04150143390267036, 'lambda_1': 163.81384496003696, 'lambda_2': 1141.8097060468965, 'd_L': 390.02005225678823, 'phase_c': 3.0052952419629384, 'iota': 0.37574949318356654, 't_c': 0.06308334606448626, 'psi': 1.5074209603584583, 'ra': 4.045160003539005, 'dec': -0.01830425731759613}
17:16 ninjax INFO    : Injecting signals . . .
17:16 ninjax INFO    : self.ifos
17:16 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
17:16 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
17:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
17:16 ninjax INFO    : [-1.22784073e-22+1.59244759e-23j  7.00114488e-23-2.90205304e-24j
 -5.54593352e-23+6.99191128e-23j ...
  6.14319806e-23-1.85141458e-23j  2.96306041e-24-1.52768526e-23j
 -2.74184639e-23+2.45410698e-23j]
17:16 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
17:16 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
17:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
17:16 ninjax INFO    : [ 7.01473466e-23+2.62750254e-23j -7.53145138e-23+2.66456378e-23j
 -1.21681882e-23-1.01416135e-22j ...
 -1.93756296e-23-2.85401240e-23j  3.24455141e-24-3.62856876e-23j
 -3.96329779e-23-1.72827469e-23j]
17:16 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
17:16 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
17:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
17:16 ninjax INFO    : [ 1.52543330e-22+1.51824339e-22j -5.01869167e-23+6.63531871e-23j
 -5.24468756e-23-5.85445776e-23j ...
 -5.64045211e-23+9.80487100e-24j  1.58117438e-23-1.68242870e-23j
  1.82681086e-24-2.63589413e-23j]
17:16 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
17:16 ninjax INFO    : SNR for ifo H1 is 10.441881273031179
17:16 ninjax INFO    : SNR for ifo L1 is 12.320936113484139
17:16 ninjax INFO    : SNR for ifo V1 is 6.229430556534671
17:16 ninjax INFO    : The network SNR is 17.310232704713265
17:16 ninjax INFO    : Network SNR passes threshold
17:16 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
17:16 ninjax INFO    :    M_c: 1.2425129280676785
17:16 ninjax INFO    :    q: 0.7205924047848513
17:16 ninjax INFO    :    s1_z: 0.046934193750033854
17:16 ninjax INFO    :    s2_z: -0.04150143390267036
17:16 ninjax INFO    :    lambda_1: 163.81384496003696
17:16 ninjax INFO    :    lambda_2: 1141.8097060468965
17:16 ninjax INFO    :    cos_iota: 0.9302328418224595
17:16 ninjax INFO    :    d_L: 390.02005225678823
17:16 ninjax INFO    :    t_c: 0.06308334606448626
17:16 ninjax INFO    :    phase_c: 3.0052952419629384
17:16 ninjax INFO    :    psi: 1.5074209603584583
17:16 ninjax INFO    :    ra: 4.045160003539005
17:16 ninjax INFO    :    sin_dec: -0.018303235207186574
17:16 ninjax INFO    :    eta: 0.24340734391561086
17:16 ninjax INFO    :    iota: 0.37574949318356654
17:16 ninjax INFO    :    dec: -0.01830425731759613
17:16 ninjax INFO    :    H1_SNR: 10.441881273031179
17:16 ninjax INFO    :    L1_SNR: 12.320936113484139
17:16 ninjax INFO    :    V1_SNR: 6.229430556534671
17:16 ninjax INFO    :    network_SNR: 17.310232704713265
17:16 ninjax INFO    :    epoch: 254.0
17:16 ninjax INFO    :    gmst: 2.7288901910520846
17:16 ninjax INFO    :    duration: 256.0
17:16 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
17:16 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
17:16 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
17:19 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 190.09987211227417 seconds = 3.168331201871236 minutes
17:19 ninjax INFO    : The priors are not modified after their initialization
17:19 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
17:19 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
17:19 ninjax INFO    : sample: {'M_c': Array([1.50134232, 1.33278004, 1.26754952], dtype=float64), 'q': Array([0.35219753, 0.25223287, 0.83383531], dtype=float64), 's1_z': Array([-0.03950887, -0.03445397, -0.034091  ], dtype=float64), 's2_z': Array([-0.04371235, -0.02753097, -0.00491943], dtype=float64), 'lambda_1': Array([4688.73675329, 2693.92590283, 1492.34673798], dtype=float64), 'lambda_2': Array([ 651.62439621,  406.97605327, 4546.62874124], dtype=float64), 'cos_iota': Array([ 0.49399658, -0.31055107,  0.5132199 ], dtype=float64), 'd_L': Array([480.86587681, 334.32614671, 179.74890667], dtype=float64), 't_c': Array([ 0.01612349, -0.00144829,  0.06817675], dtype=float64), 'phase_c': Array([2.02909001, 3.14849891, 1.12188216], dtype=float64), 'psi': Array([0.70132174, 2.95984025, 1.24569006], dtype=float64), 'ra': Array([1.48893464, 0.42921389, 1.14368254], dtype=float64), 'sin_dec': Array([-0.4775159 ,  0.71478521, -0.70147905], dtype=float64)}
17:19 ninjax INFO    : log_prob: [ -16.06320307  -47.14992623 -134.61778597]
17:19 ninjax INFO    : Checking log_prob at injection parameters: {'M_c': 1.2425129280676785, 'q': 0.7205924047848513, 's1_z': 0.046934193750033854, 's2_z': -0.04150143390267036, 'lambda_1': 163.81384496003696, 'lambda_2': 1141.8097060468965, 'cos_iota': 0.9302328418224595, 'd_L': 390.02005225678823, 't_c': 0.06308334606448626, 'phase_c': 3.0052952419629384, 'psi': 1.5074209603584583, 'ra': 4.045160003539005, 'sin_dec': -0.018303235207186574, 'eta': 0.24340734391561086, 'iota': Array(0.37574949, dtype=float64, weak_type=True), 'dec': Array(-0.01830426, dtype=float64, weak_type=True), 'H1_SNR': 10.441881273031179, 'L1_SNR': 12.320936113484139, 'V1_SNR': 6.229430556534671, 'network_SNR': 17.310232704713265, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
17:19 ninjax INFO    : log_prob at the injection parameters is: 138.10208327678586
17:19 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
17:19 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
17:19 ninjax INFO    : Ninjax setup complete.
17:19 ninjax INFO    : Saving output to ./outdir/injection_14/
17:19 ninjax INFO    : Using polynomial learning rate scheduler
17:19 ninjax INFO    : The hyperparameters passed to flowMC and jim are
17:19 ninjax INFO    :    n_loop_training: 100
17:19 ninjax INFO    :    n_loop_production: 10
17:19 ninjax INFO    :    n_local_steps: 100
17:19 ninjax INFO    :    n_global_steps: 1000
17:19 ninjax INFO    :    n_epochs: 25
17:19 ninjax INFO    :    n_chains: 1000
17:19 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x147b16153490>
17:19 ninjax INFO    :    max_samples: 50000
17:19 ninjax INFO    :    momentum: 0.9
17:19 ninjax INFO    :    batch_size: 30000
17:19 ninjax INFO    :    use_global: True
17:19 ninjax INFO    :    keep_quantile: 0.0
17:19 ninjax INFO    :    train_thinning: 10
17:19 ninjax INFO    :    output_thinning: 50
17:19 ninjax INFO    :    n_sample_max: 10000
17:19 ninjax INFO    :    num_layers: 10
17:19 ninjax INFO    :    hidden_size: [128, 128]
17:19 ninjax INFO    :    num_bins: 8
17:19 ninjax INFO    :    save_training_chains: False
17:19 ninjax INFO    :    eps_mass_matrix: 1e-05
17:19 ninjax INFO    :    use_scheduler: True
17:19 ninjax INFO    :    use_temperature: False
17:19 ninjax INFO    :    which_temperature_schedule: exponential
17:19 ninjax INFO    :    starting_temperature: 2.0
17:19 ninjax INFO    :    stop_tempering_iteration: 75
17:19 ninjax INFO    :    stopping_criterion_global_acc: 0.1
17:19 ninjax INFO    :    stopping_criterion_loss: -inf
17:19 ninjax INFO    :    nf_model_kwargs: {}
17:19 ninjax INFO    :    local sampler arg not shown (pretty print)
17:19 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[ 3.88475417e-23 -2.84584919e-23 -1.62928582e-24  1.05063729e-23
 -6.11297070e-23  3.41787468e-23 -1.33916223e-23 -1.65706423e-23
  1.64069879e-23 -3.21477753e-23]
[-6.43235275e-23 -3.56565027e-23 -5.77310214e-23 -2.28741685e-23
 -6.24591044e-23  1.12291241e-23 -2.13714368e-23 -2.94084443e-23
 -6.58678646e-23  1.06545121e-22]
Checking the noise that was generated in inject_signal ifo:
[-6.16452930e-23 -1.12782559e-22 -9.19903371e-24 -4.01003201e-23
  4.64679810e-23 -6.70542551e-23 -3.20711391e-23  5.59401427e-23
  4.32021510e-23  8.49724693e-23]
[ 1.30013455e-22 -8.68050829e-24 -5.71289082e-24 -8.53466885e-24
  6.07070269e-23  1.12917294e-23  4.82375687e-23 -2.48040956e-23
  4.84345558e-24  3.05240105e-24]
Checking the noise that was generated in inject_signal ifo:
[-2.74714779e-24 -5.42844491e-23  5.29536823e-23  9.88473970e-25
 -1.15664197e-22 -2.29675334e-23 -2.63638222e-23  1.06787521e-23
  2.29179865e-23  1.07332091e-23]
[ 5.78063643e-23  1.32588610e-22  4.39082614e-23 -2.70069606e-23
 -7.31031444e-23 -3.95827875e-23  4.39905217e-23  4.55563433e-23
 -8.16322984e-24  8.53864959e-23]
Checking the noise that was generated in inject_signal ifo:
[-1.22532977e-22  6.66365789e-23 -5.06552575e-23 -4.73504379e-23
 -3.56446604e-23 -3.10415725e-23 -1.00041769e-22  9.89553440e-23
 -8.67165690e-23 -5.68719956e-23]
[ 1.11119931e-23  5.36356940e-25  6.95689326e-23  2.23320074e-23
  2.23044252e-23 -2.91189396e-23  1.47110539e-23 -1.91413731e-23
  1.02334453e-23 -8.18620549e-23]
Checking the noise that was generated in inject_signal ifo:
[ 7.09817971e-23 -7.22153367e-23 -1.76423313e-23  1.05517206e-22
 -1.45715863e-22  4.33490907e-23  9.25165715e-24  5.30410660e-24
 -1.13946444e-22  1.91086791e-25]
[ 3.18996955e-23  2.18797671e-23 -9.98872821e-23 -5.49711436e-23
  1.89682078e-23 -2.62778096e-25 -1.80181822e-25 -6.75791748e-23
  1.85950134e-24 -3.54624783e-23]
Checking the noise that was generated in inject_signal ifo:
[ 1.55845823e-22 -5.16297411e-23 -5.35805220e-23  4.78438625e-25
 -5.31944319e-23 -3.82237536e-23 -3.12154080e-24 -7.61779068e-23
 -1.83336519e-24 -1.00398732e-22]
[ 1.53378461e-22  6.30014844e-23 -5.50769551e-23 -1.46123261e-23
  6.30906329e-23 -1.27037425e-22  1.00860978e-22 -3.66627758e-23
  1.09721427e-22 -3.21954402e-23]
Checking the noise that was generated in inject_signal ifo:
[-1.22532977e-22  6.66365789e-23 -5.06552575e-23 -4.73504379e-23
 -3.56446604e-23 -3.10415725e-23 -1.00041769e-22  9.89553440e-23
 -8.67165690e-23 -5.68719956e-23]
[ 1.11119931e-23  5.36356940e-25  6.95689326e-23  2.23320074e-23
  2.23044252e-23 -2.91189396e-23  1.47110539e-23 -1.91413731e-23
  1.02334453e-23 -8.18620549e-23]
Checking the noise that was generated in inject_signal ifo:
[ 7.09817971e-23 -7.22153367e-23 -1.76423313e-23  1.05517206e-22
 -1.45715863e-22  4.33490907e-23  9.25165715e-24  5.30410660e-24
 -1.13946444e-22  1.91086791e-25]
[ 3.18996955e-23  2.18797671e-23 -9.98872821e-23 -5.49711436e-23
  1.89682078e-23 -2.62778096e-25 -1.80181822e-25 -6.75791748e-23
  1.85950134e-24 -3.54624783e-23]
Checking the noise that was generated in inject_signal ifo:
[ 1.55845823e-22 -5.16297411e-23 -5.35805220e-23  4.78438625e-25
 -5.31944319e-23 -3.82237536e-23 -3.12154080e-24 -7.61779068e-23
 -1.83336519e-24 -1.00398732e-22]
[ 1.53378461e-22  6.30014844e-23 -5.50769551e-23 -1.46123261e-23
  6.30906329e-23 -1.27037425e-22  1.00860978e-22 -3.66627758e-23
  1.09721427e-22 -3.21954402e-23]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.1807994842529297 seconds
Using provided reference parameters:
ref_params for relative binning:
{'M_c': 1.2425129280676785, 'q': 0.7205924047848513, 's1_z': 0.046934193750033854, 's2_z': -0.04150143390267036, 'lambda_1': 163.81384496003696, 'lambda_2': 1141.8097060468965, 'cos_iota': 0.9302328418224595, 'd_L': 390.02005225678823, 't_c': 0.06308334606448626, 'phase_c': 3.0052952419629384, 'psi': 1.5074209603584583, 'ra': 4.045160003539005, 'sin_dec': -0.018303235207186574, 'eta': 0.24340734391561086, 'iota': Array(0.37574949, dtype=float64, weak_type=True), 'dec': Array(-0.01830426, dtype=float64, weak_type=True), 'H1_SNR': 10.441881273031179, 'L1_SNR': 12.320936113484139, 'V1_SNR': 6.229430556534671, 'network_SNR': 17.310232704713265, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5112266540527344 seconds
Time for h_sky_low and h_sky_center: 5.6057891845703125 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.7409749031066895
Going to compute coefficients . . .
Time for computing coefficients: 167.81483554840088 seconds
Time for computing coefficients: 7.3405139446258545 seconds
Time for computing coefficients: 7.359547138214111 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/100 [00:00<?, ?it/s]Tuning global sampler:   1%|          | 1/100 [02:02<3:21:33, 122.15s/it]Tuning global sampler:   2%|▏         | 2/100 [02:06<1:26:33, 52.99s/it] Tuning global sampler:   3%|▎         | 3/100 [02:11<49:58, 30.91s/it]  Tuning global sampler:   4%|▍         | 4/100 [02:15<32:51, 20.54s/it]Tuning global sampler:   5%|▌         | 5/100 [02:20<23:24, 14.79s/it]Tuning global sampler:   6%|▌         | 6/100 [02:25<17:45, 11.33s/it]Tuning global sampler:   7%|▋         | 7/100 [02:29<14:07,  9.11s/it]Tuning global sampler:   8%|▊         | 8/100 [02:34<11:46,  7.68s/it]Tuning global sampler:   9%|▉         | 9/100 [02:38<10:10,  6.71s/it]Tuning global sampler:  10%|█         | 10/100 [02:43<09:00,  6.00s/it]Tuning global sampler:  11%|█         | 11/100 [02:47<08:15,  5.57s/it]Tuning global sampler:  12%|█▏        | 12/100 [02:52<07:43,  5.27s/it]Tuning global sampler:  13%|█▎        | 13/100 [02:57<07:19,  5.06s/it]Tuning global sampler:  14%|█▍        | 14/100 [03:01<07:04,  4.93s/it]Tuning global sampler:  15%|█▌        | 15/100 [03:06<06:51,  4.85s/it]Tuning global sampler:  16%|█▌        | 16/100 [03:11<06:41,  4.78s/it]Tuning global sampler:  17%|█▋        | 17/100 [03:16<06:57,  5.03s/it]Tuning global sampler:  18%|█▊        | 18/100 [03:21<06:42,  4.91s/it]Tuning global sampler:  19%|█▉        | 19/100 [03:25<06:31,  4.83s/it]Tuning global sampler:  20%|██        | 20/100 [03:30<06:21,  4.77s/it]Tuning global sampler:  21%|██        | 21/100 [03:35<06:14,  4.73s/it]Tuning global sampler:  22%|██▏       | 22/100 [03:39<06:05,  4.69s/it]Tuning global sampler:  23%|██▎       | 23/100 [03:44<05:59,  4.66s/it]Tuning global sampler:  24%|██▍       | 24/100 [03:48<05:48,  4.59s/it]Tuning global sampler:  25%|██▌       | 25/100 [03:53<05:39,  4.53s/it]Tuning global sampler:  26%|██▌       | 26/100 [03:57<05:32,  4.49s/it]Tuning global sampler:  27%|██▋       | 27/100 [04:01<05:25,  4.46s/it]Tuning global sampler:  28%|██▊       | 28/100 [04:06<05:19,  4.44s/it]Tuning global sampler:  29%|██▉       | 29/100 [04:10<05:14,  4.42s/it]Tuning global sampler:  30%|███       | 30/100 [04:15<05:08,  4.41s/it]Tuning global sampler:  31%|███       | 31/100 [04:19<05:04,  4.41s/it]Tuning global sampler:  32%|███▏      | 32/100 [04:23<04:59,  4.41s/it]Tuning global sampler:  33%|███▎      | 33/100 [04:28<04:54,  4.39s/it]Tuning global sampler:  34%|███▍      | 34/100 [04:32<04:49,  4.38s/it]Tuning global sampler:  35%|███▌      | 35/100 [04:37<04:45,  4.39s/it]Tuning global sampler:  36%|███▌      | 36/100 [04:41<04:41,  4.40s/it]Tuning global sampler:  37%|███▋      | 37/100 [04:45<04:36,  4.39s/it]Tuning global sampler:  38%|███▊      | 38/100 [04:51<04:51,  4.70s/it]Tuning global sampler:  39%|███▉      | 39/100 [04:55<04:40,  4.60s/it]Tuning global sampler:  40%|████      | 40/100 [05:00<04:32,  4.53s/it]Tuning global sampler:  41%|████      | 41/100 [05:04<04:24,  4.49s/it]Tuning global sampler:  42%|████▏     | 42/100 [05:08<04:18,  4.46s/it]Tuning global sampler:  43%|████▎     | 43/100 [05:13<04:12,  4.44s/it]Tuning global sampler:  44%|████▍     | 44/100 [05:17<04:07,  4.41s/it]Tuning global sampler:  45%|████▌     | 45/100 [05:21<04:01,  4.40s/it]Tuning global sampler:  46%|████▌     | 46/100 [05:26<03:57,  4.39s/it]Tuning global sampler:  47%|████▋     | 47/100 [05:30<03:52,  4.39s/it]Tuning global sampler:  48%|████▊     | 48/100 [05:35<03:48,  4.39s/it]Tuning global sampler:  49%|████▉     | 49/100 [05:39<03:43,  4.39s/it]Tuning global sampler:  50%|█████     | 50/100 [05:43<03:39,  4.39s/it]Tuning global sampler:  51%|█████     | 51/100 [05:48<03:35,  4.39s/it]Tuning global sampler:  52%|█████▏    | 52/100 [05:52<03:30,  4.39s/it]Tuning global sampler:  53%|█████▎    | 53/100 [05:56<03:26,  4.39s/it]Tuning global sampler:  54%|█████▍    | 54/100 [06:01<03:21,  4.38s/it]Tuning global sampler:  55%|█████▌    | 55/100 [06:05<03:16,  4.37s/it]Tuning global sampler:  56%|█████▌    | 56/100 [06:10<03:12,  4.37s/it]Tuning global sampler:  57%|█████▋    | 57/100 [06:14<03:08,  4.37s/it]Tuning global sampler:  58%|█████▊    | 58/100 [06:19<03:17,  4.70s/it]Tuning global sampler:  59%|█████▉    | 59/100 [06:24<03:08,  4.61s/it]Tuning global sampler:  60%|██████    | 60/100 [06:28<03:01,  4.54s/it]Tuning global sampler:  61%|██████    | 61/100 [06:33<02:55,  4.50s/it]Tuning global sampler:  62%|██████▏   | 62/100 [06:37<02:50,  4.48s/it]Tuning global sampler:  63%|██████▎   | 63/100 [06:41<02:45,  4.46s/it]Tuning global sampler:  64%|██████▍   | 64/100 [06:46<02:40,  4.46s/it]Tuning global sampler:  65%|██████▌   | 65/100 [06:50<02:35,  4.44s/it]Tuning global sampler:  66%|██████▌   | 66/100 [06:55<02:30,  4.42s/it]Tuning global sampler:  67%|██████▋   | 67/100 [06:59<02:25,  4.41s/it]Tuning global sampler:  68%|██████▊   | 68/100 [07:04<02:23,  4.47s/it]Tuning global sampler:  69%|██████▉   | 69/100 [07:08<02:18,  4.46s/it]Tuning global sampler:  70%|███████   | 70/100 [07:13<02:13,  4.45s/it]Tuning global sampler:  71%|███████   | 71/100 [07:17<02:08,  4.43s/it]Tuning global sampler:  72%|███████▏  | 72/100 [07:21<02:03,  4.42s/it]Tuning global sampler:  73%|███████▎  | 73/100 [07:26<01:59,  4.42s/it]Tuning global sampler:  74%|███████▍  | 74/100 [07:30<01:54,  4.42s/it]Tuning global sampler:  75%|███████▌  | 75/100 [07:35<01:50,  4.42s/it]Tuning global sampler:  76%|███████▌  | 76/100 [07:39<01:46,  4.42s/it]Tuning global sampler:  77%|███████▋  | 77/100 [07:43<01:41,  4.40s/it]Tuning global sampler:  78%|███████▊  | 78/100 [07:48<01:36,  4.39s/it]Tuning global sampler:  79%|███████▉  | 79/100 [07:52<01:32,  4.39s/it]Tuning global sampler:  80%|████████  | 80/100 [07:58<01:34,  4.71s/it]Tuning global sampler:  81%|████████  | 81/100 [08:02<01:27,  4.62s/it]Tuning global sampler:  82%|████████▏ | 82/100 [08:06<01:22,  4.56s/it]Tuning global sampler:  83%|████████▎ | 83/100 [08:11<01:16,  4.51s/it]Tuning global sampler:  84%|████████▍ | 84/100 [08:15<01:11,  4.48s/it]Tuning global sampler:  85%|████████▌ | 85/100 [08:20<01:06,  4.45s/it]Tuning global sampler:  86%|████████▌ | 86/100 [08:24<01:02,  4.44s/it]Tuning global sampler:  87%|████████▋ | 87/100 [08:28<00:57,  4.44s/it]Tuning global sampler:  88%|████████▊ | 88/100 [08:33<00:52,  4.42s/it]Tuning global sampler:  89%|████████▉ | 89/100 [08:37<00:48,  4.40s/it]Tuning global sampler:  90%|█████████ | 90/100 [08:42<00:43,  4.40s/it]Tuning global sampler:  91%|█████████ | 91/100 [08:46<00:39,  4.40s/it]Tuning global sampler:  91%|█████████ | 91/100 [08:50<00:52,  5.83s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.20s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.20s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.20s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.20s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.20s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.20s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.20s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.20s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.20s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.20s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.20s/it]
17:29 ninjax INFO    : Saving samples to ./outdir/injection_14/results_training.npz
17:29 ninjax INFO    : Saving the NF
17:29 ninjax INFO    : Time taken: 570.5752019882202 seconds (9.50958669980367 minutes)
17:29 ninjax INFO    : Creating the final corner plot
17:29 ninjax INFO    : Dumping the final production chains
17:29 ninjax INFO    : Chains shape is: (13, 220000)
17:29 ninjax INFO    : Key: M_c: ESS = 33140, Rhat = 1.019746395307326
17:29 ninjax INFO    : Key: q: ESS = 21051, Rhat = 1.0294316727254986
17:29 ninjax INFO    : Key: s1_z: ESS = 27702, Rhat = 1.0222698570727773
17:29 ninjax INFO    : Key: s2_z: ESS = 24969, Rhat = 1.0242529438810535
17:29 ninjax INFO    : Key: lambda_1: ESS = 27876, Rhat = 1.0227039260174078
17:29 ninjax INFO    : Key: lambda_2: ESS = 26803, Rhat = 1.0241994150563216
17:29 ninjax INFO    : Key: cos_iota: ESS = 15898, Rhat = 1.0378582660064464
17:29 ninjax INFO    : Key: d_L: ESS = 14522, Rhat = 1.04107824746186
17:29 ninjax INFO    : Key: t_c: ESS = 28125, Rhat = 1.0226324517332146
17:29 ninjax INFO    : Key: phase_c: ESS = 23715, Rhat = 1.026611407084443
17:29 ninjax INFO    : Key: psi: ESS = 39942, Rhat = 1.023909753893629
17:29 ninjax INFO    : Key: ra: ESS = 21424, Rhat = 1.0282646813134493
17:29 ninjax INFO    : Key: sin_dec: ESS = 23121, Rhat = 1.0264856862506357
17:29 ninjax INFO    : Key: eta: ESS = 21051, Rhat = 1.0294316727254986
17:29 ninjax INFO    : Key: iota: ESS = 15898, Rhat = 1.0378582660064464
17:29 ninjax INFO    : Key: dec: ESS = 23121, Rhat = 1.0264856862506357
17:29 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.264 +/- 0.129
q: 0.690 +/- 0.215
s1_z: 0.003 +/- 0.026
s2_z: 0.006 +/- 0.027
lambda_1: 1651.804 +/- 1413.361
lambda_2: 2065.897 +/- 1430.172
cos_iota: 0.343 +/- 0.439
d_L: 389.039 +/- 69.544
t_c: 0.061 +/- 0.035
phase_c: 3.110 +/- 1.739
psi: 1.503 +/- 0.889
ra: 3.107 +/- 1.664
sin_dec: 0.056 +/- 0.414
Log probability: 66.737 +/- 64.740
Local acceptance: 0.681 +/- 0.466
Global acceptance: 0.012 +/- 0.110
Max loss: 22.796, Min loss: 5.165
Production summary
==========
M_c: 1.243 +/- 0.000
q: 0.834 +/- 0.105
s1_z: 0.008 +/- 0.025
s2_z: 0.003 +/- 0.027
lambda_1: 531.030 +/- 449.780
lambda_2: 935.310 +/- 750.571
cos_iota: 0.799 +/- 0.159
d_L: 343.145 +/- 61.480
t_c: 0.063 +/- 0.001
phase_c: 3.181 +/- 1.815
psi: 1.571 +/- 0.917
ra: 4.052 +/- 0.015
sin_dec: -0.049 +/- 0.033
Log probability: 134.991 +/- 2.359
Local acceptance: 0.367 +/- 0.482
Global acceptance: 0.115 +/- 0.319
DONE

JOB STATISTICS
==============
Job ID: 10814702
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:12:13
CPU Efficiency: 5.58% of 03:38:56 core-walltime
Job Wall-clock time: 00:13:41
Memory Utilized: 4.59 GB
Memory Efficiency: 45.92% of 10.00 GB
