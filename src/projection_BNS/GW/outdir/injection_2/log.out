Wed Mar 26 16:11:33 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
16:11 ninjax INFO    : Checking and setting outdir
16:11 ninjax INFO    : The outdir is set to ./outdir/injection_2
16:11 ninjax INFO    : Loading the given config
16:11 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
16:11 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '100', 'n_loop_production': '20', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '50', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '10', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
16:11 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/outdir/injection_2/complete_config.json
16:11 ninjax INFO    : No seed specified. Generating a random seed: 97682
16:11 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 194693
16:11 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 247518
16:11 ninjax INFO    : Loading the priors
16:11 ninjax INFO    :    Mc_prior = Uniform(1.0, 2.2, naming=["M_c"])
16:11 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
16:11 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
16:11 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
16:11 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
16:11 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
16:11 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
16:11 ninjax INFO    :    dL_prior = PowerLaw(1.0, 500.0, 2.0, naming=["d_L"])
16:11 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
16:11 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
16:11 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
16:11 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
16:11 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
16:11 ninjax INFO    : Finished prior setup
16:11 ninjax INFO    : Setting the transforms
16:11 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
16:11 ninjax INFO    : transforms_str_list has 3 elements
16:11 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
16:11 ninjax INFO    : Setting the likelihood
16:11 ninjax INFO    : GW likelihood provided, setting up the GW pipe
16:11 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz
16:11 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz for BNS injections
16:11 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
16:11 ninjax INFO    : self.is_BNS_run is True
16:11 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
16:11 ninjax INFO    : GW run is an injection
16:11 ninjax INFO    : Setting up GW injection . . . 
16:11 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
16:11 ninjax INFO    : Generating new injection
16:11 ninjax INFO    : Sanity check: generated parameters:
16:11 ninjax INFO    : {'M_c': 1.505331284945548, 'q': 0.4188583047630885, 's1_z': -0.002884818800238144, 's2_z': -0.03569024900508142, 'lambda_1': 2123.373459588742, 'lambda_2': 3477.930226910214, 'cos_iota': -0.2096944362774309, 'd_L': 399.4951634245864, 't_c': 0.0032818764206309636, 'phase_c': 1.5661193377390956, 'psi': 0.1498220566025326, 'ra': 6.03139154722953, 'sin_dec': -0.6819897232391088}
16:11 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz . . . 
16:11 ninjax INFO    : Injected lambda_1: 5.2203813963268075
16:11 ninjax INFO    : Injected lambda_2: 1596.5900065640749
16:11 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.505331284945548 is 128.0
16:11 ninjax INFO    : After transforms, the injection parameters are:
16:11 ninjax INFO    : {'M_c': 1.505331284945548, 'q': 0.4188583047630885, 's1_z': -0.002884818800238144, 's2_z': -0.03569024900508142, 'lambda_1': 5.2203813963268075, 'lambda_2': 1596.5900065640749, 'cos_iota': -0.2096944362774309, 'd_L': 399.4951634245864, 't_c': 0.0032818764206309636, 'phase_c': 1.5661193377390956, 'psi': 0.1498220566025326, 'ra': 6.03139154722953, 'sin_dec': -0.6819897232391088, 'eta': 0.20806023163534323, 'iota': Array(1.78205876, dtype=float64, weak_type=True), 'dec': Array(-0.75047977, dtype=float64, weak_type=True)}
16:11 ninjax INFO    : The trial injection parameters are {'M_c': 1.505331284945548, 'eta': 0.20806023163534323, 's1_z': -0.002884818800238144, 's2_z': -0.03569024900508142, 'lambda_1': 5.2203813963268075, 'lambda_2': 1596.5900065640749, 'd_L': 399.4951634245864, 'phase_c': 1.5661193377390956, 'iota': 1.7820587642669656, 't_c': 0.0032818764206309636, 'psi': 0.1498220566025326, 'ra': 6.03139154722953, 'dec': -0.750479769056788}
16:11 ninjax INFO    : Injecting signals . . .
16:11 ninjax INFO    : self.ifos
16:11 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
16:11 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
16:11 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
16:11 ninjax INFO    : [-3.24487386e-23-2.31941532e-23j -2.37821917e-23+4.11217423e-23j
  8.13770560e-23-2.75613749e-23j ...
 -5.28226836e-24+3.77011754e-23j -5.40005313e-24-2.19654721e-23j
 -4.75188150e-24-6.81626723e-25j]
16:11 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
16:11 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
16:11 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
16:11 ninjax INFO    : [ 2.05832793e-23+2.53975675e-23j -9.97542274e-23+1.41848776e-22j
  5.79930563e-23+5.66828428e-24j ...
  3.48033839e-23+2.52456298e-23j  3.03015560e-23-8.71064547e-24j
 -2.23372677e-23-1.95408512e-24j]
16:11 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
16:11 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
16:11 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
16:11 ninjax INFO    : [-3.21970752e-23+2.44191212e-23j -1.26638607e-23-1.22662763e-23j
 -4.60081010e-23+5.96569296e-23j ...
 -4.01982796e-23-2.42621634e-23j  3.02506512e-23+2.34957705e-24j
 -2.50384798e-23-8.37867739e-23j]
16:11 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
16:11 ninjax INFO    : SNR for ifo H1 is 3.374983704827873
16:11 ninjax INFO    : SNR for ifo L1 is 1.626559948248401
16:11 ninjax INFO    : SNR for ifo V1 is 4.880605210836406
16:11 ninjax INFO    : The network SNR is 6.152765191126913
16:11 ninjax INFO    : The network SNR does not pass the threshold, trying again
16:11 ninjax INFO    : Generating new injection
16:11 ninjax INFO    : Sanity check: generated parameters:
16:11 ninjax INFO    : {'M_c': 1.5816600304597768, 'q': 0.7065404367025393, 's1_z': 0.04975328561477721, 's2_z': -0.0046132133579306345, 'lambda_1': 2296.105987061662, 'lambda_2': 256.2777746195988, 'cos_iota': -0.44556947651519696, 'd_L': 497.93785156263306, 't_c': -0.0642626937801826, 'phase_c': 1.3954528692647683, 'psi': 1.1828007985066649, 'ra': 5.9002288134659295, 'sin_dec': 0.06887072097590208}
16:11 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz . . . 
16:11 ninjax INFO    : Injected lambda_1: 20.42592746824338
16:11 ninjax INFO    : Injected lambda_2: 303.20887841513814
16:11 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.5816600304597768 is 128.0
16:11 ninjax INFO    : After transforms, the injection parameters are:
16:11 ninjax INFO    : {'M_c': 1.5816600304597768, 'q': 0.7065404367025393, 's1_z': 0.04975328561477721, 's2_z': -0.0046132133579306345, 'lambda_1': 20.42592746824338, 'lambda_2': 303.20887841513814, 'cos_iota': -0.44556947651519696, 'd_L': 497.93785156263306, 't_c': -0.0642626937801826, 'phase_c': 1.3954528692647683, 'psi': 1.1828007985066649, 'ra': 5.9002288134659295, 'sin_dec': 0.06887072097590208, 'eta': 0.24260729501110828, 'iota': Array(2.0326066, dtype=float64, weak_type=True), 'dec': Array(0.06892528, dtype=float64, weak_type=True)}
16:11 ninjax INFO    : The trial injection parameters are {'M_c': 1.5816600304597768, 'eta': 0.24260729501110828, 's1_z': 0.04975328561477721, 's2_z': -0.0046132133579306345, 'lambda_1': 20.42592746824338, 'lambda_2': 303.20887841513814, 'd_L': 497.93785156263306, 'phase_c': 1.3954528692647683, 'iota': 2.032606597807923, 't_c': -0.0642626937801826, 'psi': 1.1828007985066649, 'ra': 5.9002288134659295, 'dec': 0.06892528184014726}
16:11 ninjax INFO    : Injecting signals . . .
16:11 ninjax INFO    : self.ifos
16:11 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
16:11 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
16:11 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
16:11 ninjax INFO    : [-3.16037027e-23-2.56981113e-23j -2.49103698e-23+3.92618155e-23j
  7.97804480e-23-2.77851246e-23j ...
 -5.28226230e-24+3.77011734e-23j -5.40004691e-24-2.19654735e-23j
 -4.75187519e-24-6.81627410e-25j]
16:11 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
16:11 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
16:11 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
16:11 ninjax INFO    : [ 2.01362305e-23+2.68847820e-23j -9.88980038e-23+1.42736082e-22j
  5.88642442e-23+5.30296773e-24j ...
  3.48033891e-23+2.52456325e-23j  3.03015609e-23-8.71064229e-24j
 -2.23372632e-23-1.95408146e-24j]
16:11 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
16:11 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
16:11 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
16:11 ninjax INFO    : [-3.24767707e-23+2.36233500e-23j -1.23352348e-23-1.20461454e-23j
 -4.45188246e-23+5.90578946e-23j ...
 -4.01982897e-23-2.42621591e-23j  3.02506407e-23+2.34958040e-24j
 -2.50384905e-23-8.37867716e-23j]
16:11 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
16:11 ninjax INFO    : SNR for ifo H1 is 3.676500814168565
16:11 ninjax INFO    : SNR for ifo L1 is 3.356013878365895
16:11 ninjax INFO    : SNR for ifo V1 is 4.997334362274976
16:11 ninjax INFO    : The network SNR is 7.053569175725213
16:11 ninjax INFO    : The network SNR does not pass the threshold, trying again
16:11 ninjax INFO    : Generating new injection
16:11 ninjax INFO    : Sanity check: generated parameters:
16:11 ninjax INFO    : {'M_c': 2.1107776007086656, 'q': 0.14443560280465778, 's1_z': -0.03092231619153292, 's2_z': -0.010620228806029884, 'lambda_1': 4683.112753336036, 'lambda_2': 145.8974816624481, 'cos_iota': 0.7157706716023902, 'd_L': 411.5738091583284, 't_c': 0.006267977842296407, 'phase_c': 5.523221019641127, 'psi': 2.169205838476534, 'ra': 1.4670295946484082, 'sin_dec': -0.955254530481191}
16:11 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/target_eos.npz . . . 
16:11 ninjax INFO    : Injected lambda_1: 5.2203813963268075
16:11 ninjax INFO    : Injected lambda_2: 3117.491246751232
16:11 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 2.1107776007086656 is 64.0
16:11 ninjax INFO    : After transforms, the injection parameters are:
16:11 ninjax INFO    : {'M_c': 2.1107776007086656, 'q': 0.14443560280465778, 's1_z': -0.03092231619153292, 's2_z': -0.010620228806029884, 'lambda_1': 5.2203813963268075, 'lambda_2': 3117.491246751232, 'cos_iota': 0.7157706716023902, 'd_L': 411.5738091583284, 't_c': 0.006267977842296407, 'phase_c': 5.523221019641127, 'psi': 2.169205838476534, 'ra': 1.4670295946484082, 'sin_dec': -0.955254530481191, 'eta': 0.11027867470728174, 'iota': Array(0.77306926, dtype=float64, weak_type=True), 'dec': Array(-1.27051911, dtype=float64, weak_type=True)}
16:11 ninjax INFO    : The trial injection parameters are {'M_c': 2.1107776007086656, 'eta': 0.11027867470728174, 's1_z': -0.03092231619153292, 's2_z': -0.010620228806029884, 'lambda_1': 5.2203813963268075, 'lambda_2': 3117.491246751232, 'd_L': 411.5738091583284, 'phase_c': 5.523221019641127, 'iota': 0.773069259765063, 't_c': 0.006267977842296407, 'psi': 2.169205838476534, 'ra': 1.4670295946484082, 'dec': -1.2705191141498131}
16:11 ninjax INFO    : Injecting signals . . .
16:11 ninjax INFO    : self.ifos
16:11 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
16:11 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
16:11 ninjax INFO    : [  20.         20.015625   20.03125  ... 2047.953125 2047.96875
 2047.984375]
16:11 ninjax INFO    : [ 3.50474595e-24+1.77333573e-23j -4.68132255e-23-9.41060615e-24j
 -7.89104808e-24-3.74730969e-24j ...
 -3.32413085e-24+1.58110689e-24j  8.13145104e-25-2.88775900e-23j
 -2.31782152e-24+2.41400823e-24j]
16:11 ninjax INFO    : [1.44906511e-46 1.44435812e-46 1.43973008e-46 ... 2.17771234e-47
 2.17774337e-47 2.17777440e-47]
16:11 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
16:11 ninjax INFO    : [  20.         20.015625   20.03125  ... 2047.953125 2047.96875
 2047.984375]
16:11 ninjax INFO    : [-4.48705783e-23+5.50798259e-23j -3.65414245e-24-5.19839624e-25j
 -2.34787181e-23-1.21164939e-24j ...
  1.14361434e-23+1.90146622e-24j  2.09112511e-23-1.17515245e-24j
  5.78109563e-24-2.09048900e-23j]
16:11 ninjax INFO    : [1.44906511e-46 1.44435812e-46 1.43973008e-46 ... 2.17771234e-47
 2.17774337e-47 2.17777440e-47]
16:11 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
16:11 ninjax INFO    : [  20.         20.015625   20.03125  ... 2047.953125 2047.96875
 2047.984375]
16:11 ninjax INFO    : [-4.46348541e-23+6.57195405e-24j  1.17789016e-23+4.37538140e-23j
  3.62638389e-23+7.04804275e-23j ...
  1.27994837e-23+3.87074514e-24j  4.19565642e-23-1.41637187e-24j
  1.63191411e-23-1.55802738e-23j]
16:11 ninjax INFO    : [1.43183556e-46 1.42688205e-46 1.42194425e-46 ... 6.39772204e-47
 6.39781464e-47 6.39790724e-47]
16:11 ninjax INFO    : SNR for ifo H1 is 9.442504131980815
16:11 ninjax INFO    : SNR for ifo L1 is 7.582809351382101
16:11 ninjax INFO    : SNR for ifo V1 is 8.617767118459323
16:11 ninjax INFO    : The network SNR is 14.863572654307621
16:11 ninjax INFO    : Network SNR passes threshold
16:11 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
16:11 ninjax INFO    :    M_c: 2.1107776007086656
16:11 ninjax INFO    :    q: 0.14443560280465778
16:11 ninjax INFO    :    s1_z: -0.03092231619153292
16:11 ninjax INFO    :    s2_z: -0.010620228806029884
16:11 ninjax INFO    :    lambda_1: 5.2203813963268075
16:11 ninjax INFO    :    lambda_2: 3117.491246751232
16:11 ninjax INFO    :    cos_iota: 0.7157706716023902
16:11 ninjax INFO    :    d_L: 411.5738091583284
16:11 ninjax INFO    :    t_c: 0.006267977842296407
16:11 ninjax INFO    :    phase_c: 5.523221019641127
16:11 ninjax INFO    :    psi: 2.169205838476534
16:11 ninjax INFO    :    ra: 1.4670295946484082
16:11 ninjax INFO    :    sin_dec: -0.955254530481191
16:11 ninjax INFO    :    eta: 0.11027867470728174
16:11 ninjax INFO    :    iota: 0.773069259765063
16:11 ninjax INFO    :    dec: -1.2705191141498131
16:11 ninjax INFO    :    H1_SNR: 9.442504131980815
16:11 ninjax INFO    :    L1_SNR: 7.582809351382101
16:11 ninjax INFO    :    V1_SNR: 8.617767118459323
16:11 ninjax INFO    :    network_SNR: 14.863572654307621
16:11 ninjax INFO    :    epoch: 62.0
16:11 ninjax INFO    :    gmst: 2.7288901910520846
16:11 ninjax INFO    :    duration: 64.0
16:11 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
16:11 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
16:11 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
16:13 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 100.02618598937988 seconds = 1.667103099822998 minutes
16:13 ninjax INFO    : The priors are not modified after their initialization
16:13 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
16:13 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
16:13 ninjax INFO    : sample: {'M_c': Array([1.2384107 , 1.49983069, 1.19735062], dtype=float64), 'q': Array([0.58735367, 0.85953403, 0.63652348], dtype=float64), 's1_z': Array([-0.00868385,  0.03012515, -0.01128532], dtype=float64), 's2_z': Array([-0.04384349, -0.03908836, -0.02111407], dtype=float64), 'lambda_1': Array([1777.09101136, 3607.82805798, 3979.46519655], dtype=float64), 'lambda_2': Array([2780.72495237, 2490.31871348, 3438.10475362], dtype=float64), 'cos_iota': Array([-0.80628885,  0.18309076,  0.43085804], dtype=float64), 'd_L': Array([139.15704691, 336.18124142, 329.7099202 ], dtype=float64), 't_c': Array([-0.02475063, -0.048416  ,  0.00320256], dtype=float64), 'phase_c': Array([2.22870619, 4.302025  , 2.70694212], dtype=float64), 'psi': Array([1.23039134, 0.81081268, 0.83766208], dtype=float64), 'ra': Array([6.11207473, 2.1824801 , 4.34178738], dtype=float64), 'sin_dec': Array([-0.03059747, -0.16366786, -0.79269985], dtype=float64)}
16:13 ninjax INFO    : log_prob: [-6.54498328e+02  4.48156258e-01 -7.44836516e+01]
16:13 ninjax INFO    : Checking log_prob at injection parameters: {'M_c': 2.1107776007086656, 'q': 0.14443560280465778, 's1_z': -0.03092231619153292, 's2_z': -0.010620228806029884, 'lambda_1': 5.2203813963268075, 'lambda_2': 3117.491246751232, 'cos_iota': 0.7157706716023902, 'd_L': 411.5738091583284, 't_c': 0.006267977842296407, 'phase_c': 5.523221019641127, 'psi': 2.169205838476534, 'ra': 1.4670295946484082, 'sin_dec': -0.955254530481191, 'eta': 0.11027867470728174, 'iota': Array(0.77306926, dtype=float64, weak_type=True), 'dec': Array(-1.27051911, dtype=float64, weak_type=True), 'H1_SNR': 9.442504131980815, 'L1_SNR': 7.582809351382101, 'V1_SNR': 8.617767118459323, 'network_SNR': 14.863572654307621, 'epoch': 62.0, 'gmst': 2.7288901910520846, 'duration': 64.0}
16:13 ninjax INFO    : log_prob at the injection parameters is: 102.79273202718142
16:13 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
16:13 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
16:13 ninjax INFO    : Ninjax setup complete.
16:13 ninjax INFO    : Saving output to ./outdir/injection_2/
16:13 ninjax INFO    : Using polynomial learning rate scheduler
16:13 ninjax INFO    : The hyperparameters passed to flowMC and jim are
16:13 ninjax INFO    :    n_loop_training: 100
16:13 ninjax INFO    :    n_loop_production: 20
16:13 ninjax INFO    :    n_local_steps: 100
16:13 ninjax INFO    :    n_global_steps: 1000
16:13 ninjax INFO    :    n_epochs: 50
16:13 ninjax INFO    :    n_chains: 1000
16:13 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x1526443d53f0>
16:13 ninjax INFO    :    max_samples: 50000
16:13 ninjax INFO    :    momentum: 0.9
16:13 ninjax INFO    :    batch_size: 30000
16:13 ninjax INFO    :    use_global: True
16:13 ninjax INFO    :    keep_quantile: 0.0
16:13 ninjax INFO    :    train_thinning: 10
16:13 ninjax INFO    :    output_thinning: 10
16:13 ninjax INFO    :    n_sample_max: 10000
16:13 ninjax INFO    :    num_layers: 10
16:13 ninjax INFO    :    hidden_size: [128, 128]
16:13 ninjax INFO    :    num_bins: 8
16:13 ninjax INFO    :    save_training_chains: False
16:13 ninjax INFO    :    eps_mass_matrix: 1e-05
16:13 ninjax INFO    :    use_scheduler: True
16:13 ninjax INFO    :    use_temperature: False
16:13 ninjax INFO    :    which_temperature_schedule: exponential
16:13 ninjax INFO    :    starting_temperature: 2.0
16:13 ninjax INFO    :    stop_tempering_iteration: 75
16:13 ninjax INFO    :    stopping_criterion_global_acc: 0.1
16:13 ninjax INFO    :    stopping_criterion_loss: -inf
16:13 ninjax INFO    :    nf_model_kwargs: {}
16:13 ninjax INFO    :    local sampler arg not shown (pretty print)
16:13 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-3.11370391e-23 -2.32509655e-23  8.09081286e-23  3.17179059e-23
  3.98191210e-24 -3.93694916e-23  2.70686093e-24  7.38603901e-23
 -2.81049300e-23 -2.29838161e-24]
[-2.40597774e-23  3.96434339e-23 -2.90598550e-23 -2.82187640e-24
 -9.93081982e-24  6.11371728e-23  9.51909906e-24  8.67716371e-23
  3.10712904e-23 -1.55286883e-23]
Checking the noise that was generated in inject_signal ifo:
[ 1.98267517e-23 -1.00381570e-22  5.77490160e-23  7.99215819e-23
  1.29535250e-23 -2.93414648e-23  2.67948264e-23 -2.97530007e-23
 -8.26356089e-24  2.26232823e-23]
[ 2.53608864e-23  1.42272562e-22  6.38457520e-24 -3.76028120e-23
  2.52595696e-23 -7.31410706e-23 -5.32210122e-23 -1.24028006e-23
  2.35136437e-23  3.22749277e-23]
Checking the noise that was generated in inject_signal ifo:
[-2.95621010e-23 -1.12537913e-23 -4.64017660e-23  4.25027178e-24
 -2.36547945e-23  3.26259097e-24  8.60762248e-24 -1.09817565e-22
 -4.34930039e-23  6.14115411e-23]
[ 2.32564056e-23 -1.47760764e-23  5.68065214e-23 -6.95086058e-24
 -3.70628125e-23  3.16813399e-23  1.76809452e-23  2.14498655e-23
 -5.83786243e-23 -3.81094906e-23]
Checking the noise that was generated in inject_signal ifo:
[-3.11370391e-23 -2.32509655e-23  8.09081286e-23  3.17179059e-23
  3.98191210e-24 -3.93694916e-23  2.70686093e-24  7.38603901e-23
 -2.81049300e-23 -2.29838161e-24]
[-2.40597774e-23  3.96434339e-23 -2.90598550e-23 -2.82187640e-24
 -9.93081982e-24  6.11371728e-23  9.51909906e-24  8.67716371e-23
  3.10712904e-23 -1.55286883e-23]
Checking the noise that was generated in inject_signal ifo:
[ 1.98267517e-23 -1.00381570e-22  5.77490160e-23  7.99215819e-23
  1.29535250e-23 -2.93414648e-23  2.67948264e-23 -2.97530007e-23
 -8.26356089e-24  2.26232823e-23]
[ 2.53608864e-23  1.42272562e-22  6.38457520e-24 -3.76028120e-23
  2.52595696e-23 -7.31410706e-23 -5.32210122e-23 -1.24028006e-23
  2.35136437e-23  3.22749277e-23]
Checking the noise that was generated in inject_signal ifo:
[-2.95621010e-23 -1.12537913e-23 -4.64017660e-23  4.25027178e-24
 -2.36547945e-23  3.26259097e-24  8.60762248e-24 -1.09817565e-22
 -4.34930039e-23  6.14115411e-23]
[ 2.32564056e-23 -1.47760764e-23  5.68065214e-23 -6.95086058e-24
 -3.70628125e-23  3.16813399e-23  1.76809452e-23  2.14498655e-23
 -5.83786243e-23 -3.81094906e-23]
Checking the noise that was generated in inject_signal ifo:
[ 4.92315671e-24 -4.61349325e-23 -7.90978953e-24  1.20955861e-23
 -6.64776233e-24 -3.70545172e-25 -5.63457637e-24  2.06016611e-23
  3.49288195e-23 -4.27709996e-23]
[ 2.21187313e-23 -4.85603751e-24  8.53202346e-25 -1.37611919e-23
 -4.96640902e-23  3.20356861e-24 -2.46243118e-24  2.46583258e-23
  3.46908719e-23 -3.51261738e-23]
Checking the noise that was generated in inject_signal ifo:
[-4.41017108e-23 -2.30012128e-24 -2.16192101e-23 -2.22446114e-23
 -1.20071168e-23 -3.90472414e-24 -2.85883900e-23  3.37030143e-24
 -1.53430482e-23 -3.00362125e-23]
[ 5.14592591e-23 -3.96091455e-24 -4.40404274e-24 -9.93545727e-24
  1.00630636e-23  7.57036135e-23  3.66934380e-23 -1.31487629e-23
 -1.65245923e-23 -2.96914717e-23]
Checking the noise that was generated in inject_signal ifo:
[-4.71445937e-23  1.00663075e-23  3.53254831e-23  3.08099861e-23
  2.31645165e-23  1.01551689e-24  7.35983268e-23  4.11456396e-23
 -2.63419439e-23 -4.26904220e-23]
[ 1.93039207e-24  3.87679829e-23  6.52977918e-23 -1.65168965e-23
  3.01821192e-23 -1.61536987e-23 -2.56520290e-23  3.47832315e-23
  2.53096305e-23  4.33606860e-23]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.0760800838470459 seconds
Using provided reference parameters:
ref_params for relative binning:
{'M_c': 2.1107776007086656, 'q': 0.14443560280465778, 's1_z': -0.03092231619153292, 's2_z': -0.010620228806029884, 'lambda_1': 5.2203813963268075, 'lambda_2': 3117.491246751232, 'cos_iota': 0.7157706716023902, 'd_L': 411.5738091583284, 't_c': 0.006267977842296407, 'phase_c': 5.523221019641127, 'psi': 2.169205838476534, 'ra': 1.4670295946484082, 'sin_dec': -0.955254530481191, 'eta': 0.11027867470728174, 'iota': Array(0.77306926, dtype=float64, weak_type=True), 'dec': Array(-1.27051911, dtype=float64, weak_type=True), 'H1_SNR': 9.442504131980815, 'L1_SNR': 7.582809351382101, 'V1_SNR': 8.617767118459323, 'network_SNR': 14.863572654307621, 'epoch': 62.0, 'gmst': 2.7288901910520846, 'duration': 64.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.48493480682373047 seconds
Time for h_sky_low and h_sky_center: 5.510594129562378 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.5936639308929443
Going to compute coefficients . . .
Time for computing coefficients: 79.9116690158844 seconds
Time for computing coefficients: 6.495296239852905 seconds
Time for computing coefficients: 6.437224864959717 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/100 [00:00<?, ?it/s]Tuning global sampler:   1%|          | 1/100 [02:01<3:20:28, 121.50s/it]Tuning global sampler:   2%|▏         | 2/100 [02:06<1:26:44, 53.10s/it] Tuning global sampler:   3%|▎         | 3/100 [02:11<50:30, 31.25s/it]  Tuning global sampler:   4%|▍         | 4/100 [02:17<33:33, 20.98s/it]Tuning global sampler:   5%|▌         | 5/100 [02:23<24:39, 15.57s/it]Tuning global sampler:   6%|▌         | 6/100 [02:28<18:46, 11.98s/it]Tuning global sampler:   7%|▋         | 7/100 [02:33<15:01,  9.69s/it]Tuning global sampler:   8%|▊         | 8/100 [02:38<12:33,  8.19s/it]Tuning global sampler:   9%|▉         | 9/100 [02:43<10:54,  7.19s/it]Tuning global sampler:  10%|█         | 10/100 [02:47<09:40,  6.45s/it]Tuning global sampler:  11%|█         | 11/100 [02:53<09:00,  6.07s/it]Tuning global sampler:  12%|█▏        | 12/100 [02:58<08:24,  5.73s/it]Tuning global sampler:  13%|█▎        | 13/100 [03:03<07:58,  5.50s/it]Tuning global sampler:  14%|█▍        | 14/100 [03:08<07:59,  5.58s/it]Tuning global sampler:  15%|█▌        | 15/100 [03:13<07:38,  5.40s/it]Tuning global sampler:  16%|█▌        | 16/100 [03:18<07:22,  5.27s/it]Tuning global sampler:  17%|█▋        | 17/100 [03:23<07:09,  5.18s/it]Tuning global sampler:  18%|█▊        | 18/100 [03:28<06:59,  5.11s/it]Tuning global sampler:  19%|█▉        | 19/100 [03:33<06:50,  5.07s/it]Tuning global sampler:  20%|██        | 20/100 [03:38<06:43,  5.04s/it]Tuning global sampler:  21%|██        | 21/100 [03:43<06:36,  5.02s/it]Tuning global sampler:  22%|██▏       | 22/100 [03:48<06:29,  4.99s/it]Tuning global sampler:  23%|██▎       | 23/100 [03:54<06:41,  5.21s/it]Tuning global sampler:  24%|██▍       | 24/100 [03:59<06:30,  5.14s/it]Tuning global sampler:  25%|██▌       | 25/100 [04:04<06:21,  5.09s/it]Tuning global sampler:  26%|██▌       | 26/100 [04:09<06:14,  5.06s/it]Tuning global sampler:  26%|██▌       | 26/100 [04:14<12:03,  9.78s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/20 [00:00<?, ?it/s]Production run:   5%|▌         | 1/20 [00:03<01:01,  3.22s/it]Production run:  10%|█         | 2/20 [00:06<00:57,  3.22s/it]Production run:  15%|█▌        | 3/20 [00:09<00:54,  3.22s/it]Production run:  20%|██        | 4/20 [00:12<00:51,  3.22s/it]Production run:  25%|██▌       | 5/20 [00:16<00:48,  3.22s/it]Production run:  30%|███       | 6/20 [00:19<00:45,  3.22s/it]Production run:  35%|███▌      | 7/20 [00:22<00:41,  3.22s/it]Production run:  40%|████      | 8/20 [00:25<00:38,  3.22s/it]Production run:  45%|████▌     | 9/20 [00:28<00:35,  3.22s/it]Production run:  50%|█████     | 10/20 [00:32<00:32,  3.22s/it]Production run:  55%|█████▌    | 11/20 [00:35<00:28,  3.22s/it]Production run:  60%|██████    | 12/20 [00:38<00:25,  3.22s/it]Production run:  65%|██████▌   | 13/20 [00:41<00:22,  3.22s/it]Production run:  70%|███████   | 14/20 [00:45<00:19,  3.22s/it]Production run:  75%|███████▌  | 15/20 [00:48<00:16,  3.22s/it]Production run:  80%|████████  | 16/20 [00:51<00:12,  3.22s/it]Production run:  85%|████████▌ | 17/20 [00:54<00:09,  3.22s/it]Production run:  90%|█████████ | 18/20 [00:57<00:06,  3.22s/it]Production run:  95%|█████████▌| 19/20 [01:01<00:03,  3.22s/it]Production run: 100%|██████████| 20/20 [01:04<00:00,  3.22s/it]Production run: 100%|██████████| 20/20 [01:04<00:00,  3.22s/it]
16:19 ninjax INFO    : Saving samples to ./outdir/injection_2/results_training.npz
16:19 ninjax INFO    : Saving the NF
16:19 ninjax INFO    : Time taken: 325.0066921710968 seconds (5.416778202851614 minutes)
16:19 ninjax INFO    : Creating the final corner plot
16:19 ninjax INFO    : Dumping the final production chains
16:19 ninjax INFO    : Chains shape is: (13, 2200000)
16:19 ninjax INFO    : Key: M_c: ESS = 19998, Rhat = 1.0296951020897303
16:19 ninjax INFO    : Key: q: ESS = 30760, Rhat = 1.0204983738092233
16:19 ninjax INFO    : Key: s1_z: ESS = 25340, Rhat = 1.0246082117404702
16:19 ninjax INFO    : Key: s2_z: ESS = 32240, Rhat = 1.0185827054404082
16:19 ninjax INFO    : Key: lambda_1: ESS = 27969, Rhat = 1.0214081339355348
16:19 ninjax INFO    : Key: lambda_2: ESS = 43998, Rhat = 1.0146358606467547
16:19 ninjax INFO    : Key: cos_iota: ESS = 29820, Rhat = 1.020669616206085
16:19 ninjax INFO    : Key: d_L: ESS = 26343, Rhat = 1.0233620268609072
16:19 ninjax INFO    : Key: t_c: ESS = 27213, Rhat = 1.0220004470947512
16:19 ninjax INFO    : Key: phase_c: ESS = 17992, Rhat = 1.0338455049085191
16:19 ninjax INFO    : Key: psi: ESS = 39849, Rhat = 1.015288170604686
16:19 ninjax INFO    : Key: ra: ESS = 36043, Rhat = 1.0180316560100862
16:19 ninjax INFO    : Key: sin_dec: ESS = 37644, Rhat = 1.016235014925278
16:19 ninjax INFO    : Key: eta: ESS = 30760, Rhat = 1.0207666409353302
16:19 ninjax INFO    : Key: iota: ESS = 29820, Rhat = 1.020669616206085
16:19 ninjax INFO    : Key: dec: ESS = 37644, Rhat = 1.016235014925278
16:19 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.964 +/- 0.331
q: 0.281 +/- 0.214
s1_z: -0.004 +/- 0.028
s2_z: 0.000 +/- 0.029
lambda_1: 2200.248 +/- 1513.082
lambda_2: 2244.355 +/- 1387.436
cos_iota: 0.239 +/- 0.313
d_L: 410.084 +/- 69.956
t_c: 0.037 +/- 0.039
phase_c: 3.145 +/- 1.699
psi: 1.647 +/- 0.871
ra: 2.076 +/- 1.227
sin_dec: -0.632 +/- 0.517
Log probability: 39.492 +/- 54.806
Local acceptance: 0.994 +/- 0.075
Global acceptance: 0.013 +/- 0.113
Max loss: 35.453, Min loss: 6.799
Production summary
==========
M_c: 2.112 +/- 0.001
q: 0.145 +/- 0.009
s1_z: -0.008 +/- 0.028
s2_z: -0.001 +/- 0.029
lambda_1: 249.410 +/- 152.291
lambda_2: 2487.667 +/- 1439.119
cos_iota: 0.700 +/- 0.201
d_L: 395.861 +/- 76.283
t_c: 0.012 +/- 0.004
phase_c: 3.095 +/- 1.794
psi: 1.545 +/- 0.925
ra: 1.446 +/- 0.069
sin_dec: -0.966 +/- 0.008
Log probability: 103.470 +/- 2.256
Local acceptance: 0.989 +/- 0.104
Global acceptance: 0.094 +/- 0.291
DONE

JOB STATISTICS
==============
Job ID: 10811215
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:08:05
CPU Efficiency: 5.92% of 02:16:32 core-walltime
Job Wall-clock time: 00:08:32
Memory Utilized: 3.69 GB
Memory Efficiency: 36.91% of 10.00 GB
