Wed Apr  2 07:33:40 CEST 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
07:33 ninjax INFO    : Checking and setting outdir
07:33 ninjax INFO    : Found generation prior file ./Aplus/injection_17/generation_prior.prior
07:33 ninjax INFO    : The outdir is set to ./Aplus/injection_17
07:33 ninjax INFO    : Loading the given config
07:33 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
07:33 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/eos/jester_soft.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/psds/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/psds/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/psds/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
07:33 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/jester_soft/Aplus/injection_17/complete_config.json
07:33 ninjax INFO    : No seed specified. Generating a random seed: 430850
07:33 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 561798
07:33 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 88212
07:33 ninjax INFO    : Loading the priors
07:33 ninjax INFO    : Setting up the prior
07:33 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
07:33 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
07:33 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
07:33 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
07:33 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
07:33 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
07:33 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
07:33 ninjax INFO    :    dL_prior = PowerLaw(1.0, 1000.0, 2.0, naming=["d_L"])
07:33 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
07:33 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
07:33 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
07:33 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
07:33 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
07:33 ninjax INFO    : Setting up the generation prior
07:33 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 1.99, naming=["mass_1_source"])
07:33 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 1.99, naming=["mass_2_source"])
07:33 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
07:33 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
07:33 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
07:33 ninjax INFO    :    dL_prior = PowerLaw(10.0, 460.0, 2.0, naming=["d_L"])
07:33 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
07:33 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
07:33 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
07:33 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
07:33 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
07:33 ninjax INFO    : Finished prior setup
07:33 ninjax INFO    : Setting the transforms
07:33 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
07:33 ninjax INFO    : transforms_str_list has 3 elements
07:33 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
07:33 ninjax INFO    : Setting the likelihood
07:33 ninjax INFO    : GW likelihood provided, setting up the GW pipe
07:33 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/eos/jester_soft.npz
07:33 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/eos/jester_soft.npz for BNS injections
07:33 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
07:33 ninjax INFO    : self.is_BNS_run is True
07:33 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
07:33 ninjax INFO    : GW run is an injection
07:33 ninjax INFO    : Setting up GW injection . . . 
07:33 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
07:33 ninjax INFO    : Generating new injection
07:33 ninjax INFO    : Sanity check: generated parameters:
07:33 ninjax INFO    : {'mass_1_source': 1.0567038844090895, 'mass_2_source': 1.0172042459490185, 's1_z': -0.028363705242479467, 's2_z': -0.03839399742285863, 'cos_iota': -0.4566799842497642, 'd_L': 260.39365522162115, 't_c': 0.00694842829487112, 'phase_c': 3.667143885359908, 'psi': 0.8195316153423146, 'ra': 0.06081746593520459, 'sin_dec': -0.8657835957255386}
07:33 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/eos/jester_soft.npz . . . 
07:33 ninjax INFO    : Injected lambda_1: 1259.6852804456207
07:33 ninjax INFO    : Injected lambda_2: 1621.6257315789135
07:33 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 0.9556268194097832 is 256.0
07:33 ninjax INFO    : After transforms, the injection parameters are:
07:33 ninjax INFO    : {'mass_1_source': 1.0567038844090895, 'mass_2_source': 1.0172042459490185, 's1_z': -0.028363705242479467, 's2_z': -0.03839399742285863, 'cos_iota': -0.4566799842497642, 'd_L': 260.39365522162115, 't_c': 0.00694842829487112, 'phase_c': 3.667143885359908, 'psi': 0.8195316153423146, 'ra': 0.06081746593520459, 'sin_dec': -0.8657835957255386, 'q': 0.96261995527521, 'M_c': 0.9556268194097832, 'eta': 0.24990931254350807, 'iota': Array(2.04505603, dtype=float64, weak_type=True), 'dec': Array(-1.04671414, dtype=float64, weak_type=True), 'lambda_1': 1259.6852804456207, 'lambda_2': 1621.6257315789135}
07:33 ninjax INFO    : The trial injection parameters are {'M_c': 0.9556268194097832, 'eta': 0.24990931254350807, 's1_z': -0.028363705242479467, 's2_z': -0.03839399742285863, 'lambda_1': 1259.6852804456207, 'lambda_2': 1621.6257315789135, 'd_L': 260.39365522162115, 'phase_c': 3.667143885359908, 'iota': 2.045056033239482, 't_c': 0.00694842829487112, 'psi': 0.8195316153423146, 'ra': 0.06081746593520459, 'dec': -1.0467141374404547}
07:33 ninjax INFO    : Injecting signals . . .
07:33 ninjax INFO    : self.ifos
07:33 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
07:33 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
07:33 ninjax INFO    : [-1.09396143e-22-1.50534824e-23j  4.76806068e-23+1.55993287e-22j
 -4.45267910e-23-6.65967823e-23j ...
  2.79623226e-23+5.81210374e-23j  2.68354344e-23+1.83219326e-24j
 -2.22112708e-23-7.36066659e-24j]
07:33 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
07:33 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
07:33 ninjax INFO    : [-5.74151369e-23+3.06983169e-23j -5.10247864e-23-3.68367046e-23j
 -1.25226964e-22-2.64321926e-23j ...
  2.58713632e-23-2.36831106e-23j  2.93155578e-23-2.91193157e-23j
 -2.53578783e-23-4.00198347e-23j]
07:33 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
07:33 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
07:33 ninjax INFO    : [ 1.51939667e-22+1.61521497e-23j -1.14512913e-22+1.94776672e-23j
 -4.33947487e-23-3.83446403e-23j ...
 -4.43985624e-23-7.11449892e-23j -1.41243866e-23+6.85603521e-24j
  3.28627636e-23+1.38037226e-23j]
07:33 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
07:33 ninjax INFO    : SNR for ifo H1 is 3.2754483465514315
07:33 ninjax INFO    : SNR for ifo L1 is 2.0797738087348936
07:33 ninjax INFO    : SNR for ifo V1 is 8.287493833531803
07:33 ninjax INFO    : The network SNR is 9.150769093756756
07:33 ninjax INFO    : The network SNR does not pass the threshold, trying again
07:33 ninjax INFO    : Generating new injection
07:33 ninjax INFO    : Sanity check: generated parameters:
07:33 ninjax INFO    : {'mass_1_source': 1.0257623709521808, 'mass_2_source': 1.8814765790737105, 's1_z': -0.04034916124633856, 's2_z': -0.0010144670238603423, 'cos_iota': 0.09863523739271196, 'd_L': 410.393692911458, 't_c': 0.028213605059628583, 'phase_c': 5.519069277327732, 'psi': 1.5184194241905238, 'ra': 0.46319359455271036, 'sin_dec': 0.9683753461365989}
07:33 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/eos/jester_soft.npz . . . 
07:33 ninjax INFO    : Injected lambda_1: 17.733035528615854
07:33 ninjax INFO    : Injected lambda_2: 1534.5731302277466
07:33 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.3096175462390458 is 256.0
07:33 ninjax INFO    : After transforms, the injection parameters are:
07:33 ninjax INFO    : {'mass_1_source': 1.8814765790737105, 'mass_2_source': 1.0257623709521808, 's1_z': -0.04034916124633856, 's2_z': -0.0010144670238603423, 'cos_iota': 0.09863523739271196, 'd_L': 410.393692911458, 't_c': 0.028213605059628583, 'phase_c': 5.519069277327732, 'psi': 1.5184194241905238, 'ra': 0.46319359455271036, 'sin_dec': 0.9683753461365989, 'q': 0.5451900822795173, 'M_c': 1.3096175462390458, 'eta': 0.22834111787880845, 'iota': Array(1.47200045, dtype=float64, weak_type=True), 'dec': Array(1.31863463, dtype=float64, weak_type=True), 'lambda_1': 17.733035528615854, 'lambda_2': 1534.5731302277466}
07:33 ninjax INFO    : The trial injection parameters are {'M_c': 1.3096175462390458, 'eta': 0.22834111787880845, 's1_z': -0.04034916124633856, 's2_z': -0.0010144670238603423, 'lambda_1': 17.733035528615854, 'lambda_2': 1534.5731302277466, 'd_L': 410.393692911458, 'phase_c': 5.519069277327732, 'iota': 1.4720004495620598, 't_c': 0.028213605059628583, 'psi': 1.5184194241905238, 'ra': 0.46319359455271036, 'dec': 1.3186346307444754}
07:33 ninjax INFO    : Injecting signals . . .
07:33 ninjax INFO    : self.ifos
07:33 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
07:33 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
07:33 ninjax INFO    : [-1.08162634e-22-1.48968544e-23j  4.88831131e-23+1.57014639e-22j
 -4.25457582e-23-6.71941164e-23j ...
  2.79623665e-23+5.81213418e-23j  2.68354634e-23+1.83249939e-24j
 -2.22112569e-23-7.36035945e-24j]
07:33 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
07:33 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
07:33 ninjax INFO    : [-5.76939231e-23+3.02819915e-23j -5.09549824e-23-3.81287986e-23j
 -1.26401922e-22-2.69476103e-23j ...
  2.58714096e-23-2.36829210e-23j  2.93155949e-23-2.91191240e-23j
 -2.53578507e-23-4.00196414e-23j]
07:33 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
07:33 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
07:33 ninjax INFO    : [ 1.54515273e-22+2.05024029e-23j -1.12986315e-22+2.32306902e-23j
 -3.83944707e-23-3.48375262e-23j ...
 -4.43983042e-23-7.11440350e-23j -1.41241751e-23+6.85700073e-24j
  3.28629279e-23+1.38046971e-23j]
07:33 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
07:33 ninjax INFO    : SNR for ifo H1 is 1.4750913657520497
07:33 ninjax INFO    : SNR for ifo L1 is 1.2667959555704404
07:33 ninjax INFO    : SNR for ifo V1 is 2.164812077987982
07:33 ninjax INFO    : The network SNR is 2.9098243698492383
07:33 ninjax INFO    : The network SNR does not pass the threshold, trying again
07:33 ninjax INFO    : Generating new injection
07:33 ninjax INFO    : Sanity check: generated parameters:
07:33 ninjax INFO    : {'mass_1_source': 1.0738118098838698, 'mass_2_source': 1.5184253521330657, 's1_z': -0.024439124437126616, 's2_z': 0.019459872867477412, 'cos_iota': -0.05373509554817302, 'd_L': 381.0783136840439, 't_c': -0.05262988337912358, 'phase_c': 6.1668295781151405, 'psi': 1.0609277375479258, 'ra': 2.6712649869617224, 'sin_dec': -0.18591077444054438}
07:33 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/eos/jester_soft.npz . . . 
07:33 ninjax INFO    : Injected lambda_1: 103.600293419776
07:33 ninjax INFO    : Injected lambda_2: 1129.4505457003575
07:33 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.2037343691955047 is 256.0
07:33 ninjax INFO    : After transforms, the injection parameters are:
07:33 ninjax INFO    : {'mass_1_source': 1.5184253521330657, 'mass_2_source': 1.0738118098838698, 's1_z': -0.024439124437126616, 's2_z': 0.019459872867477412, 'cos_iota': -0.05373509554817302, 'd_L': 381.0783136840439, 't_c': -0.05262988337912358, 'phase_c': 6.1668295781151405, 'psi': 1.0609277375479258, 'ra': 2.6712649869617224, 'sin_dec': -0.18591077444054438, 'q': 0.7071877510312851, 'M_c': 1.2037343691955047, 'eta': 0.24264545318065706, 'iota': Array(1.62455732, dtype=float64, weak_type=True), 'dec': Array(-0.18699872, dtype=float64, weak_type=True), 'lambda_1': 103.600293419776, 'lambda_2': 1129.4505457003575}
07:33 ninjax INFO    : The trial injection parameters are {'M_c': 1.2037343691955047, 'eta': 0.24264545318065706, 's1_z': -0.024439124437126616, 's2_z': 0.019459872867477412, 'lambda_1': 103.600293419776, 'lambda_2': 1129.4505457003575, 'd_L': 381.0783136840439, 'phase_c': 6.1668295781151405, 'iota': 1.6245573156627902, 't_c': -0.05262988337912358, 'psi': 1.0609277375479258, 'ra': 2.6712649869617224, 'dec': -0.18699871521651018}
07:33 ninjax INFO    : Injecting signals . . .
07:33 ninjax INFO    : self.ifos
07:33 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
07:33 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
07:33 ninjax INFO    : [-1.09140802e-22-1.27030569e-23j  5.09414132e-23+1.56278818e-22j
 -4.41859359e-23-6.80959198e-23j ...
  2.79623665e-23+5.81213418e-23j  2.68354634e-23+1.83249939e-24j
 -2.22112569e-23-7.36035945e-24j]
07:33 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
07:33 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
07:33 ninjax INFO    : [-5.68206169e-23+2.96559437e-23j -5.18316581e-23-3.81872917e-23j
 -1.25954404e-22-2.65151343e-23j ...
  2.58714096e-23-2.36829210e-23j  2.93155949e-23-2.91191240e-23j
 -2.53578507e-23-4.00196414e-23j]
07:33 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
07:33 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
07:33 ninjax INFO    : [ 1.53018253e-22+2.08809575e-23j -1.11514033e-22+2.36020648e-23j
 -3.94666787e-23-3.57907549e-23j ...
 -4.43983042e-23-7.11440350e-23j -1.41241751e-23+6.85700073e-24j
  3.28629279e-23+1.38046971e-23j]
07:33 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
07:33 ninjax INFO    : SNR for ifo H1 is 3.921529558686816
07:33 ninjax INFO    : SNR for ifo L1 is 1.4029199582098573
07:33 ninjax INFO    : SNR for ifo V1 is 0.465635234025591
07:33 ninjax INFO    : The network SNR is 4.190870394078541
07:33 ninjax INFO    : The network SNR does not pass the threshold, trying again
07:33 ninjax INFO    : Generating new injection
07:33 ninjax INFO    : Sanity check: generated parameters:
07:33 ninjax INFO    : {'mass_1_source': 1.4442745411280393, 'mass_2_source': 1.7059944799968538, 's1_z': 0.022724650917868974, 's2_z': -0.036458505711493006, 'cos_iota': 0.9843823045380868, 'd_L': 215.0012643318847, 't_c': -0.034047895660235875, 'phase_c': 3.0039588423213495, 'psi': 0.7344806169846559, 'ra': 3.776982781714553, 'sin_dec': 0.8694683523980986}
07:33 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/eos/jester_soft.npz . . . 
07:33 ninjax INFO    : Injected lambda_1: 42.90248919990489
07:33 ninjax INFO    : Injected lambda_2: 148.23789617100684
07:33 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.4318873035238189 is 128.0
07:33 ninjax INFO    : After transforms, the injection parameters are:
07:33 ninjax INFO    : {'mass_1_source': 1.7059944799968538, 'mass_2_source': 1.4442745411280393, 's1_z': 0.022724650917868974, 's2_z': -0.036458505711493006, 'cos_iota': 0.9843823045380868, 'd_L': 215.0012643318847, 't_c': -0.034047895660235875, 'phase_c': 3.0039588423213495, 'psi': 0.7344806169846559, 'ra': 3.776982781714553, 'sin_dec': 0.8694683523980986, 'q': 0.8465880505842568, 'M_c': 1.4318873035238189, 'eta': 0.2482744865690864, 'iota': Array(0.1769662, dtype=float64, weak_type=True), 'dec': Array(1.05412506, dtype=float64, weak_type=True), 'lambda_1': 42.90248919990489, 'lambda_2': 148.23789617100684}
07:33 ninjax INFO    : The trial injection parameters are {'M_c': 1.4318873035238189, 'eta': 0.2482744865690864, 's1_z': 0.022724650917868974, 's2_z': -0.036458505711493006, 'lambda_1': 42.90248919990489, 'lambda_2': 148.23789617100684, 'd_L': 215.0012643318847, 'phase_c': 3.0039588423213495, 'iota': 0.17696619840855812, 't_c': -0.034047895660235875, 'psi': 0.7344806169846559, 'ra': 3.776982781714553, 'dec': 1.0541250646086209}
07:33 ninjax INFO    : Injecting signals . . .
07:33 ninjax INFO    : self.ifos
07:33 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
07:33 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
07:33 ninjax INFO    : [-4.16002917e-23+1.21932170e-23j -9.74241550e-23-4.15060151e-23j
 -3.82717731e-23+6.22012731e-24j ...
 -2.89579865e-23+2.55532646e-23j -5.33053918e-24-5.38370644e-24j
 -1.42810570e-23-1.40036226e-23j]
07:33 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
07:33 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
07:33 ninjax INFO    : [-5.93513380e-23+3.26835640e-23j  2.31151194e-23+9.56208485e-23j
  7.76054672e-23-8.41359658e-23j ...
  2.61624025e-23-9.90296511e-25j  2.57479190e-23+1.30722709e-24j
 -5.42282042e-24+4.41611283e-24j]
07:33 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
07:33 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
07:33 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
07:33 ninjax INFO    : [-1.30820758e-22+8.28617994e-23j -9.13054213e-24+5.12978490e-23j
 -9.24425601e-23+5.29021701e-23j ...
 -2.86576073e-23-5.48769785e-23j  1.24962401e-23+2.00440083e-24j
 -9.64168931e-24+1.22816013e-23j]
07:33 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
07:33 ninjax INFO    : SNR for ifo H1 is 10.079062669724339
07:33 ninjax INFO    : SNR for ifo L1 is 7.341287088586736
07:33 ninjax INFO    : SNR for ifo V1 is 20.736556570956356
07:33 ninjax INFO    : The network SNR is 24.196834066417743
07:33 ninjax INFO    : Network SNR passes threshold
07:33 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
07:33 ninjax INFO    :    mass_1_source: 1.7059944799968538
07:33 ninjax INFO    :    mass_2_source: 1.4442745411280393
07:33 ninjax INFO    :    s1_z: 0.022724650917868974
07:33 ninjax INFO    :    s2_z: -0.036458505711493006
07:33 ninjax INFO    :    cos_iota: 0.9843823045380868
07:33 ninjax INFO    :    d_L: 215.0012643318847
07:33 ninjax INFO    :    t_c: -0.034047895660235875
07:33 ninjax INFO    :    phase_c: 3.0039588423213495
07:33 ninjax INFO    :    psi: 0.7344806169846559
07:33 ninjax INFO    :    ra: 3.776982781714553
07:33 ninjax INFO    :    sin_dec: 0.8694683523980986
07:33 ninjax INFO    :    q: 0.8465880505842568
07:33 ninjax INFO    :    M_c: 1.4318873035238189
07:33 ninjax INFO    :    eta: 0.2482744865690864
07:33 ninjax INFO    :    iota: 0.17696619840855812
07:33 ninjax INFO    :    dec: 1.0541250646086209
07:33 ninjax INFO    :    lambda_1: 42.90248919990489
07:33 ninjax INFO    :    lambda_2: 148.23789617100684
07:33 ninjax INFO    :    H1_SNR: 10.079062669724339
07:33 ninjax INFO    :    L1_SNR: 7.341287088586736
07:33 ninjax INFO    :    V1_SNR: 20.736556570956356
07:33 ninjax INFO    :    network_SNR: 24.196834066417743
07:33 ninjax INFO    :    epoch: 126.0
07:33 ninjax INFO    :    gmst: 2.7288901910520846
07:33 ninjax INFO    :    duration: 128.0
07:33 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
07:33 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
07:33 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
07:36 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 142.15947437286377 seconds = 2.369324572881063 minutes
07:36 ninjax INFO    : The priors are not modified after their initialization
07:36 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
07:36 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
07:36 ninjax INFO    : sample: {'M_c': Array([2.36712226, 1.88003169, 1.76386105], dtype=float64), 'q': Array([0.78413242, 0.63003059, 0.96513641], dtype=float64), 's1_z': Array([ 0.0241866 , -0.00511533, -0.01778134], dtype=float64), 's2_z': Array([ 0.04084266, -0.02470153, -0.0492428 ], dtype=float64), 'lambda_1': Array([3838.28811687, 2889.87217584, 2319.20387479], dtype=float64), 'lambda_2': Array([3963.07895953,  335.95265704,  450.50415875], dtype=float64), 'cos_iota': Array([0.53972668, 0.79742252, 0.00967617], dtype=float64), 'd_L': Array([892.66627151, 577.78853699, 770.17275436], dtype=float64), 't_c': Array([ 0.07361362,  0.03312091, -0.01943717], dtype=float64), 'phase_c': Array([2.88404424, 4.85629069, 1.63447212], dtype=float64), 'psi': Array([2.56436632, 0.39328636, 2.48217203], dtype=float64), 'ra': Array([4.25683509, 6.0108192 , 0.99443055], dtype=float64), 'sin_dec': Array([-0.14240784, -0.26872065, -0.80683915], dtype=float64)}
07:36 ninjax INFO    : log_prob: [-22.2695776  -85.53240463  -0.23832927]
07:36 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 1.7059944799968538, 'mass_2_source': 1.4442745411280393, 's1_z': 0.022724650917868974, 's2_z': -0.036458505711493006, 'cos_iota': 0.9843823045380868, 'd_L': 215.0012643318847, 't_c': -0.034047895660235875, 'phase_c': 3.0039588423213495, 'psi': 0.7344806169846559, 'ra': 3.776982781714553, 'sin_dec': 0.8694683523980986, 'q': 0.8465880505842568, 'M_c': 1.4318873035238189, 'eta': 0.2482744865690864, 'iota': Array(0.1769662, dtype=float64, weak_type=True), 'dec': Array(1.05412506, dtype=float64, weak_type=True), 'lambda_1': 42.90248919990489, 'lambda_2': 148.23789617100684, 'H1_SNR': 10.079062669724339, 'L1_SNR': 7.341287088586736, 'V1_SNR': 20.736556570956356, 'network_SNR': 24.196834066417743, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
07:36 ninjax INFO    : log_prob at the injection parameters is: 276.2144698117877
07:36 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
07:36 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
07:36 ninjax INFO    : Ninjax setup complete.
07:36 ninjax INFO    : Saving output to ./Aplus/injection_17/
07:36 ninjax INFO    : Using polynomial learning rate scheduler
07:36 ninjax INFO    : The hyperparameters passed to flowMC and jim are
07:36 ninjax INFO    :    n_loop_training: 200
07:36 ninjax INFO    :    n_loop_production: 10
07:36 ninjax INFO    :    n_local_steps: 100
07:36 ninjax INFO    :    n_global_steps: 1000
07:36 ninjax INFO    :    n_epochs: 25
07:36 ninjax INFO    :    n_chains: 1000
07:36 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x1495b471aa70>
07:36 ninjax INFO    :    max_samples: 50000
07:36 ninjax INFO    :    momentum: 0.9
07:36 ninjax INFO    :    batch_size: 30000
07:36 ninjax INFO    :    use_global: True
07:36 ninjax INFO    :    keep_quantile: 0.0
07:36 ninjax INFO    :    train_thinning: 10
07:36 ninjax INFO    :    output_thinning: 50
07:36 ninjax INFO    :    n_sample_max: 10000
07:36 ninjax INFO    :    num_layers: 10
07:36 ninjax INFO    :    hidden_size: [128, 128]
07:36 ninjax INFO    :    num_bins: 8
07:36 ninjax INFO    :    save_training_chains: False
07:36 ninjax INFO    :    eps_mass_matrix: 1e-05
07:36 ninjax INFO    :    use_scheduler: True
07:36 ninjax INFO    :    use_temperature: False
07:36 ninjax INFO    :    which_temperature_schedule: exponential
07:36 ninjax INFO    :    starting_temperature: 2.0
07:36 ninjax INFO    :    stop_tempering_iteration: 75
07:36 ninjax INFO    :    stopping_criterion_global_acc: 0.1
07:36 ninjax INFO    :    stopping_criterion_loss: -inf
07:36 ninjax INFO    :    nf_model_kwargs: {}
07:36 ninjax INFO    :    local sampler arg not shown (pretty print)
07:36 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-1.08145948e-22  4.91355278e-23 -4.30258168e-23 -8.86088549e-24
  5.94934896e-23  8.60811188e-23  6.22289440e-23  7.55482677e-24
  4.60326916e-23  2.13664482e-23]
[-1.42141050e-23  1.56380211e-22 -6.67087900e-23 -6.50466773e-24
 -3.26034559e-23  1.26397338e-25  4.24559837e-23 -5.58564750e-23
  6.49616134e-23  4.29938428e-23]
Checking the noise that was generated in inject_signal ifo:
[-5.74619098e-23 -5.13795626e-23 -1.25853245e-22 -1.99876820e-23
  1.06911240e-22  2.29241523e-23 -4.82608666e-23  2.76763117e-23
 -2.45722106e-23  4.62597368e-23]
[ 2.97433181e-23 -3.77243567e-23 -2.71540978e-23  1.80993437e-23
  4.03650041e-23  1.25901455e-23 -5.25398048e-23  7.27208191e-23
  3.66834410e-24 -4.57940231e-23]
Checking the noise that was generated in inject_signal ifo:
[ 1.53279744e-22 -1.11731987e-22 -3.94679830e-23  1.73517977e-22
 -2.66693554e-23 -8.81440832e-23  9.81599323e-25  3.37389403e-26
  1.44981949e-22  1.93115816e-24]
[ 2.08034113e-23  2.34381945e-23 -3.55181352e-23  4.30539216e-23
  5.62306522e-23  1.97850490e-23 -6.57125979e-23 -1.09831679e-23
  8.83523081e-25 -1.40636259e-22]
Checking the noise that was generated in inject_signal ifo:
[-1.08145948e-22  4.91355278e-23 -4.30258168e-23 -8.86088549e-24
  5.94934896e-23  8.60811188e-23  6.22289440e-23  7.55482677e-24
  4.60326916e-23  2.13664482e-23]
[-1.42141050e-23  1.56380211e-22 -6.67087900e-23 -6.50466773e-24
 -3.26034559e-23  1.26397338e-25  4.24559837e-23 -5.58564750e-23
  6.49616134e-23  4.29938428e-23]
Checking the noise that was generated in inject_signal ifo:
[-5.74619098e-23 -5.13795626e-23 -1.25853245e-22 -1.99876820e-23
  1.06911240e-22  2.29241523e-23 -4.82608666e-23  2.76763117e-23
 -2.45722106e-23  4.62597368e-23]
[ 2.97433181e-23 -3.77243567e-23 -2.71540978e-23  1.80993437e-23
  4.03650041e-23  1.25901455e-23 -5.25398048e-23  7.27208191e-23
  3.66834410e-24 -4.57940231e-23]
Checking the noise that was generated in inject_signal ifo:
[ 1.53279744e-22 -1.11731987e-22 -3.94679830e-23  1.73517977e-22
 -2.66693554e-23 -8.81440832e-23  9.81599323e-25  3.37389403e-26
  1.44981949e-22  1.93115816e-24]
[ 2.08034113e-23  2.34381945e-23 -3.55181352e-23  4.30539216e-23
  5.62306522e-23  1.97850490e-23 -6.57125979e-23 -1.09831679e-23
  8.83523081e-25 -1.40636259e-22]
Checking the noise that was generated in inject_signal ifo:
[-1.08145948e-22  4.91355278e-23 -4.30258168e-23 -8.86088549e-24
  5.94934896e-23  8.60811188e-23  6.22289440e-23  7.55482677e-24
  4.60326916e-23  2.13664482e-23]
[-1.42141050e-23  1.56380211e-22 -6.67087900e-23 -6.50466773e-24
 -3.26034559e-23  1.26397338e-25  4.24559837e-23 -5.58564750e-23
  6.49616134e-23  4.29938428e-23]
Checking the noise that was generated in inject_signal ifo:
[-5.74619098e-23 -5.13795626e-23 -1.25853245e-22 -1.99876820e-23
  1.06911240e-22  2.29241523e-23 -4.82608666e-23  2.76763117e-23
 -2.45722106e-23  4.62597368e-23]
[ 2.97433181e-23 -3.77243567e-23 -2.71540978e-23  1.80993437e-23
  4.03650041e-23  1.25901455e-23 -5.25398048e-23  7.27208191e-23
  3.66834410e-24 -4.57940231e-23]
Checking the noise that was generated in inject_signal ifo:
[ 1.53279744e-22 -1.11731987e-22 -3.94679830e-23  1.73517977e-22
 -2.66693554e-23 -8.81440832e-23  9.81599323e-25  3.37389403e-26
  1.44981949e-22  1.93115816e-24]
[ 2.08034113e-23  2.34381945e-23 -3.55181352e-23  4.30539216e-23
  5.62306522e-23  1.97850490e-23 -6.57125979e-23 -1.09831679e-23
  8.83523081e-25 -1.40636259e-22]
Checking the noise that was generated in inject_signal ifo:
[-3.93020007e-23 -9.45413459e-23 -3.48512430e-23 -2.70004898e-23
  5.68012109e-23 -2.61989592e-24 -1.83611825e-23  3.65021537e-23
 -1.43374443e-22 -9.07435621e-24]
[ 1.62465785e-23 -3.78479534e-23  9.37799475e-24  3.49579323e-23
  2.73215605e-23 -3.97439084e-23 -6.42369781e-23  1.14838451e-23
  1.86450845e-23 -6.34770718e-24]
Checking the noise that was generated in inject_signal ifo:
[-6.22269987e-23  2.00013149e-23  7.43200414e-23  2.20862235e-23
  1.95553530e-23  9.75762991e-23  3.14497687e-23  4.20297034e-23
  3.35278873e-23  2.36268491e-23]
[ 3.08810032e-23  9.42746220e-23 -8.49747448e-23  8.57882173e-23
  1.00278909e-23  2.78289364e-23  4.82925283e-23 -1.08390156e-22
 -2.99305505e-23  7.09167191e-23]
Checking the noise that was generated in inject_signal ifo:
[-1.21080370e-22 -6.02401624e-25 -8.53815325e-23  4.53357790e-23
 -2.22778666e-23 -4.79793223e-23 -9.00349129e-23 -1.93794498e-23
  3.00212316e-23 -4.10987711e-24]
[ 7.55686876e-23  4.26260613e-23  4.30059284e-23  8.65588976e-23
 -4.18774204e-23  2.90954199e-23 -5.91039376e-23  5.10201363e-23
  4.43389335e-23 -7.63271675e-23]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.10778570175170898 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 1.7059944799968538, 'mass_2_source': 1.4442745411280393, 's1_z': 0.022724650917868974, 's2_z': -0.036458505711493006, 'cos_iota': 0.9843823045380868, 'd_L': 215.0012643318847, 't_c': -0.034047895660235875, 'phase_c': 3.0039588423213495, 'psi': 0.7344806169846559, 'ra': 3.776982781714553, 'sin_dec': 0.8694683523980986, 'q': 0.8465880505842568, 'M_c': 1.4318873035238189, 'eta': 0.2482744865690864, 'iota': Array(0.1769662, dtype=float64, weak_type=True), 'dec': Array(1.05412506, dtype=float64, weak_type=True), 'lambda_1': 42.90248919990489, 'lambda_2': 148.23789617100684, 'H1_SNR': 10.079062669724339, 'L1_SNR': 7.341287088586736, 'V1_SNR': 20.736556570956356, 'network_SNR': 24.196834066417743, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5173559188842773 seconds
Time for h_sky_low and h_sky_center: 5.422608375549316 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.6806585788726807
Going to compute coefficients . . .
Time for computing coefficients: 121.42007184028625 seconds
Time for computing coefficients: 6.691765308380127 seconds
Time for computing coefficients: 6.787757396697998 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:00<6:39:22, 120.41s/it]Tuning global sampler:   1%|          | 2/200 [02:04<2:52:30, 52.28s/it] Tuning global sampler:   2%|▏         | 3/200 [02:09<1:40:10, 30.51s/it]Tuning global sampler:   2%|▏         | 4/200 [02:15<1:07:19, 20.61s/it]Tuning global sampler:   2%|▎         | 5/200 [02:19<48:13, 14.84s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:24<36:44, 11.36s/it]Tuning global sampler:   4%|▎         | 7/200 [02:28<29:22,  9.13s/it]Tuning global sampler:   4%|▍         | 8/200 [02:33<24:37,  7.69s/it]Tuning global sampler:   4%|▍         | 9/200 [02:37<21:21,  6.71s/it]Tuning global sampler:   5%|▌         | 10/200 [02:42<19:01,  6.01s/it]Tuning global sampler:   6%|▌         | 11/200 [02:46<17:33,  5.57s/it]Tuning global sampler:   6%|▌         | 12/200 [02:51<16:31,  5.28s/it]Tuning global sampler:   6%|▋         | 13/200 [02:56<15:46,  5.06s/it]Tuning global sampler:   7%|▋         | 14/200 [03:00<15:17,  4.93s/it]Tuning global sampler:   8%|▊         | 15/200 [03:05<14:55,  4.84s/it]Tuning global sampler:   8%|▊         | 16/200 [03:10<14:39,  4.78s/it]Tuning global sampler:   8%|▊         | 17/200 [03:14<14:27,  4.74s/it]Tuning global sampler:   9%|▉         | 18/200 [03:19<14:16,  4.71s/it]Tuning global sampler:  10%|▉         | 19/200 [03:23<14:07,  4.68s/it]Tuning global sampler:  10%|█         | 20/200 [03:28<14:00,  4.67s/it]Tuning global sampler:  10%|█         | 21/200 [03:33<13:53,  4.66s/it]Tuning global sampler:  11%|█         | 22/200 [03:37<13:44,  4.63s/it]Tuning global sampler:  12%|█▏        | 23/200 [03:42<13:38,  4.62s/it]Tuning global sampler:  12%|█▏        | 24/200 [03:47<14:12,  4.84s/it]Tuning global sampler:  12%|█▎        | 25/200 [03:52<13:43,  4.70s/it]Tuning global sampler:  13%|█▎        | 26/200 [03:56<13:21,  4.61s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:00<13:05,  4.54s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:05<12:52,  4.49s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:09<12:42,  4.46s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:14<12:34,  4.44s/it]Tuning global sampler:  16%|█▌        | 31/200 [04:18<12:26,  4.42s/it]Tuning global sampler:  16%|█▌        | 32/200 [04:22<12:20,  4.41s/it]Tuning global sampler:  16%|█▋        | 33/200 [04:27<12:12,  4.39s/it]Tuning global sampler:  17%|█▋        | 34/200 [04:31<12:06,  4.38s/it]Tuning global sampler:  18%|█▊        | 35/200 [04:35<12:02,  4.38s/it]Tuning global sampler:  18%|█▊        | 36/200 [04:40<11:58,  4.38s/it]Tuning global sampler:  18%|█▊        | 37/200 [04:44<11:54,  4.38s/it]Tuning global sampler:  19%|█▉        | 38/200 [04:49<11:50,  4.39s/it]Tuning global sampler:  20%|█▉        | 39/200 [04:53<11:47,  4.39s/it]Tuning global sampler:  20%|██        | 40/200 [04:57<11:43,  4.40s/it]Tuning global sampler:  20%|██        | 41/200 [05:02<11:39,  4.40s/it]Tuning global sampler:  21%|██        | 42/200 [05:06<11:36,  4.41s/it]Tuning global sampler:  22%|██▏       | 43/200 [05:11<11:32,  4.41s/it]Tuning global sampler:  22%|██▏       | 44/200 [05:16<12:10,  4.69s/it]Tuning global sampler:  22%|██▎       | 45/200 [05:20<11:51,  4.59s/it]Tuning global sampler:  23%|██▎       | 46/200 [05:25<11:38,  4.53s/it]Tuning global sampler:  24%|██▎       | 47/200 [05:29<11:27,  4.50s/it]Tuning global sampler:  24%|██▍       | 48/200 [05:34<11:19,  4.47s/it]Tuning global sampler:  24%|██▍       | 49/200 [05:38<11:12,  4.45s/it]Tuning global sampler:  25%|██▌       | 50/200 [05:42<11:05,  4.44s/it]Tuning global sampler:  26%|██▌       | 51/200 [05:47<10:58,  4.42s/it]Tuning global sampler:  26%|██▌       | 52/200 [05:51<10:52,  4.41s/it]Tuning global sampler:  26%|██▋       | 53/200 [05:55<10:47,  4.40s/it]Tuning global sampler:  27%|██▋       | 54/200 [06:00<10:43,  4.41s/it]