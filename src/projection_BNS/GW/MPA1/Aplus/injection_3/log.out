Tue Apr  1 15:41:21 CEST 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
15:41 ninjax INFO    : Checking and setting outdir
15:41 ninjax INFO    : Found generation prior file ./Aplus/injection_3/generation_prior.prior
15:41 ninjax INFO    : The outdir is set to ./Aplus/injection_3
15:41 ninjax INFO    : Loading the given config
15:41 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
15:41 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
15:41 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/MPA1/Aplus/injection_3/complete_config.json
15:41 ninjax INFO    : No seed specified. Generating a random seed: 439271
15:41 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 99011
15:41 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 593500
15:41 ninjax INFO    : Loading the priors
15:41 ninjax INFO    : Setting up the prior
15:41 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
15:41 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
15:41 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
15:41 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
15:41 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
15:41 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
15:41 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
15:41 ninjax INFO    :    dL_prior = PowerLaw(10.0, 1000.0, 2.0, naming=["d_L"])
15:41 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
15:41 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
15:41 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
15:41 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
15:41 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
15:41 ninjax INFO    : Setting up the generation prior
15:41 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 2.468645554845655, naming=["mass_1_source"])
15:41 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 2.468645554845655, naming=["mass_2_source"])
15:41 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
15:41 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
15:41 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
15:41 ninjax INFO    :    dL_prior = PowerLaw(10.0, 460.0, 2.0, naming=["d_L"])
15:41 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
15:41 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
15:41 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
15:41 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
15:41 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
15:41 ninjax INFO    : Finished prior setup
15:41 ninjax INFO    : Setting the transforms
15:41 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
15:41 ninjax INFO    : transforms_str_list has 3 elements
15:41 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
15:41 ninjax INFO    : Setting the likelihood
15:41 ninjax INFO    : GW likelihood provided, setting up the GW pipe
15:41 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz
15:41 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz for BNS injections
15:41 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
15:41 ninjax INFO    : self.is_BNS_run is True
15:41 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
15:41 ninjax INFO    : GW run is an injection
15:41 ninjax INFO    : Setting up GW injection . . . 
15:41 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
15:41 ninjax INFO    : Generating new injection
15:41 ninjax INFO    : Sanity check: generated parameters:
15:41 ninjax INFO    : {'mass_1_source': 2.267211767719573, 'mass_2_source': 1.8070560628254868, 's1_z': 0.039404110215357904, 's2_z': -0.028704684278378002, 'cos_iota': -0.5052022590192498, 'd_L': 349.68845469034545, 't_c': -0.03704390394710236, 'phase_c': 4.119243110492967, 'psi': 1.9422390666520255, 'ra': 4.246300045588513, 'sin_dec': 0.7853836986485545}
15:41 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz . . . 
15:41 ninjax INFO    : Injected lambda_1: 15.609141793384604
15:41 ninjax INFO    : Injected lambda_2: 103.50109732114971
15:41 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.8988712533356744 is 128.0
15:41 ninjax INFO    : After transforms, the injection parameters are:
15:41 ninjax INFO    : {'mass_1_source': 2.267211767719573, 'mass_2_source': 1.8070560628254868, 's1_z': 0.039404110215357904, 's2_z': -0.028704684278378002, 'cos_iota': -0.5052022590192498, 'd_L': 349.68845469034545, 't_c': -0.03704390394710236, 'phase_c': 4.119243110492967, 'psi': 1.9422390666520255, 'ra': 4.246300045588513, 'sin_dec': 0.7853836986485545, 'q': 0.7970389394384081, 'M_c': 1.8988712533356744, 'eta': 0.24681102965768856, 'iota': Array(2.10041264, dtype=float64, weak_type=True), 'dec': Array(0.90331574, dtype=float64, weak_type=True), 'lambda_1': 15.609141793384604, 'lambda_2': 103.50109732114971}
15:41 ninjax INFO    : The trial injection parameters are {'M_c': 1.8988712533356744, 'eta': 0.24681102965768856, 's1_z': 0.039404110215357904, 's2_z': -0.028704684278378002, 'lambda_1': 15.609141793384604, 'lambda_2': 103.50109732114971, 'd_L': 349.68845469034545, 'phase_c': 4.119243110492967, 'iota': 2.100412643125102, 't_c': -0.03704390394710236, 'psi': 1.9422390666520255, 'ra': 4.246300045588513, 'dec': 0.9033157428387544}
15:41 ninjax INFO    : Injecting signals . . .
15:41 ninjax INFO    : self.ifos
15:41 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
15:41 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
15:41 ninjax INFO    : [ 2.21138646e-23+3.41233155e-23j  2.62830823e-23-5.60275873e-24j
 -9.90489112e-23-2.86092188e-23j ...
  3.42817743e-23+1.51578076e-23j -3.74157441e-24+1.34443995e-23j
  2.43624193e-23+2.48110949e-23j]
15:41 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
15:41 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
15:41 ninjax INFO    : [ 5.33868828e-23+9.70156177e-23j -5.17428998e-23-9.23189939e-24j
 -1.06900813e-23-1.07672675e-23j ...
  1.37646062e-23+2.32423816e-23j -6.62453335e-24-2.72613788e-24j
 -1.07340947e-23-2.07750150e-23j]
15:41 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
15:41 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
15:41 ninjax INFO    : [ 6.12699615e-23+1.72956814e-24j -1.23665916e-23+7.36292599e-23j
  5.65968070e-24+6.00742300e-23j ...
  3.10562245e-23+6.95816507e-24j -2.49023500e-23-7.82514588e-23j
 -2.14335945e-23-8.15574635e-24j]
15:41 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
15:41 ninjax INFO    : SNR for ifo H1 is 6.2594549886634665
15:41 ninjax INFO    : SNR for ifo L1 is 5.923200510427743
15:41 ninjax INFO    : SNR for ifo V1 is 6.863137741755943
15:41 ninjax INFO    : The network SNR is 11.016702805474527
15:41 ninjax INFO    : The network SNR does not pass the threshold, trying again
15:41 ninjax INFO    : Generating new injection
15:41 ninjax INFO    : Sanity check: generated parameters:
15:41 ninjax INFO    : {'mass_1_source': 1.4850512838488026, 'mass_2_source': 1.094494955938231, 's1_z': 0.010286833375261505, 's2_z': -0.03125403070028061, 'cos_iota': 0.19506620261820817, 'd_L': 344.34706488817807, 't_c': -0.06440311201588211, 'phase_c': 0.5403069421771337, 'psi': 1.6018360103402327, 'ra': 1.0757046394555876, 'sin_dec': -0.8236851690628391}
15:41 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz . . . 
15:41 ninjax INFO    : Injected lambda_1: 362.6625574552953
15:41 ninjax INFO    : Injected lambda_2: 1973.6815126500474
15:41 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.1934538371918342 is 256.0
15:41 ninjax INFO    : After transforms, the injection parameters are:
15:41 ninjax INFO    : {'mass_1_source': 1.4850512838488026, 'mass_2_source': 1.094494955938231, 's1_z': 0.010286833375261505, 's2_z': -0.03125403070028061, 'cos_iota': 0.19506620261820817, 'd_L': 344.34706488817807, 't_c': -0.06440311201588211, 'phase_c': 0.5403069421771337, 'psi': 1.6018360103402327, 'ra': 1.0757046394555876, 'sin_dec': -0.8236851690628391, 'q': 0.7370081880954522, 'M_c': 1.1934538371918342, 'eta': 0.24426912769400053, 'iota': Array(1.37447138, dtype=float64, weak_type=True), 'dec': Array(-0.96787955, dtype=float64, weak_type=True), 'lambda_1': 362.6625574552953, 'lambda_2': 1973.6815126500474}
15:41 ninjax INFO    : The trial injection parameters are {'M_c': 1.1934538371918342, 'eta': 0.24426912769400053, 's1_z': 0.010286833375261505, 's2_z': -0.03125403070028061, 'lambda_1': 362.6625574552953, 'lambda_2': 1973.6815126500474, 'd_L': 344.34706488817807, 'phase_c': 0.5403069421771337, 'iota': 1.3744713778102504, 't_c': -0.06440311201588211, 'psi': 1.6018360103402327, 'ra': 1.0757046394555876, 'dec': -0.9678795476835507}
15:41 ninjax INFO    : Injecting signals . . .
15:41 ninjax INFO    : self.ifos
15:41 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
15:41 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:41 ninjax INFO    : [ 4.33684602e-23+8.65486695e-24j -3.02818743e-23+1.20545978e-22j
 -2.91691548e-23+2.86402329e-23j ...
  9.96091866e-24-4.37486935e-23j  3.24079366e-24-2.43179865e-24j
  1.67537848e-23+2.96789668e-23j]
15:41 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:41 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:41 ninjax INFO    : [ 3.46721049e-24-1.32125448e-22j  1.82255629e-22-2.42696500e-23j
  2.04350331e-23-1.02171472e-22j ...
 -5.45918118e-23+1.25742360e-23j  5.02498003e-24-7.11387198e-23j
 -3.36478143e-23+2.06597505e-23j]
15:41 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:41 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:41 ninjax INFO    : [-3.30601450e-23-1.04190846e-22j  6.09911832e-23-5.69969082e-23j
  2.99087368e-23+2.31470531e-23j ...
 -1.29931682e-23+2.83508240e-23j -2.67353448e-23-5.06155442e-23j
  9.79302376e-24+1.62631844e-22j]
15:41 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
15:41 ninjax INFO    : SNR for ifo H1 is 3.6163174380768908
15:41 ninjax INFO    : SNR for ifo L1 is 3.4456598306961874
15:41 ninjax INFO    : SNR for ifo V1 is 4.721526414547779
15:41 ninjax INFO    : The network SNR is 6.873364181031345
15:41 ninjax INFO    : The network SNR does not pass the threshold, trying again
15:41 ninjax INFO    : Generating new injection
15:41 ninjax INFO    : Sanity check: generated parameters:
15:41 ninjax INFO    : {'mass_1_source': 2.397828920122967, 'mass_2_source': 2.3359108914404114, 's1_z': -0.025672141687140406, 's2_z': 0.029993102334852334, 'cos_iota': 0.29698551533403217, 'd_L': 356.1665196048534, 't_c': -0.00676010189307652, 'phase_c': 2.9666333499310342, 'psi': 1.6409447721885615, 'ra': 1.38767431157869, 'sin_dec': -0.4589503180930681}
15:41 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz . . . 
15:41 ninjax INFO    : Injected lambda_1: 7.490718397437804
15:41 ninjax INFO    : Injected lambda_2: 10.957700248189878
15:41 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 2.2260748416474714 is 64.0
15:41 ninjax INFO    : After transforms, the injection parameters are:
15:41 ninjax INFO    : {'mass_1_source': 2.397828920122967, 'mass_2_source': 2.3359108914404114, 's1_z': -0.025672141687140406, 's2_z': 0.029993102334852334, 'cos_iota': 0.29698551533403217, 'd_L': 356.1665196048534, 't_c': -0.00676010189307652, 'phase_c': 2.9666333499310342, 'psi': 1.6409447721885615, 'ra': 1.38767431157869, 'sin_dec': -0.4589503180930681, 'q': 0.9741774618852374, 'M_c': 2.2260748416474714, 'eta': 0.24995722741638826, 'iota': Array(1.26926215, dtype=float64, weak_type=True), 'dec': Array(-0.47681338, dtype=float64, weak_type=True), 'lambda_1': 7.490718397437804, 'lambda_2': 10.957700248189878}
15:41 ninjax INFO    : The trial injection parameters are {'M_c': 2.2260748416474714, 'eta': 0.24995722741638826, 's1_z': -0.025672141687140406, 's2_z': 0.029993102334852334, 'lambda_1': 7.490718397437804, 'lambda_2': 10.957700248189878, 'd_L': 356.1665196048534, 'phase_c': 2.9666333499310342, 'iota': 1.269262147950149, 't_c': -0.00676010189307652, 'psi': 1.6409447721885615, 'ra': 1.38767431157869, 'dec': -0.4768133778681613}
15:41 ninjax INFO    : Injecting signals . . .
15:41 ninjax INFO    : self.ifos
15:41 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
15:41 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.         20.015625   20.03125  ... 2047.953125 2047.96875
 2047.984375]
15:41 ninjax INFO    : [-5.28066059e-23+6.88322070e-24j -2.55426665e-24+8.85052228e-24j
 -2.63616966e-23+8.55291899e-25j ...
 -8.96597254e-25-6.76885522e-24j -1.43287307e-24+2.99835772e-24j
 -4.68587871e-24-5.75262957e-24j]
15:41 ninjax INFO    : [1.44906511e-46 1.44435812e-46 1.43973008e-46 ... 2.17771234e-47
 2.17774337e-47 2.17777440e-47]
15:41 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.         20.015625   20.03125  ... 2047.953125 2047.96875
 2047.984375]
15:41 ninjax INFO    : [-8.20878256e-23-1.67760112e-23j  3.86328833e-23-1.45651843e-23j
 -2.80153218e-23-5.29368888e-24j ...
 -1.99727054e-24+9.83017544e-24j -2.48159795e-23+9.03222178e-24j
  1.81781374e-23+5.44540740e-24j]
15:41 ninjax INFO    : [1.44906511e-46 1.44435812e-46 1.43973008e-46 ... 2.17771234e-47
 2.17774337e-47 2.17777440e-47]
15:41 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.         20.015625   20.03125  ... 2047.953125 2047.96875
 2047.984375]
15:41 ninjax INFO    : [ 2.31700988e-23-5.84004511e-23j  2.23217390e-23-8.40904740e-24j
 -2.37513417e-23-1.34346743e-23j ...
  1.01394269e-23+1.50962736e-23j  5.76660298e-24+4.11015570e-23j
 -9.70504068e-24+2.67709634e-24j]
15:41 ninjax INFO    : [1.43183556e-46 1.42688205e-46 1.42194425e-46 ... 6.39772204e-47
 6.39781464e-47 6.39790724e-47]
15:41 ninjax INFO    : SNR for ifo H1 is 5.005823010630729
15:41 ninjax INFO    : SNR for ifo L1 is 7.812894806244065
15:41 ninjax INFO    : SNR for ifo V1 is 3.3829867960527453
15:41 ninjax INFO    : The network SNR is 9.876446169015594
15:41 ninjax INFO    : The network SNR does not pass the threshold, trying again
15:41 ninjax INFO    : Generating new injection
15:41 ninjax INFO    : Sanity check: generated parameters:
15:41 ninjax INFO    : {'mass_1_source': 1.1159977552578035, 'mass_2_source': 1.2354241836493682, 's1_z': -0.03567813565822495, 's2_z': -0.03340515828009527, 'cos_iota': -0.7130787162929102, 'd_L': 304.8584970215213, 't_c': -0.06157054443358345, 'phase_c': 0.2523572088138506, 'psi': 2.535504993649665, 'ra': 4.055235649415361, 'sin_dec': -0.2793586688794263}
15:41 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz . . . 
15:41 ninjax INFO    : Injected lambda_1: 1033.816479022409
15:41 ninjax INFO    : Injected lambda_2: 1782.2820623543719
15:41 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.092326325891551 is 256.0
15:41 ninjax INFO    : After transforms, the injection parameters are:
15:41 ninjax INFO    : {'mass_1_source': 1.2354241836493682, 'mass_2_source': 1.1159977552578035, 's1_z': -0.03567813565822495, 's2_z': -0.03340515828009527, 'cos_iota': -0.7130787162929102, 'd_L': 304.8584970215213, 't_c': -0.06157054443358345, 'phase_c': 0.2523572088138506, 'psi': 2.535504993649665, 'ra': 4.055235649415361, 'sin_dec': -0.2793586688794263, 'q': 0.9033316410896327, 'M_c': 1.092326325891551, 'eta': 0.24935511872677837, 'iota': Array(2.36467615, dtype=float64, weak_type=True), 'dec': Array(-0.28312612, dtype=float64, weak_type=True), 'lambda_1': 1033.816479022409, 'lambda_2': 1782.2820623543719}
15:41 ninjax INFO    : The trial injection parameters are {'M_c': 1.092326325891551, 'eta': 0.24935511872677837, 's1_z': -0.03567813565822495, 's2_z': -0.03340515828009527, 'lambda_1': 1033.816479022409, 'lambda_2': 1782.2820623543719, 'd_L': 304.8584970215213, 'phase_c': 0.2523572088138506, 'iota': 2.3646761525890323, 't_c': -0.06157054443358345, 'psi': 2.535504993649665, 'ra': 4.055235649415361, 'dec': -0.28312612098009066}
15:41 ninjax INFO    : Injecting signals . . .
15:41 ninjax INFO    : self.ifos
15:41 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
15:41 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:41 ninjax INFO    : [ 4.73189295e-23+3.18293367e-24j -3.60839360e-23+1.17119287e-22j
 -3.18951902e-23+3.42368976e-23j ...
  9.96091866e-24-4.37486935e-23j  3.24079366e-24-2.43179865e-24j
  1.67537848e-23+2.96789668e-23j]
15:41 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:41 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:41 ninjax INFO    : [ 1.29206501e-24-1.26551637e-22j  1.88659552e-22-2.19507626e-23j
  2.24303404e-23-1.09120271e-22j ...
 -5.45918118e-23+1.25742360e-23j  5.02498003e-24-7.11387198e-23j
 -3.36478143e-23+2.06597505e-23j]
15:41 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:41 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:41 ninjax INFO    : [-3.33727452e-23-9.92423083e-23j  6.47091564e-23-5.76433489e-23j
  2.90866924e-23+2.11018994e-23j ...
 -1.29931682e-23+2.83508240e-23j -2.67353448e-23-5.06155442e-23j
  9.79302376e-24+1.62631844e-22j]
15:41 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
15:41 ninjax INFO    : SNR for ifo H1 is 11.153207261216084
15:41 ninjax INFO    : SNR for ifo L1 is 12.307286401403022
15:41 ninjax INFO    : SNR for ifo V1 is 5.112139092966181
15:41 ninjax INFO    : The network SNR is 17.378069423374853
15:41 ninjax INFO    : Network SNR passes threshold
15:41 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
15:41 ninjax INFO    :    mass_1_source: 1.2354241836493682
15:41 ninjax INFO    :    mass_2_source: 1.1159977552578035
15:41 ninjax INFO    :    s1_z: -0.03567813565822495
15:41 ninjax INFO    :    s2_z: -0.03340515828009527
15:41 ninjax INFO    :    cos_iota: -0.7130787162929102
15:41 ninjax INFO    :    d_L: 304.8584970215213
15:41 ninjax INFO    :    t_c: -0.06157054443358345
15:41 ninjax INFO    :    phase_c: 0.2523572088138506
15:41 ninjax INFO    :    psi: 2.535504993649665
15:41 ninjax INFO    :    ra: 4.055235649415361
15:41 ninjax INFO    :    sin_dec: -0.2793586688794263
15:41 ninjax INFO    :    q: 0.9033316410896327
15:41 ninjax INFO    :    M_c: 1.092326325891551
15:41 ninjax INFO    :    eta: 0.24935511872677837
15:41 ninjax INFO    :    iota: 2.3646761525890323
15:41 ninjax INFO    :    dec: -0.28312612098009066
15:41 ninjax INFO    :    lambda_1: 1033.816479022409
15:41 ninjax INFO    :    lambda_2: 1782.2820623543719
15:41 ninjax INFO    :    H1_SNR: 11.153207261216084
15:41 ninjax INFO    :    L1_SNR: 12.307286401403022
15:41 ninjax INFO    :    V1_SNR: 5.112139092966181
15:41 ninjax INFO    :    network_SNR: 17.378069423374853
15:41 ninjax INFO    :    epoch: 254.0
15:41 ninjax INFO    :    gmst: 2.7288901910520846
15:41 ninjax INFO    :    duration: 256.0
15:41 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
15:41 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
15:41 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
15:47 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 378.3693895339966 seconds = 6.306156492233276 minutes
15:47 ninjax INFO    : The priors are not modified after their initialization
15:47 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
15:47 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
15:47 ninjax INFO    : sample: {'M_c': Array([1.02611005, 1.53695415, 2.05083208], dtype=float64), 'q': Array([0.99039249, 0.82913591, 0.78178673], dtype=float64), 's1_z': Array([ 0.0294184 , -0.00266039, -0.01503571], dtype=float64), 's2_z': Array([-0.02127764,  0.03897656,  0.04385722], dtype=float64), 'lambda_1': Array([1055.29831259, 1302.89998987,  126.11760526], dtype=float64), 'lambda_2': Array([ 934.71395287, 3369.69452188, 1311.20822609], dtype=float64), 'cos_iota': Array([-0.62191095,  0.30130193, -0.2899183 ], dtype=float64), 'd_L': Array([883.46589498, 702.37917205, 537.3747462 ], dtype=float64), 't_c': Array([0.06591844, 0.06327968, 0.03552082], dtype=float64), 'phase_c': Array([3.62087804, 3.30497292, 0.82100912], dtype=float64), 'psi': Array([0.44634452, 1.08343398, 1.38932347], dtype=float64), 'ra': Array([2.09337875, 2.15154384, 3.18001107], dtype=float64), 'sin_dec': Array([ 0.13988717, -0.36336968,  0.06310938], dtype=float64)}
15:48 ninjax INFO    : log_prob: [ -4.15485279  -1.57559574 -22.87934887]
15:48 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 1.2354241836493682, 'mass_2_source': 1.1159977552578035, 's1_z': -0.03567813565822495, 's2_z': -0.03340515828009527, 'cos_iota': -0.7130787162929102, 'd_L': 304.8584970215213, 't_c': -0.06157054443358345, 'phase_c': 0.2523572088138506, 'psi': 2.535504993649665, 'ra': 4.055235649415361, 'sin_dec': -0.2793586688794263, 'q': 0.9033316410896327, 'M_c': 1.092326325891551, 'eta': 0.24935511872677837, 'iota': Array(2.36467615, dtype=float64, weak_type=True), 'dec': Array(-0.28312612, dtype=float64, weak_type=True), 'lambda_1': 1033.816479022409, 'lambda_2': 1782.2820623543719, 'H1_SNR': 11.153207261216084, 'L1_SNR': 12.307286401403022, 'V1_SNR': 5.112139092966181, 'network_SNR': 17.378069423374853, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
15:48 ninjax INFO    : log_prob at the injection parameters is: 113.90663915664113
15:48 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
15:48 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
15:48 ninjax INFO    : Ninjax setup complete.
15:48 ninjax INFO    : Saving output to ./Aplus/injection_3/
15:48 ninjax INFO    : Using polynomial learning rate scheduler
15:48 ninjax INFO    : The hyperparameters passed to flowMC and jim are
15:48 ninjax INFO    :    n_loop_training: 200
15:48 ninjax INFO    :    n_loop_production: 10
15:48 ninjax INFO    :    n_local_steps: 100
15:48 ninjax INFO    :    n_global_steps: 1000
15:48 ninjax INFO    :    n_epochs: 25
15:48 ninjax INFO    :    n_chains: 1000
15:48 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x14c3ef526ef0>
15:48 ninjax INFO    :    max_samples: 50000
15:48 ninjax INFO    :    momentum: 0.9
15:48 ninjax INFO    :    batch_size: 30000
15:48 ninjax INFO    :    use_global: True
15:48 ninjax INFO    :    keep_quantile: 0.0
15:48 ninjax INFO    :    train_thinning: 10
15:48 ninjax INFO    :    output_thinning: 50
15:48 ninjax INFO    :    n_sample_max: 10000
15:48 ninjax INFO    :    num_layers: 10
15:48 ninjax INFO    :    hidden_size: [128, 128]
15:48 ninjax INFO    :    num_bins: 8
15:48 ninjax INFO    :    save_training_chains: False
15:48 ninjax INFO    :    eps_mass_matrix: 1e-05
15:48 ninjax INFO    :    use_scheduler: True
15:48 ninjax INFO    :    use_temperature: False
15:48 ninjax INFO    :    which_temperature_schedule: exponential
15:48 ninjax INFO    :    starting_temperature: 2.0
15:48 ninjax INFO    :    stop_tempering_iteration: 75
15:48 ninjax INFO    :    stopping_criterion_global_acc: 0.1
15:48 ninjax INFO    :    stopping_criterion_loss: -inf
15:48 ninjax INFO    :    nf_model_kwargs: {}
15:48 ninjax INFO    :    local sampler arg not shown (pretty print)
15:48 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[ 1.95945700e-23  2.71796821e-23 -9.78752752e-23  4.99154963e-23
 -5.78978603e-23 -2.54414854e-24 -1.04034280e-22  1.70732649e-24
  8.79615529e-23 -3.38310987e-23]
[ 3.26627290e-23 -2.83355407e-24 -3.12713988e-23  4.28031136e-23
  3.32698508e-23 -2.30471351e-23  5.08923197e-23  5.97966354e-23
  5.68826576e-24 -1.17002106e-23]
Checking the noise that was generated in inject_signal ifo:
[ 5.57890433e-23 -5.44309741e-23 -9.08386697e-24 -2.04289268e-24
  1.33025205e-23  4.88196199e-23 -2.89364597e-23 -3.98919568e-24
 -6.44668181e-23 -5.05104092e-23]
[ 9.56653747e-23 -9.83258887e-24 -8.53126747e-24 -1.20340885e-23
 -1.49834376e-23 -5.41171407e-23 -1.67655469e-23 -8.38471038e-24
  4.82018767e-23 -7.86503625e-23]
Checking the noise that was generated in inject_signal ifo:
[ 6.30094354e-23 -1.12152617e-23  2.21923933e-24  2.09943468e-23
 -7.51482917e-23 -3.89156589e-23 -7.84165701e-23 -1.25715510e-23
  2.04032273e-23  7.03926198e-23]
[ 5.38454883e-24  6.97505906e-23  6.21997889e-23  4.19593601e-24
  7.99423781e-24  5.28406227e-23  1.69511605e-23 -1.29133230e-24
 -1.38999008e-23 -3.01308833e-23]
Checking the noise that was generated in inject_signal ifo:
[ 4.46344038e-23 -3.18851915e-23 -2.86740958e-23  8.88070459e-23
 -6.49594308e-23 -9.41441462e-23 -7.39266746e-23 -4.50478263e-23
  5.50995623e-23  1.43161827e-22]
[ 7.56707930e-24  1.20083383e-22  3.02334254e-23 -5.60486380e-23
  2.83175991e-23 -7.45146242e-23 -4.46924302e-23  5.90611122e-23
 -4.95211567e-23 -5.72724063e-23]
Checking the noise that was generated in inject_signal ifo:
[ 1.87835333e-24  1.83068714e-22  2.11293077e-23  1.25369893e-22
  1.87714813e-24  5.68973542e-23 -6.33559937e-23 -8.26230220e-23
  5.00088996e-23  6.42705783e-23]
[-1.32193959e-22 -2.29033064e-23 -1.03601448e-22  6.24871222e-23
 -3.70985380e-23 -1.14772357e-23  3.10290126e-23  7.40510082e-23
  8.00971371e-23  4.11517306e-23]
Checking the noise that was generated in inject_signal ifo:
[-3.17489626e-23  6.23090916e-23  2.71538795e-23  1.44374809e-23
 -1.54965746e-22  4.11958650e-23  1.84315236e-23  1.00520086e-23
 -1.11237818e-22 -2.15931406e-23]
[-1.01755062e-22 -5.94283401e-23  2.33837072e-23 -5.57994904e-23
  5.31164617e-23 -7.86336231e-23  7.00883221e-24  1.92504509e-23
 -4.88187351e-24 -5.66794640e-23]
Checking the noise that was generated in inject_signal ifo:
[-5.25936026e-23 -3.02782170e-24 -2.75041126e-23  1.41705320e-23
 -6.55463255e-23 -2.90724462e-23 -3.71603066e-23  1.22492468e-23
  4.45643016e-24 -6.09443502e-24]
[ 4.55536499e-24  6.56360061e-24 -1.17920054e-24 -6.90636932e-24
  3.12005208e-25  2.76499436e-23  5.11131704e-23 -4.81915670e-26
  2.32799611e-23 -5.90066745e-23]
Checking the noise that was generated in inject_signal ifo:
[-8.45839050e-23  3.70184921e-23 -2.85673903e-23  3.63989004e-23
  4.26361135e-24  1.06209043e-23  2.52921107e-23 -6.71088580e-23
  5.55084692e-23  1.10902532e-23]
[-1.41151000e-23 -1.12971269e-23 -1.69405842e-24  1.84929893e-23
 -3.18290356e-23 -4.69359695e-23  3.31158990e-23 -2.15260345e-23
  3.95874152e-23  8.15675785e-23]
Checking the noise that was generated in inject_signal ifo:
[ 2.50315304e-23  2.38859221e-23 -2.26399325e-23 -6.47965898e-23
  1.61356205e-23 -1.21821896e-23 -7.19643721e-23  4.13725819e-24
 -3.65080534e-23 -4.75813075e-23]
[-5.91358410e-23 -9.65472545e-24 -1.50947429e-23  1.19637389e-23
  3.48446588e-24 -3.74858667e-23  3.57734133e-23  3.39872745e-24
 -2.19122243e-23 -1.61421117e-23]
Checking the noise that was generated in inject_signal ifo:
[ 4.46344038e-23 -3.18851915e-23 -2.86740958e-23  8.88070459e-23
 -6.49594308e-23 -9.41441462e-23 -7.39266746e-23 -4.50478263e-23
  5.50995623e-23  1.43161827e-22]
[ 7.56707930e-24  1.20083383e-22  3.02334254e-23 -5.60486380e-23
  2.83175991e-23 -7.45146242e-23 -4.46924302e-23  5.90611122e-23
 -4.95211567e-23 -5.72724063e-23]
Checking the noise that was generated in inject_signal ifo:
[ 1.87835333e-24  1.83068714e-22  2.11293077e-23  1.25369893e-22
  1.87714813e-24  5.68973542e-23 -6.33559937e-23 -8.26230220e-23
  5.00088996e-23  6.42705783e-23]
[-1.32193959e-22 -2.29033064e-23 -1.03601448e-22  6.24871222e-23
 -3.70985380e-23 -1.14772357e-23  3.10290126e-23  7.40510082e-23
  8.00971371e-23  4.11517306e-23]
Checking the noise that was generated in inject_signal ifo:
[-3.17489626e-23  6.23090916e-23  2.71538795e-23  1.44374809e-23
 -1.54965746e-22  4.11958650e-23  1.84315236e-23  1.00520086e-23
 -1.11237818e-22 -2.15931406e-23]
[-1.01755062e-22 -5.94283401e-23  2.33837072e-23 -5.57994904e-23
  5.31164617e-23 -7.86336231e-23  7.00883221e-24  1.92504509e-23
 -4.88187351e-24 -5.66794640e-23]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.18404531478881836 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 1.2354241836493682, 'mass_2_source': 1.1159977552578035, 's1_z': -0.03567813565822495, 's2_z': -0.03340515828009527, 'cos_iota': -0.7130787162929102, 'd_L': 304.8584970215213, 't_c': -0.06157054443358345, 'phase_c': 0.2523572088138506, 'psi': 2.535504993649665, 'ra': 4.055235649415361, 'sin_dec': -0.2793586688794263, 'q': 0.9033316410896327, 'M_c': 1.092326325891551, 'eta': 0.24935511872677837, 'iota': Array(2.36467615, dtype=float64, weak_type=True), 'dec': Array(-0.28312612, dtype=float64, weak_type=True), 'lambda_1': 1033.816479022409, 'lambda_2': 1782.2820623543719, 'H1_SNR': 11.153207261216084, 'L1_SNR': 12.307286401403022, 'V1_SNR': 5.112139092966181, 'network_SNR': 17.378069423374853, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.525625467300415 seconds
Time for h_sky_low and h_sky_center: 33.4631929397583 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.7633681297302246
Going to compute coefficients . . .
Time for computing coefficients: 314.44220995903015 seconds
Time for computing coefficients: 7.223266124725342 seconds
Time for computing coefficients: 7.235241889953613 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:42<8:57:22, 162.02s/it]Tuning global sampler:   1%|          | 2/200 [03:06<4:28:28, 81.35s/it] Tuning global sampler:   2%|▏         | 3/200 [03:11<2:32:08, 46.34s/it]Tuning global sampler:   2%|▏         | 4/200 [03:16<1:37:37, 29.89s/it]Tuning global sampler:   2%|▎         | 5/200 [03:20<1:07:33, 20.79s/it]Tuning global sampler:   3%|▎         | 6/200 [03:25<49:28, 15.30s/it]  Tuning global sampler:   4%|▎         | 7/200 [03:40<48:46, 15.16s/it]Tuning global sampler:   4%|▍         | 8/200 [03:45<38:17, 11.97s/it]Tuning global sampler:   4%|▍         | 9/200 [04:01<41:43, 13.11s/it]Tuning global sampler:   5%|▌         | 10/200 [04:24<51:02, 16.12s/it]Tuning global sampler:   6%|▌         | 11/200 [04:41<51:48, 16.45s/it]Tuning global sampler:   6%|▌         | 12/200 [05:02<56:27, 18.02s/it]Tuning global sampler:   6%|▋         | 13/200 [05:20<55:37, 17.84s/it]Tuning global sampler:   7%|▋         | 14/200 [05:43<1:00:04, 19.38s/it]Tuning global sampler:   8%|▊         | 15/200 [06:07<1:04:00, 20.76s/it]Tuning global sampler:   8%|▊         | 16/200 [06:33<1:08:58, 22.49s/it]Tuning global sampler:   8%|▊         | 17/200 [06:46<59:51, 19.62s/it]  Tuning global sampler:   9%|▉         | 18/200 [06:51<45:53, 15.13s/it]Tuning global sampler:  10%|▉         | 19/200 [06:55<36:08, 11.98s/it]Tuning global sampler:  10%|█         | 20/200 [07:00<29:20,  9.78s/it]Tuning global sampler:  10%|█         | 21/200 [07:05<24:35,  8.24s/it]Tuning global sampler:  11%|█         | 22/200 [07:09<21:13,  7.15s/it]Tuning global sampler:  12%|█▏        | 23/200 [07:14<18:51,  6.39s/it]Tuning global sampler:  12%|█▏        | 24/200 [07:18<17:01,  5.80s/it]Tuning global sampler:  12%|█▎        | 25/200 [07:23<15:41,  5.38s/it]Tuning global sampler:  13%|█▎        | 26/200 [07:27<14:44,  5.08s/it]Tuning global sampler:  14%|█▎        | 27/200 [07:32<14:03,  4.88s/it]Tuning global sampler:  14%|█▍        | 28/200 [07:36<13:36,  4.75s/it]Tuning global sampler:  14%|█▍        | 29/200 [07:40<13:13,  4.64s/it]Tuning global sampler:  15%|█▌        | 30/200 [07:45<12:59,  4.58s/it]Tuning global sampler:  16%|█▌        | 31/200 [07:49<12:44,  4.53s/it]Tuning global sampler:  16%|█▌        | 32/200 [07:54<12:33,  4.49s/it]Tuning global sampler:  16%|█▋        | 33/200 [07:58<12:39,  4.55s/it]Tuning global sampler:  17%|█▋        | 34/200 [08:09<17:29,  6.32s/it]Tuning global sampler:  18%|█▊        | 35/200 [08:24<24:26,  8.89s/it]Tuning global sampler:  18%|█▊        | 36/200 [08:34<25:30,  9.33s/it]Tuning global sampler:  18%|█▊        | 37/200 [08:47<28:04, 10.34s/it]Tuning global sampler:  19%|█▉        | 38/200 [09:08<36:38, 13.57s/it]Tuning global sampler:  20%|█▉        | 39/200 [09:26<40:27, 15.08s/it]Tuning global sampler:  20%|██        | 40/200 [09:31<31:39, 11.87s/it]Tuning global sampler:  20%|██        | 41/200 [09:35<25:30,  9.63s/it]Tuning global sampler:  21%|██        | 42/200 [09:40<21:13,  8.06s/it]Tuning global sampler:  22%|██▏       | 43/200 [09:44<18:13,  6.96s/it]Tuning global sampler:  22%|██▏       | 44/200 [09:49<16:12,  6.24s/it]Tuning global sampler:  22%|██▎       | 45/200 [09:53<14:39,  5.67s/it]Tuning global sampler:  23%|██▎       | 46/200 [09:57<13:38,  5.32s/it]Tuning global sampler:  24%|██▎       | 47/200 [10:02<12:55,  5.07s/it]Tuning global sampler:  24%|██▍       | 48/200 [10:06<12:19,  4.87s/it]Tuning global sampler:  24%|██▍       | 49/200 [10:11<11:53,  4.73s/it]Tuning global sampler:  25%|██▌       | 50/200 [10:15<11:34,  4.63s/it]Tuning global sampler:  26%|██▌       | 51/200 [10:20<11:19,  4.56s/it]Tuning global sampler:  26%|██▌       | 52/200 [10:24<11:14,  4.56s/it]Tuning global sampler:  26%|██▋       | 53/200 [10:28<11:02,  4.51s/it]Tuning global sampler:  27%|██▋       | 54/200 [10:33<10:52,  4.47s/it]Tuning global sampler:  28%|██▊       | 55/200 [10:37<10:44,  4.44s/it]Tuning global sampler:  28%|██▊       | 56/200 [10:43<11:21,  4.73s/it]Tuning global sampler:  28%|██▊       | 57/200 [10:47<11:03,  4.64s/it]Tuning global sampler:  29%|██▉       | 58/200 [10:52<10:59,  4.64s/it]Tuning global sampler:  30%|██▉       | 59/200 [10:56<10:44,  4.57s/it]Tuning global sampler:  30%|███       | 60/200 [11:01<10:50,  4.65s/it]Tuning global sampler:  30%|███       | 61/200 [11:05<10:35,  4.57s/it]Tuning global sampler:  31%|███       | 62/200 [11:10<10:24,  4.52s/it]Tuning global sampler:  32%|███▏      | 63/200 [11:14<10:15,  4.49s/it]Tuning global sampler:  32%|███▏      | 64/200 [11:19<10:06,  4.46s/it]Tuning global sampler:  32%|███▎      | 65/200 [11:23<09:59,  4.44s/it]Tuning global sampler:  33%|███▎      | 66/200 [11:27<09:52,  4.42s/it]Tuning global sampler:  34%|███▎      | 67/200 [11:32<09:45,  4.40s/it]Tuning global sampler:  34%|███▍      | 68/200 [11:36<09:41,  4.40s/it]Tuning global sampler:  34%|███▍      | 69/200 [11:40<09:37,  4.41s/it]Tuning global sampler:  35%|███▌      | 70/200 [11:45<09:32,  4.41s/it]Tuning global sampler:  36%|███▌      | 71/200 [11:49<09:28,  4.41s/it]Tuning global sampler:  36%|███▌      | 72/200 [11:54<09:25,  4.42s/it]Tuning global sampler:  36%|███▋      | 73/200 [11:58<09:28,  4.47s/it]Tuning global sampler:  37%|███▋      | 74/200 [12:03<09:22,  4.46s/it]Tuning global sampler:  38%|███▊      | 75/200 [12:07<09:16,  4.45s/it]Tuning global sampler:  38%|███▊      | 76/200 [12:12<09:10,  4.44s/it]Tuning global sampler:  38%|███▊      | 77/200 [12:16<09:05,  4.43s/it]Tuning global sampler:  39%|███▉      | 78/200 [12:21<09:36,  4.73s/it]Tuning global sampler:  40%|███▉      | 79/200 [12:26<09:19,  4.63s/it]Tuning global sampler:  40%|████      | 80/200 [12:30<09:06,  4.56s/it]Tuning global sampler:  40%|████      | 81/200 [12:35<08:57,  4.52s/it]Tuning global sampler:  41%|████      | 82/200 [12:52<16:23,  8.33s/it]Tuning global sampler:  42%|████▏     | 83/200 [13:03<17:36,  9.03s/it]Tuning global sampler:  42%|████▏     | 84/200 [13:07<14:46,  7.64s/it]Tuning global sampler:  42%|████▎     | 85/200 [13:11<12:46,  6.67s/it]Tuning global sampler:  43%|████▎     | 86/200 [13:16<11:23,  6.00s/it]Tuning global sampler:  44%|████▎     | 87/200 [13:20<10:24,  5.52s/it]Tuning global sampler:  44%|████▍     | 88/200 [13:25<09:39,  5.18s/it]Tuning global sampler:  44%|████▍     | 89/200 [13:29<09:18,  5.03s/it]Tuning global sampler:  45%|████▌     | 90/200 [13:34<08:52,  4.84s/it]Tuning global sampler:  46%|████▌     | 91/200 [13:38<08:33,  4.71s/it]Tuning global sampler:  46%|████▌     | 92/200 [13:43<08:19,  4.62s/it]Tuning global sampler:  46%|████▋     | 93/200 [13:47<08:08,  4.57s/it]Tuning global sampler:  47%|████▋     | 94/200 [13:51<07:59,  4.52s/it]Tuning global sampler:  48%|████▊     | 95/200 [13:56<07:51,  4.49s/it]Tuning global sampler:  48%|████▊     | 96/200 [14:00<07:46,  4.48s/it]Tuning global sampler:  48%|████▊     | 97/200 [14:05<07:40,  4.47s/it]Tuning global sampler:  49%|████▉     | 98/200 [14:09<07:38,  4.49s/it]Tuning global sampler:  50%|████▉     | 99/200 [14:18<09:35,  5.70s/it]Tuning global sampler:  50%|█████     | 100/200 [14:22<08:50,  5.30s/it]Tuning global sampler:  50%|█████     | 100/200 [14:27<14:27,  8.67s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.22s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.22s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.22s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.22s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.22s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.22s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.22s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.22s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]
16:03 ninjax INFO    : Saving samples to ./Aplus/injection_3/results_training.npz
16:03 ninjax INFO    : Saving the NF
16:03 ninjax INFO    : Time taken: 911.7483711242676 seconds (15.195806185404459 minutes)
16:03 ninjax INFO    : Creating the final corner plot
16:03 ninjax INFO    : Dumping the final production chains
16:03 ninjax INFO    : Chains shape is: (13, 220000)
16:03 ninjax INFO    : Key: M_c: ESS = 19859, Rhat = 1.030845445545605
16:03 ninjax INFO    : Key: q: ESS = 27020, Rhat = 1.0237414588005167
16:03 ninjax INFO    : Key: s1_z: ESS = 26222, Rhat = 1.0239688862548126
16:03 ninjax INFO    : Key: s2_z: ESS = 28280, Rhat = 1.0221855532522555
16:03 ninjax INFO    : Key: lambda_1: ESS = 27719, Rhat = 1.0226734897089886
16:03 ninjax INFO    : Key: lambda_2: ESS = 34074, Rhat = 1.0183975591234302
16:03 ninjax INFO    : Key: cos_iota: ESS = 17175, Rhat = 1.0351624315669439
16:03 ninjax INFO    : Key: d_L: ESS = 21386, Rhat = 1.0287817554213214
16:03 ninjax INFO    : Key: t_c: ESS = 21806, Rhat = 1.0283166212666988
16:03 ninjax INFO    : Key: phase_c: ESS = 35144, Rhat = 1.018160292758969
16:03 ninjax INFO    : Key: psi: ESS = 29786, Rhat = 1.0209340021803002
16:03 ninjax INFO    : Key: ra: ESS = 12874, Rhat = 1.0459227070040562
16:03 ninjax INFO    : Key: sin_dec: ESS = 20314, Rhat = 1.029772096735196
16:03 ninjax INFO    : Key: eta: ESS = 27020, Rhat = 1.0237414588005167
16:03 ninjax INFO    : Key: iota: ESS = 17175, Rhat = 1.0351624315669439
16:03 ninjax INFO    : Key: dec: ESS = 20314, Rhat = 1.029772096735196
16:03 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.184 +/- 0.264
q: 0.658 +/- 0.200
s1_z: -0.006 +/- 0.027
s2_z: -0.001 +/- 0.028
lambda_1: 2084.116 +/- 1381.581
lambda_2: 2510.688 +/- 1391.426
cos_iota: -0.269 +/- 0.577
d_L: 613.048 +/- 235.861
t_c: -0.039 +/- 0.036
phase_c: 3.133 +/- 1.760
psi: 1.552 +/- 0.895
ra: 2.939 +/- 1.730
sin_dec: 0.052 +/- 0.512
Log probability: 45.243 +/- 53.882
Local acceptance: 0.579 +/- 0.494
Global acceptance: 0.017 +/- 0.129
Max loss: 22.780, Min loss: 1.809
Production summary
==========
M_c: 1.092 +/- 0.000
q: 0.747 +/- 0.129
s1_z: -0.014 +/- 0.025
s2_z: -0.011 +/- 0.027
lambda_1: 1196.538 +/- 843.430
lambda_2: 2265.561 +/- 1362.382
cos_iota: -0.783 +/- 0.178
d_L: 361.318 +/- 66.697
t_c: -0.061 +/- 0.001
phase_c: 3.152 +/- 1.811
psi: 1.541 +/- 0.910
ra: 4.079 +/- 0.018
sin_dec: -0.278 +/- 0.023
Log probability: 112.587 +/- 2.259
Local acceptance: 0.171 +/- 0.377
Global acceptance: 0.117 +/- 0.321
DONE

JOB STATISTICS
==============
Job ID: 10906018
Cluster: snellius
User/Group: twouters2/twouters2
State: RUNNING
Nodes: 1
Cores per node: 16
CPU Utilized: 00:00:00
CPU Efficiency: 0.00% of 06:02:56 core-walltime
Job Wall-clock time: 00:22:41
Memory Utilized: 0.00 MB
Memory Efficiency: 0.00% of 10.00 GB (10.00 GB/node)
WARNING: Efficiency statistics can only be obtained after the job has ended as seff tool is based on the accounting database data.
