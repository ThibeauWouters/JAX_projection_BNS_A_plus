Tue Apr  1 15:41:25 CEST 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
15:41 ninjax INFO    : Checking and setting outdir
15:41 ninjax INFO    : Found generation prior file ./Aplus/injection_26/generation_prior.prior
15:41 ninjax INFO    : The outdir is set to ./Aplus/injection_26
15:41 ninjax INFO    : Loading the given config
15:41 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
15:41 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
15:41 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/MPA1/Aplus/injection_26/complete_config.json
15:41 ninjax INFO    : No seed specified. Generating a random seed: 429697
15:41 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 977089
15:41 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 555162
15:41 ninjax INFO    : Loading the priors
15:41 ninjax INFO    : Setting up the prior
15:41 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
15:41 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
15:41 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
15:41 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
15:41 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
15:41 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
15:41 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
15:41 ninjax INFO    :    dL_prior = PowerLaw(10.0, 1000.0, 2.0, naming=["d_L"])
15:41 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
15:41 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
15:41 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
15:41 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
15:41 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
15:41 ninjax INFO    : Setting up the generation prior
15:41 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 2.468645554845655, naming=["mass_1_source"])
15:41 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 2.468645554845655, naming=["mass_2_source"])
15:41 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
15:41 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
15:41 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
15:41 ninjax INFO    :    dL_prior = PowerLaw(10.0, 460.0, 2.0, naming=["d_L"])
15:41 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
15:41 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
15:41 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
15:41 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
15:41 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
15:41 ninjax INFO    : Finished prior setup
15:41 ninjax INFO    : Setting the transforms
15:41 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
15:41 ninjax INFO    : transforms_str_list has 3 elements
15:41 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
15:41 ninjax INFO    : Setting the likelihood
15:41 ninjax INFO    : GW likelihood provided, setting up the GW pipe
15:41 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz
15:41 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz for BNS injections
15:41 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
15:41 ninjax INFO    : self.is_BNS_run is True
15:41 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
15:41 ninjax INFO    : GW run is an injection
15:41 ninjax INFO    : Setting up GW injection . . . 
15:41 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
15:41 ninjax INFO    : Generating new injection
15:41 ninjax INFO    : Sanity check: generated parameters:
15:41 ninjax INFO    : {'mass_1_source': 1.2410318869706545, 'mass_2_source': 1.0207135993866812, 's1_z': 0.003937709354091101, 's2_z': 0.021217746580160485, 'cos_iota': 0.10218633497199736, 'd_L': 364.41786437297526, 't_c': -0.03232323579242005, 'phase_c': 3.0077618928124648, 'psi': 2.405576955690956, 'ra': 3.089841507078259, 'sin_dec': 0.7280201194892029}
15:41 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz . . . 
15:41 ninjax INFO    : Injected lambda_1: 1008.5353113724402
15:41 ninjax INFO    : Injected lambda_2: 2830.9630490790087
15:41 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.059468571322103 is 256.0
15:41 ninjax INFO    : After transforms, the injection parameters are:
15:41 ninjax INFO    : {'mass_1_source': 1.2410318869706545, 'mass_2_source': 1.0207135993866812, 's1_z': 0.003937709354091101, 's2_z': 0.021217746580160485, 'cos_iota': 0.10218633497199736, 'd_L': 364.41786437297526, 't_c': -0.03232323579242005, 'phase_c': 3.0077618928124648, 'psi': 2.405576955690956, 'ra': 3.089841507078259, 'sin_dec': 0.7280201194892029, 'q': 0.8224716948073205, 'M_c': 1.059468571322103, 'eta': 0.24762778723321838, 'iota': Array(1.46843131, dtype=float64, weak_type=True), 'dec': Array(0.81542951, dtype=float64, weak_type=True), 'lambda_1': 1008.5353113724402, 'lambda_2': 2830.9630490790087}
15:41 ninjax INFO    : The trial injection parameters are {'M_c': 1.059468571322103, 'eta': 0.24762778723321838, 's1_z': 0.003937709354091101, 's2_z': 0.021217746580160485, 'lambda_1': 1008.5353113724402, 'lambda_2': 2830.9630490790087, 'd_L': 364.41786437297526, 'phase_c': 3.0077618928124648, 'iota': 1.4684313118534968, 't_c': -0.03232323579242005, 'psi': 2.405576955690956, 'ra': 3.089841507078259, 'dec': 0.8154295110065154}
15:41 ninjax INFO    : Injecting signals . . .
15:41 ninjax INFO    : self.ifos
15:41 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
15:42 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:42 ninjax INFO    : [-1.11461049e-22+4.56660049e-23j  6.40345939e-23+1.00960656e-24j
  7.75688988e-23-5.15830534e-23j ...
  1.35997211e-23-4.44273412e-23j  7.51640179e-24-7.64596297e-24j
  1.07456406e-23-1.54633269e-23j]
15:42 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:42 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:42 ninjax INFO    : [-8.45972224e-23-4.95190598e-23j -4.59336828e-23+1.22049211e-22j
  4.82835135e-23-6.99875393e-23j ...
  3.16460868e-23-9.07097250e-24j  3.19650158e-23+5.86519128e-24j
 -8.32128545e-24-1.52277038e-23j]
15:42 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:42 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:42 ninjax INFO    : [-2.35504245e-23+4.23092244e-24j -3.59945830e-23-6.71277738e-23j
  1.50819878e-22-9.03980297e-24j ...
 -6.90531034e-23-5.51600731e-23j -2.82766299e-23-5.02392128e-24j
  3.03631268e-23-7.19877967e-23j]
15:42 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
15:42 ninjax INFO    : SNR for ifo H1 is 1.41059145802551
15:42 ninjax INFO    : SNR for ifo L1 is 1.9378561110245192
15:42 ninjax INFO    : SNR for ifo V1 is 4.359006914742982
15:42 ninjax INFO    : The network SNR is 4.974534737165551
15:42 ninjax INFO    : The network SNR does not pass the threshold, trying again
15:42 ninjax INFO    : Generating new injection
15:42 ninjax INFO    : Sanity check: generated parameters:
15:42 ninjax INFO    : {'mass_1_source': 1.6002708264282504, 'mass_2_source': 1.2672930677230658, 's1_z': 0.013602187854584183, 's2_z': 0.010536768299541019, 'cos_iota': -0.22420296196821488, 'd_L': 112.96499942513996, 't_c': 0.09033154567381696, 'phase_c': 3.322794511398916, 'psi': 2.7960138560686065, 'ra': 4.980258796418954, 'sin_dec': 0.9492188416588672}
15:42 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz . . . 
15:42 ninjax INFO    : Injected lambda_1: 229.89097711393748
15:42 ninjax INFO    : Injected lambda_2: 898.9449697153917
15:42 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.2696558713611628 is 256.0
15:42 ninjax INFO    : After transforms, the injection parameters are:
15:42 ninjax INFO    : {'mass_1_source': 1.6002708264282504, 'mass_2_source': 1.2672930677230658, 's1_z': 0.013602187854584183, 's2_z': 0.010536768299541019, 'cos_iota': -0.22420296196821488, 'd_L': 112.96499942513996, 't_c': 0.09033154567381696, 'phase_c': 3.322794511398916, 'psi': 2.7960138560686065, 'ra': 4.980258796418954, 'sin_dec': 0.9492188416588672, 'q': 0.7919241210886913, 'M_c': 1.2696558713611628, 'eta': 0.24662911254270115, 'iota': Array(1.79692143, dtype=float64, weak_type=True), 'dec': Array(1.25074363, dtype=float64, weak_type=True), 'lambda_1': 229.89097711393748, 'lambda_2': 898.9449697153917}
15:42 ninjax INFO    : The trial injection parameters are {'M_c': 1.2696558713611628, 'eta': 0.24662911254270115, 's1_z': 0.013602187854584183, 's2_z': 0.010536768299541019, 'lambda_1': 229.89097711393748, 'lambda_2': 898.9449697153917, 'd_L': 112.96499942513996, 'phase_c': 3.322794511398916, 'iota': 1.7969214272336373, 't_c': 0.09033154567381696, 'psi': 2.7960138560686065, 'ra': 4.980258796418954, 'dec': 1.2507436349073557}
15:42 ninjax INFO    : Injecting signals . . .
15:42 ninjax INFO    : self.ifos
15:42 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
15:42 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:42 ninjax INFO    : [-1.15886261e-22+4.90559023e-23j  7.02753181e-23+1.04334864e-24j
  7.29743833e-23-5.55972096e-23j ...
  1.35997211e-23-4.44273412e-23j  7.51640179e-24-7.64596297e-24j
  1.07456406e-23-1.54633269e-23j]
15:42 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:42 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:42 ninjax INFO    : [-8.60002784e-23-5.35369101e-23j -4.77830427e-23+1.25428975e-22j
  5.07530518e-23-7.12567337e-23j ...
  3.16460868e-23-9.07097250e-24j  3.19650158e-23+5.86519128e-24j
 -8.32128545e-24-1.52277038e-23j]
15:42 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:42 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:42 ninjax INFO    : [-2.17459295e-23-3.13926550e-25j -4.30890257e-23-6.45489854e-23j
  1.57027227e-22-4.39366538e-24j ...
 -6.90531034e-23-5.51600731e-23j -2.82766299e-23-5.02392128e-24j
  3.03631268e-23-7.19877967e-23j]
15:42 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
15:42 ninjax INFO    : SNR for ifo H1 is 12.244548638996323
15:42 ninjax INFO    : SNR for ifo L1 is 7.31202528601697
15:42 ninjax INFO    : SNR for ifo V1 is 9.337184013554852
15:42 ninjax INFO    : The network SNR is 17.046339503221287
15:42 ninjax INFO    : Network SNR passes threshold
15:42 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
15:42 ninjax INFO    :    mass_1_source: 1.6002708264282504
15:42 ninjax INFO    :    mass_2_source: 1.2672930677230658
15:42 ninjax INFO    :    s1_z: 0.013602187854584183
15:42 ninjax INFO    :    s2_z: 0.010536768299541019
15:42 ninjax INFO    :    cos_iota: -0.22420296196821488
15:42 ninjax INFO    :    d_L: 112.96499942513996
15:42 ninjax INFO    :    t_c: 0.09033154567381696
15:42 ninjax INFO    :    phase_c: 3.322794511398916
15:42 ninjax INFO    :    psi: 2.7960138560686065
15:42 ninjax INFO    :    ra: 4.980258796418954
15:42 ninjax INFO    :    sin_dec: 0.9492188416588672
15:42 ninjax INFO    :    q: 0.7919241210886913
15:42 ninjax INFO    :    M_c: 1.2696558713611628
15:42 ninjax INFO    :    eta: 0.24662911254270115
15:42 ninjax INFO    :    iota: 1.7969214272336373
15:42 ninjax INFO    :    dec: 1.2507436349073557
15:42 ninjax INFO    :    lambda_1: 229.89097711393748
15:42 ninjax INFO    :    lambda_2: 898.9449697153917
15:42 ninjax INFO    :    H1_SNR: 12.244548638996323
15:42 ninjax INFO    :    L1_SNR: 7.31202528601697
15:42 ninjax INFO    :    V1_SNR: 9.337184013554852
15:42 ninjax INFO    :    network_SNR: 17.046339503221287
15:42 ninjax INFO    :    epoch: 254.0
15:42 ninjax INFO    :    gmst: 2.7288901910520846
15:42 ninjax INFO    :    duration: 256.0
15:42 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
15:42 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
15:42 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
15:48 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 387.9282569885254 seconds = 6.465470949808757 minutes
15:48 ninjax INFO    : The priors are not modified after their initialization
15:48 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
15:48 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
15:48 ninjax INFO    : sample: {'M_c': Array([1.83457905, 2.10969561, 1.80326382], dtype=float64), 'q': Array([0.80857912, 0.42140965, 0.45321623], dtype=float64), 's1_z': Array([ 0.02191942, -0.04384294,  0.00575572], dtype=float64), 's2_z': Array([ 0.00824514, -0.00936287,  0.04135382], dtype=float64), 'lambda_1': Array([2743.64257845,   14.78323312,   15.86413107], dtype=float64), 'lambda_2': Array([4148.68899374,  703.96277642, 2155.55813985], dtype=float64), 'cos_iota': Array([ 0.95748296, -0.86856104, -0.74557018], dtype=float64), 'd_L': Array([429.35696078, 969.31771248, 572.92536218], dtype=float64), 't_c': Array([ 0.07288778, -0.02888077,  0.00972593], dtype=float64), 'phase_c': Array([3.98093247, 1.51559318, 3.58060578], dtype=float64), 'psi': Array([0.56778335, 2.12688852, 2.67446015], dtype=float64), 'ra': Array([0.29316976, 0.62685644, 5.93485024], dtype=float64), 'sin_dec': Array([ 0.23204944, -0.48063621, -0.52163015], dtype=float64)}
15:48 ninjax INFO    : log_prob: [-239.57755894  -22.5749096   -43.19503679]
15:48 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 1.6002708264282504, 'mass_2_source': 1.2672930677230658, 's1_z': 0.013602187854584183, 's2_z': 0.010536768299541019, 'cos_iota': -0.22420296196821488, 'd_L': 112.96499942513996, 't_c': 0.09033154567381696, 'phase_c': 3.322794511398916, 'psi': 2.7960138560686065, 'ra': 4.980258796418954, 'sin_dec': 0.9492188416588672, 'q': 0.7919241210886913, 'M_c': 1.2696558713611628, 'eta': 0.24662911254270115, 'iota': Array(1.79692143, dtype=float64, weak_type=True), 'dec': Array(1.25074363, dtype=float64, weak_type=True), 'lambda_1': 229.89097711393748, 'lambda_2': 898.9449697153917, 'H1_SNR': 12.244548638996323, 'L1_SNR': 7.31202528601697, 'V1_SNR': 9.337184013554852, 'network_SNR': 17.046339503221287, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
15:48 ninjax INFO    : log_prob at the injection parameters is: 116.39545114628582
15:48 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
15:48 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
15:48 ninjax INFO    : Ninjax setup complete.
15:48 ninjax INFO    : Saving output to ./Aplus/injection_26/
15:48 ninjax INFO    : Using polynomial learning rate scheduler
15:48 ninjax INFO    : The hyperparameters passed to flowMC and jim are
15:48 ninjax INFO    :    n_loop_training: 200
15:48 ninjax INFO    :    n_loop_production: 10
15:48 ninjax INFO    :    n_local_steps: 100
15:48 ninjax INFO    :    n_global_steps: 1000
15:48 ninjax INFO    :    n_epochs: 25
15:48 ninjax INFO    :    n_chains: 1000
15:48 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x14ec6a84fa30>
15:48 ninjax INFO    :    max_samples: 50000
15:48 ninjax INFO    :    momentum: 0.9
15:48 ninjax INFO    :    batch_size: 30000
15:48 ninjax INFO    :    use_global: True
15:48 ninjax INFO    :    keep_quantile: 0.0
15:48 ninjax INFO    :    train_thinning: 10
15:48 ninjax INFO    :    output_thinning: 50
15:48 ninjax INFO    :    n_sample_max: 10000
15:48 ninjax INFO    :    num_layers: 10
15:48 ninjax INFO    :    hidden_size: [128, 128]
15:48 ninjax INFO    :    num_bins: 8
15:48 ninjax INFO    :    save_training_chains: False
15:48 ninjax INFO    :    eps_mass_matrix: 1e-05
15:48 ninjax INFO    :    use_scheduler: True
15:48 ninjax INFO    :    use_temperature: False
15:48 ninjax INFO    :    which_temperature_schedule: exponential
15:48 ninjax INFO    :    starting_temperature: 2.0
15:48 ninjax INFO    :    stop_tempering_iteration: 75
15:48 ninjax INFO    :    stopping_criterion_global_acc: 0.1
15:48 ninjax INFO    :    stopping_criterion_loss: -inf
15:48 ninjax INFO    :    nf_model_kwargs: {}
15:48 ninjax INFO    :    local sampler arg not shown (pretty print)
15:48 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-1.11035113e-22  6.46324196e-23  7.75098747e-23 -3.44248736e-23
 -1.44229518e-23 -6.82665627e-23  3.45589382e-23  6.59548489e-24
  4.40913079e-23 -2.82736875e-23]
[ 4.61565804e-23  7.55643764e-25 -5.22297496e-23 -1.48272903e-24
 -2.55539370e-23 -7.03514266e-24 -4.51425719e-23 -1.14155643e-23
 -5.40735622e-23 -4.25868478e-23]
Checking the noise that was generated in inject_signal ifo:
[-8.50091943e-23 -4.68136636e-23  4.81553308e-23  3.13123713e-24
 -5.06094053e-23  9.29844759e-23 -8.02243506e-24 -7.95843407e-24
 -4.05263912e-24  2.45615983e-23]
[-5.03108180e-23  1.22197101e-22 -6.91046789e-23  3.41173299e-23
 -9.14995874e-23  1.09752746e-22 -1.49282479e-23 -4.81702255e-23
 -6.07570770e-23  1.14169476e-22]
Checking the noise that was generated in inject_signal ifo:
[-2.59014063e-23 -3.76575642e-23  1.52149290e-22  3.17768292e-23
 -2.51480022e-23 -6.10586597e-23  4.48762376e-24 -3.86330837e-25
 -5.56286626e-23  2.27315616e-23]
[ 3.24492489e-24 -6.51962390e-23 -6.86585999e-24  1.14241936e-23
 -1.78197045e-23  1.51468086e-22 -1.48169032e-23  8.84388707e-23
  2.83286788e-23  3.73162576e-23]
Checking the noise that was generated in inject_signal ifo:
[-1.11035113e-22  6.46324196e-23  7.75098747e-23 -3.44248736e-23
 -1.44229518e-23 -6.82665627e-23  3.45589382e-23  6.59548489e-24
  4.40913079e-23 -2.82736875e-23]
[ 4.61565804e-23  7.55643764e-25 -5.22297496e-23 -1.48272903e-24
 -2.55539370e-23 -7.03514266e-24 -4.51425719e-23 -1.14155643e-23
 -5.40735622e-23 -4.25868478e-23]
Checking the noise that was generated in inject_signal ifo:
[-8.50091943e-23 -4.68136636e-23  4.81553308e-23  3.13123713e-24
 -5.06094053e-23  9.29844759e-23 -8.02243506e-24 -7.95843407e-24
 -4.05263912e-24  2.45615983e-23]
[-5.03108180e-23  1.22197101e-22 -6.91046789e-23  3.41173299e-23
 -9.14995874e-23  1.09752746e-22 -1.49282479e-23 -4.81702255e-23
 -6.07570770e-23  1.14169476e-22]
Checking the noise that was generated in inject_signal ifo:
[-2.59014063e-23 -3.76575642e-23  1.52149290e-22  3.17768292e-23
 -2.51480022e-23 -6.10586597e-23  4.48762376e-24 -3.86330837e-25
 -5.56286626e-23  2.27315616e-23]
[ 3.24492489e-24 -6.51962390e-23 -6.86585999e-24  1.14241936e-23
 -1.78197045e-23  1.51468086e-22 -1.48169032e-23  8.84388707e-23
  2.83286788e-23  3.73162576e-23]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.18183231353759766 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 1.6002708264282504, 'mass_2_source': 1.2672930677230658, 's1_z': 0.013602187854584183, 's2_z': 0.010536768299541019, 'cos_iota': -0.22420296196821488, 'd_L': 112.96499942513996, 't_c': 0.09033154567381696, 'phase_c': 3.322794511398916, 'psi': 2.7960138560686065, 'ra': 4.980258796418954, 'sin_dec': 0.9492188416588672, 'q': 0.7919241210886913, 'M_c': 1.2696558713611628, 'eta': 0.24662911254270115, 'iota': Array(1.79692143, dtype=float64, weak_type=True), 'dec': Array(1.25074363, dtype=float64, weak_type=True), 'lambda_1': 229.89097711393748, 'lambda_2': 898.9449697153917, 'H1_SNR': 12.244548638996323, 'L1_SNR': 7.31202528601697, 'V1_SNR': 9.337184013554852, 'network_SNR': 17.046339503221287, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
Constructing reference waveforms. . .
Time for reference waveforms: 1.41914963722229 seconds
Time for h_sky_low and h_sky_center: 37.488829612731934 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.741753101348877
Going to compute coefficients . . .
Time for computing coefficients: 316.9341506958008 seconds
Time for computing coefficients: 7.36398983001709 seconds
Time for computing coefficients: 7.144564628601074 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:42<9:00:04, 162.84s/it]Tuning global sampler:   1%|          | 2/200 [02:47<3:50:07, 69.74s/it] Tuning global sampler:   2%|▏         | 3/200 [02:52<2:11:24, 40.02s/it]Tuning global sampler:   2%|▏         | 4/200 [02:56<1:25:04, 26.04s/it]Tuning global sampler:   2%|▎         | 5/200 [03:01<59:31, 18.31s/it]  Tuning global sampler:   3%|▎         | 6/200 [03:05<44:08, 13.65s/it]Tuning global sampler:   4%|▎         | 7/200 [03:10<34:20, 10.67s/it]Tuning global sampler:   4%|▍         | 8/200 [03:15<27:59,  8.75s/it]Tuning global sampler:   4%|▍         | 9/200 [03:19<23:40,  7.44s/it]Tuning global sampler:   5%|▌         | 10/200 [03:24<21:02,  6.65s/it]Tuning global sampler:   6%|▌         | 11/200 [03:29<18:57,  6.02s/it]Tuning global sampler:   6%|▌         | 12/200 [03:33<17:29,  5.58s/it]Tuning global sampler:   6%|▋         | 13/200 [03:38<16:26,  5.27s/it]Tuning global sampler:   7%|▋         | 14/200 [03:42<15:45,  5.08s/it]Tuning global sampler:   8%|▊         | 15/200 [03:47<15:16,  4.96s/it]Tuning global sampler:   8%|▊         | 16/200 [03:52<15:01,  4.90s/it]Tuning global sampler:   8%|▊         | 17/200 [03:57<15:37,  5.13s/it]Tuning global sampler:   9%|▉         | 18/200 [04:02<15:08,  4.99s/it]Tuning global sampler:  10%|▉         | 19/200 [04:07<14:44,  4.89s/it]Tuning global sampler:  10%|█         | 20/200 [04:11<14:27,  4.82s/it]Tuning global sampler:  10%|█         | 21/200 [04:16<14:14,  4.78s/it]Tuning global sampler:  11%|█         | 22/200 [04:21<14:01,  4.73s/it]Tuning global sampler:  12%|█▏        | 23/200 [04:25<13:54,  4.71s/it]Tuning global sampler:  12%|█▏        | 24/200 [04:30<13:34,  4.63s/it]Tuning global sampler:  12%|█▎        | 25/200 [04:34<13:17,  4.56s/it]Tuning global sampler:  13%|█▎        | 26/200 [04:39<13:04,  4.51s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:43<12:54,  4.47s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:47<12:45,  4.45s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:52<12:38,  4.43s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:56<12:31,  4.42s/it]Tuning global sampler:  16%|█▌        | 31/200 [05:01<12:25,  4.41s/it]Tuning global sampler:  16%|█▌        | 32/200 [05:05<12:20,  4.41s/it]Tuning global sampler:  16%|█▋        | 33/200 [05:09<12:12,  4.39s/it]Tuning global sampler:  17%|█▋        | 34/200 [05:14<12:07,  4.38s/it]Tuning global sampler:  18%|█▊        | 35/200 [05:18<12:03,  4.39s/it]Tuning global sampler:  18%|█▊        | 36/200 [05:24<12:49,  4.69s/it]Tuning global sampler:  18%|█▊        | 37/200 [05:28<12:30,  4.60s/it]Tuning global sampler:  19%|█▉        | 38/200 [05:32<12:16,  4.55s/it]Tuning global sampler:  20%|█▉        | 39/200 [05:37<12:04,  4.50s/it]Tuning global sampler:  20%|██        | 40/200 [05:41<11:55,  4.47s/it]Tuning global sampler:  20%|██        | 41/200 [05:46<11:47,  4.45s/it]Tuning global sampler:  21%|██        | 42/200 [05:50<11:40,  4.43s/it]Tuning global sampler:  22%|██▏       | 43/200 [05:54<11:34,  4.42s/it]Tuning global sampler:  22%|██▏       | 44/200 [05:59<11:27,  4.41s/it]Tuning global sampler:  22%|██▎       | 45/200 [06:03<11:21,  4.39s/it]Tuning global sampler:  23%|██▎       | 46/200 [06:07<11:16,  4.39s/it]Tuning global sampler:  24%|██▎       | 47/200 [06:12<11:12,  4.39s/it]Tuning global sampler:  24%|██▍       | 48/200 [06:16<11:13,  4.43s/it]Tuning global sampler:  24%|██▍       | 49/200 [06:21<11:08,  4.43s/it]Tuning global sampler:  25%|██▌       | 50/200 [06:25<11:02,  4.42s/it]Tuning global sampler:  26%|██▌       | 51/200 [06:30<10:59,  4.42s/it]Tuning global sampler:  26%|██▌       | 52/200 [06:36<12:40,  5.14s/it]Tuning global sampler:  26%|██▋       | 53/200 [06:58<24:20,  9.94s/it]Tuning global sampler:  27%|██▋       | 54/200 [07:07<23:46,  9.77s/it]Tuning global sampler:  28%|██▊       | 55/200 [07:29<32:15, 13.35s/it]Tuning global sampler:  28%|██▊       | 56/200 [07:36<27:55, 11.63s/it]Tuning global sampler:  28%|██▊       | 57/200 [07:43<24:17, 10.19s/it]Tuning global sampler:  29%|██▉       | 58/200 [07:47<20:00,  8.46s/it]Tuning global sampler:  30%|██▉       | 59/200 [07:52<17:01,  7.24s/it]Tuning global sampler:  30%|███       | 60/200 [07:56<14:54,  6.39s/it]Tuning global sampler:  30%|███       | 61/200 [08:01<13:25,  5.79s/it]Tuning global sampler:  31%|███       | 62/200 [08:05<12:22,  5.38s/it]Tuning global sampler:  32%|███▏      | 63/200 [08:10<11:38,  5.10s/it]Tuning global sampler:  32%|███▏      | 64/200 [08:14<11:04,  4.89s/it]Tuning global sampler:  32%|███▎      | 65/200 [08:18<10:40,  4.74s/it]Tuning global sampler:  33%|███▎      | 66/200 [08:23<10:20,  4.63s/it]Tuning global sampler:  34%|███▎      | 67/200 [08:27<10:05,  4.55s/it]Tuning global sampler:  34%|███▍      | 68/200 [08:31<09:55,  4.51s/it]Tuning global sampler:  34%|███▍      | 69/200 [08:36<09:47,  4.48s/it]Tuning global sampler:  35%|███▌      | 70/200 [08:40<09:40,  4.46s/it]Tuning global sampler:  36%|███▌      | 71/200 [08:45<09:34,  4.45s/it]Tuning global sampler:  36%|███▌      | 72/200 [08:49<09:27,  4.44s/it]Tuning global sampler:  36%|███▋      | 73/200 [08:54<09:22,  4.43s/it]Tuning global sampler:  37%|███▋      | 74/200 [08:58<09:17,  4.43s/it]Tuning global sampler:  38%|███▊      | 75/200 [09:03<09:17,  4.46s/it]Tuning global sampler:  38%|███▊      | 76/200 [09:07<09:11,  4.45s/it]Tuning global sampler:  38%|███▊      | 77/200 [09:11<09:04,  4.43s/it]Tuning global sampler:  39%|███▉      | 78/200 [09:16<08:58,  4.41s/it]Tuning global sampler:  40%|███▉      | 79/200 [09:21<09:32,  4.73s/it]Tuning global sampler:  40%|████      | 80/200 [09:26<09:15,  4.63s/it]Tuning global sampler:  40%|████      | 81/200 [09:30<09:03,  4.57s/it]Tuning global sampler:  41%|████      | 82/200 [09:34<08:56,  4.54s/it]Tuning global sampler:  42%|████▏     | 83/200 [09:39<08:46,  4.50s/it]Tuning global sampler:  42%|████▏     | 84/200 [09:43<08:39,  4.48s/it]Tuning global sampler:  42%|████▎     | 85/200 [09:48<08:32,  4.45s/it]Tuning global sampler:  42%|████▎     | 85/200 [09:56<13:26,  7.01s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.22s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.22s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.22s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.22s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.22s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.22s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.22s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.22s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]
15:59 ninjax INFO    : Saving samples to ./Aplus/injection_26/results_training.npz
15:59 ninjax INFO    : Saving the NF
15:59 ninjax INFO    : Time taken: 649.8323912620544 seconds (10.830539854367574 minutes)
15:59 ninjax INFO    : Creating the final corner plot
15:59 ninjax INFO    : Dumping the final production chains
15:59 ninjax INFO    : Chains shape is: (13, 220000)
15:59 ninjax INFO    : Key: M_c: ESS = 33197, Rhat = 1.0195089420249945
15:59 ninjax INFO    : Key: q: ESS = 26022, Rhat = 1.0244096319316263
15:59 ninjax INFO    : Key: s1_z: ESS = 36672, Rhat = 1.0181010351230477
15:59 ninjax INFO    : Key: s2_z: ESS = 35780, Rhat = 1.0182830815207913
15:59 ninjax INFO    : Key: lambda_1: ESS = 34946, Rhat = 1.0186132783582862
15:59 ninjax INFO    : Key: lambda_2: ESS = 26502, Rhat = 1.0230904901751239
15:59 ninjax INFO    : Key: cos_iota: ESS = 21733, Rhat = 1.0284477667759415
15:59 ninjax INFO    : Key: d_L: ESS = 13790, Rhat = 1.0438340250196245
15:59 ninjax INFO    : Key: t_c: ESS = 27414, Rhat = 1.0225346009470357
15:59 ninjax INFO    : Key: phase_c: ESS = 38438, Rhat = 1.0174372449128142
15:59 ninjax INFO    : Key: psi: ESS = 41743, Rhat = 1.0176532113762682
15:59 ninjax INFO    : Key: ra: ESS = 30961, Rhat = 1.0219398704227822
15:59 ninjax INFO    : Key: sin_dec: ESS = 28556, Rhat = 1.02141489555473
15:59 ninjax INFO    : Key: eta: ESS = 26022, Rhat = 1.0244096319316263
15:59 ninjax INFO    : Key: iota: ESS = 21733, Rhat = 1.0284477667759415
15:59 ninjax INFO    : Key: dec: ESS = 28556, Rhat = 1.02141489555473
15:59 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.339 +/- 0.251
q: 0.707 +/- 0.234
s1_z: 0.006 +/- 0.027
s2_z: 0.006 +/- 0.027
lambda_1: 1999.586 +/- 1449.895
lambda_2: 2089.315 +/- 1443.262
cos_iota: -0.133 +/- 0.592
d_L: 581.959 +/- 262.150
t_c: 0.067 +/- 0.046
phase_c: 3.449 +/- 1.807
psi: 1.491 +/- 0.873
ra: 4.569 +/- 1.252
sin_dec: 0.612 +/- 0.529
Log probability: 39.669 +/- 54.579
Local acceptance: 0.804 +/- 0.397
Global acceptance: 0.016 +/- 0.127
Max loss: 22.842, Min loss: 8.190
Production summary
==========
M_c: 1.270 +/- 0.000
q: 0.848 +/- 0.097
s1_z: 0.018 +/- 0.022
s2_z: 0.012 +/- 0.024
lambda_1: 762.726 +/- 828.584
lambda_2: 1141.829 +/- 1051.607
cos_iota: -0.714 +/- 0.261
d_L: 289.896 +/- 68.685
t_c: 0.091 +/- 0.001
phase_c: 3.096 +/- 1.822
psi: 1.620 +/- 0.886
ra: 4.978 +/- 0.019
sin_dec: 0.948 +/- 0.009
Log probability: 111.686 +/- 2.788
Local acceptance: 0.479 +/- 0.500
Global acceptance: 0.118 +/- 0.323
DONE

JOB STATISTICS
==============
Job ID: 10906042
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:11:43
CPU Efficiency: 3.94% of 04:57:04 core-walltime
Job Wall-clock time: 00:18:34
Memory Utilized: 4.63 GB
Memory Efficiency: 46.33% of 10.00 GB (10.00 GB/node)
