Tue Apr  1 15:41:29 CEST 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
15:41 ninjax INFO    : Checking and setting outdir
15:41 ninjax INFO    : Found generation prior file ./Aplus/injection_28/generation_prior.prior
15:41 ninjax INFO    : The outdir is set to ./Aplus/injection_28
15:41 ninjax INFO    : Loading the given config
15:41 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
15:41 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
15:41 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/MPA1/Aplus/injection_28/complete_config.json
15:41 ninjax INFO    : No seed specified. Generating a random seed: 348875
15:41 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 265428
15:41 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 973291
15:41 ninjax INFO    : Loading the priors
15:41 ninjax INFO    : Setting up the prior
15:41 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
15:41 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
15:41 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
15:41 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
15:41 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
15:41 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
15:41 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
15:41 ninjax INFO    :    dL_prior = PowerLaw(10.0, 1000.0, 2.0, naming=["d_L"])
15:41 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
15:41 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
15:41 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
15:41 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
15:41 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
15:41 ninjax INFO    : Setting up the generation prior
15:41 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 2.468645554845655, naming=["mass_1_source"])
15:41 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 2.468645554845655, naming=["mass_2_source"])
15:41 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
15:41 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
15:41 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
15:41 ninjax INFO    :    dL_prior = PowerLaw(10.0, 460.0, 2.0, naming=["d_L"])
15:41 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
15:41 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
15:41 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
15:41 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
15:41 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
15:41 ninjax INFO    : Finished prior setup
15:41 ninjax INFO    : Setting the transforms
15:41 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
15:41 ninjax INFO    : transforms_str_list has 3 elements
15:41 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
15:41 ninjax INFO    : Setting the likelihood
15:41 ninjax INFO    : GW likelihood provided, setting up the GW pipe
15:41 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz
15:41 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz for BNS injections
15:41 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
15:41 ninjax INFO    : self.is_BNS_run is True
15:41 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
15:41 ninjax INFO    : GW run is an injection
15:41 ninjax INFO    : Setting up GW injection . . . 
15:41 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
15:41 ninjax INFO    : Generating new injection
15:41 ninjax INFO    : Sanity check: generated parameters:
15:41 ninjax INFO    : {'mass_1_source': 1.1580744319285512, 'mass_2_source': 1.4037643146927437, 's1_z': -0.04051206962015082, 's2_z': 0.048952965473559304, 'cos_iota': -0.627841984018771, 'd_L': 457.04400919680995, 't_c': 0.048311524524747046, 'phase_c': 1.5244059347073151, 'psi': 0.8675617181938176, 'ra': 3.364018047408372, 'sin_dec': 0.04665568382397289}
15:41 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz . . . 
15:41 ninjax INFO    : Injected lambda_1: 504.6665616849387
15:41 ninjax INFO    : Injected lambda_2: 1465.1421791718394
15:41 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.2234624194260264 is 256.0
15:41 ninjax INFO    : After transforms, the injection parameters are:
15:41 ninjax INFO    : {'mass_1_source': 1.4037643146927437, 'mass_2_source': 1.1580744319285512, 's1_z': -0.04051206962015082, 's2_z': 0.048952965473559304, 'cos_iota': -0.627841984018771, 'd_L': 457.04400919680995, 't_c': 0.048311524524747046, 'phase_c': 1.5244059347073151, 'psi': 0.8675617181938176, 'ra': 3.364018047408372, 'sin_dec': 0.04665568382397289, 'q': 0.8249778255561588, 'M_c': 1.2234624194260264, 'eta': 0.2477006188057785, 'iota': Array(2.24957384, dtype=float64, weak_type=True), 'dec': Array(0.04667263, dtype=float64, weak_type=True), 'lambda_1': 504.6665616849387, 'lambda_2': 1465.1421791718394}
15:41 ninjax INFO    : The trial injection parameters are {'M_c': 1.2234624194260264, 'eta': 0.2477006188057785, 's1_z': -0.04051206962015082, 's2_z': 0.048952965473559304, 'lambda_1': 504.6665616849387, 'lambda_2': 1465.1421791718394, 'd_L': 457.04400919680995, 'phase_c': 1.5244059347073151, 'iota': 2.249573842571653, 't_c': 0.048311524524747046, 'psi': 0.8675617181938176, 'ra': 3.364018047408372, 'dec': 0.046672626740793276}
15:41 ninjax INFO    : Injecting signals . . .
15:41 ninjax INFO    : self.ifos
15:41 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
15:41 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:41 ninjax INFO    : [ 9.59764556e-23+8.87039722e-24j  7.09212367e-23-4.39367085e-23j
  1.29255078e-22-4.13413789e-24j ...
  2.24410477e-23-3.91349371e-25j  9.28744532e-24+2.17326724e-23j
 -3.04914939e-24+2.91683552e-24j]
15:41 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:41 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:41 ninjax INFO    : [-1.56775858e-23-1.45066202e-23j -1.06796479e-24+1.19674369e-23j
  3.19137668e-23-6.93144742e-23j ...
  1.66459486e-24+1.18750567e-23j  4.06247035e-23-5.03396325e-23j
  2.98296218e-23-1.90245842e-23j]
15:41 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:41 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:41 ninjax INFO    : [-1.09951385e-23-1.13358981e-22j -9.61308646e-23-6.80983783e-23j
 -2.81461250e-23-1.32003877e-22j ...
  4.04673531e-23-1.95637801e-23j  2.72123883e-23-1.16851470e-23j
  7.86208129e-25-8.50893149e-23j]
15:41 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
15:41 ninjax INFO    : SNR for ifo H1 is 5.82191575415677
15:41 ninjax INFO    : SNR for ifo L1 is 5.5201278618720355
15:41 ninjax INFO    : SNR for ifo V1 is 4.822491810804092
15:41 ninjax INFO    : The network SNR is 9.360712682546518
15:41 ninjax INFO    : The network SNR does not pass the threshold, trying again
15:41 ninjax INFO    : Generating new injection
15:41 ninjax INFO    : Sanity check: generated parameters:
15:41 ninjax INFO    : {'mass_1_source': 1.2873609187685549, 'mass_2_source': 2.097891271906356, 's1_z': -0.0071149069930580774, 's2_z': 0.001954328241589344, 'cos_iota': -0.42346404495607537, 'd_L': 282.94845403608315, 't_c': -0.05315013933943709, 'phase_c': 2.6507423240856762, 'psi': 1.5845903425966923, 'ra': 2.792570125843334, 'sin_dec': -0.020646475562172473}
15:41 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz . . . 
15:41 ninjax INFO    : Injected lambda_1: 32.968412812677926
15:41 ninjax INFO    : Injected lambda_2: 824.0636371390323
15:41 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.5131655899903527 is 128.0
15:41 ninjax INFO    : After transforms, the injection parameters are:
15:41 ninjax INFO    : {'mass_1_source': 2.097891271906356, 'mass_2_source': 1.2873609187685549, 's1_z': -0.0071149069930580774, 's2_z': 0.001954328241589344, 'cos_iota': -0.42346404495607537, 'd_L': 282.94845403608315, 't_c': -0.05315013933943709, 'phase_c': 2.6507423240856762, 'psi': 1.5845903425966923, 'ra': 2.792570125843334, 'sin_dec': -0.020646475562172473, 'q': 0.6136452045957218, 'M_c': 1.5131655899903527, 'eta': 0.23566833924616465, 'iota': Array(2.00806206, dtype=float64, weak_type=True), 'dec': Array(-0.02064794, dtype=float64, weak_type=True), 'lambda_1': 32.968412812677926, 'lambda_2': 824.0636371390323}
15:41 ninjax INFO    : The trial injection parameters are {'M_c': 1.5131655899903527, 'eta': 0.23566833924616465, 's1_z': -0.0071149069930580774, 's2_z': 0.001954328241589344, 'lambda_1': 32.968412812677926, 'lambda_2': 824.0636371390323, 'd_L': 282.94845403608315, 'phase_c': 2.6507423240856762, 'iota': 2.0080620615944795, 't_c': -0.05315013933943709, 'psi': 1.5845903425966923, 'ra': 2.792570125843334, 'dec': -0.020647942696404995}
15:41 ninjax INFO    : Injecting signals . . .
15:41 ninjax INFO    : self.ifos
15:41 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
15:41 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
15:41 ninjax INFO    : [ 4.32734094e-23+8.63783361e-24j -5.24657301e-23-2.99012776e-24j
  4.09605590e-23-7.93773175e-23j ...
 -2.45354743e-24-3.18917884e-23j -4.82610878e-24-2.09181357e-23j
 -9.86832480e-24+3.76714326e-23j]
15:41 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
15:41 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
15:41 ninjax INFO    : [ 8.54511148e-23+1.98595728e-23j -3.16153068e-23+2.85834545e-23j
  2.25789254e-23+8.04062364e-24j ...
  3.76116991e-23-9.92808225e-24j -1.21134716e-23+2.37639769e-23j
 -1.04553585e-23+4.95355782e-24j]
15:41 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
15:41 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
15:41 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
15:41 ninjax INFO    : [-2.46687510e-23-3.53344218e-23j -4.15689335e-23-7.49365486e-23j
 -1.30387318e-23-1.10843144e-22j ...
 -8.61115417e-24+5.39761583e-23j -6.65347052e-23+4.29731824e-23j
  1.71644172e-23+1.71220858e-23j]
15:41 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
15:41 ninjax INFO    : SNR for ifo H1 is 6.44592593651997
15:41 ninjax INFO    : SNR for ifo L1 is 4.895330116286023
15:41 ninjax INFO    : SNR for ifo V1 is 8.15300142615889
15:41 ninjax INFO    : The network SNR is 11.488500789113724
15:41 ninjax INFO    : Network SNR passes threshold
15:41 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
15:41 ninjax INFO    :    mass_1_source: 2.097891271906356
15:41 ninjax INFO    :    mass_2_source: 1.2873609187685549
15:41 ninjax INFO    :    s1_z: -0.0071149069930580774
15:41 ninjax INFO    :    s2_z: 0.001954328241589344
15:41 ninjax INFO    :    cos_iota: -0.42346404495607537
15:41 ninjax INFO    :    d_L: 282.94845403608315
15:41 ninjax INFO    :    t_c: -0.05315013933943709
15:41 ninjax INFO    :    phase_c: 2.6507423240856762
15:41 ninjax INFO    :    psi: 1.5845903425966923
15:41 ninjax INFO    :    ra: 2.792570125843334
15:41 ninjax INFO    :    sin_dec: -0.020646475562172473
15:41 ninjax INFO    :    q: 0.6136452045957218
15:41 ninjax INFO    :    M_c: 1.5131655899903527
15:41 ninjax INFO    :    eta: 0.23566833924616465
15:41 ninjax INFO    :    iota: 2.0080620615944795
15:41 ninjax INFO    :    dec: -0.020647942696404995
15:41 ninjax INFO    :    lambda_1: 32.968412812677926
15:41 ninjax INFO    :    lambda_2: 824.0636371390323
15:41 ninjax INFO    :    H1_SNR: 6.44592593651997
15:41 ninjax INFO    :    L1_SNR: 4.895330116286023
15:41 ninjax INFO    :    V1_SNR: 8.15300142615889
15:41 ninjax INFO    :    network_SNR: 11.488500789113724
15:41 ninjax INFO    :    epoch: 126.0
15:41 ninjax INFO    :    gmst: 2.7288901910520846
15:41 ninjax INFO    :    duration: 128.0
15:41 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
15:41 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
15:41 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
15:44 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 152.18663692474365 seconds = 2.5364439487457275 minutes
15:44 ninjax INFO    : The priors are not modified after their initialization
15:44 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
15:44 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
15:44 ninjax INFO    : sample: {'M_c': Array([2.10874846, 2.07916558, 1.37743634], dtype=float64), 'q': Array([0.32586973, 0.99049706, 0.62298182], dtype=float64), 's1_z': Array([ 0.01584114, -0.00345298,  0.04744452], dtype=float64), 's2_z': Array([-0.04285047, -0.01108682, -0.04943352], dtype=float64), 'lambda_1': Array([4987.20680297,  944.27541878, 4698.66676089], dtype=float64), 'lambda_2': Array([3314.15086726, 1185.77252857,   12.2681714 ], dtype=float64), 'cos_iota': Array([ 0.39148405, -0.54988061,  0.90707894], dtype=float64), 'd_L': Array([969.50890343, 943.88170503, 809.55060888], dtype=float64), 't_c': Array([0.08138466, 0.09457791, 0.07163832], dtype=float64), 'phase_c': Array([0.35624457, 5.7558556 , 4.77121044], dtype=float64), 'psi': Array([2.08587284, 0.13027005, 1.9662739 ], dtype=float64), 'ra': Array([2.08613376, 5.90986208, 0.64059775], dtype=float64), 'sin_dec': Array([-0.21550052, -0.97195267,  0.68807934], dtype=float64)}
15:44 ninjax INFO    : log_prob: [ -1.83290096 -16.9295225  -56.87663511]
15:44 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 2.097891271906356, 'mass_2_source': 1.2873609187685549, 's1_z': -0.0071149069930580774, 's2_z': 0.001954328241589344, 'cos_iota': -0.42346404495607537, 'd_L': 282.94845403608315, 't_c': -0.05315013933943709, 'phase_c': 2.6507423240856762, 'psi': 1.5845903425966923, 'ra': 2.792570125843334, 'sin_dec': -0.020646475562172473, 'q': 0.6136452045957218, 'M_c': 1.5131655899903527, 'eta': 0.23566833924616465, 'iota': Array(2.00806206, dtype=float64, weak_type=True), 'dec': Array(-0.02064794, dtype=float64, weak_type=True), 'lambda_1': 32.968412812677926, 'lambda_2': 824.0636371390323, 'H1_SNR': 6.44592593651997, 'L1_SNR': 4.895330116286023, 'V1_SNR': 8.15300142615889, 'network_SNR': 11.488500789113724, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
15:44 ninjax INFO    : log_prob at the injection parameters is: 30.855251107781925
15:44 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
15:44 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
15:44 ninjax INFO    : Ninjax setup complete.
15:44 ninjax INFO    : Saving output to ./Aplus/injection_28/
15:44 ninjax INFO    : Using polynomial learning rate scheduler
15:44 ninjax INFO    : The hyperparameters passed to flowMC and jim are
15:44 ninjax INFO    :    n_loop_training: 200
15:44 ninjax INFO    :    n_loop_production: 10
15:44 ninjax INFO    :    n_local_steps: 100
15:44 ninjax INFO    :    n_global_steps: 1000
15:44 ninjax INFO    :    n_epochs: 25
15:44 ninjax INFO    :    n_chains: 1000
15:44 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x14eb48680160>
15:44 ninjax INFO    :    max_samples: 50000
15:44 ninjax INFO    :    momentum: 0.9
15:44 ninjax INFO    :    batch_size: 30000
15:44 ninjax INFO    :    use_global: True
15:44 ninjax INFO    :    keep_quantile: 0.0
15:44 ninjax INFO    :    train_thinning: 10
15:44 ninjax INFO    :    output_thinning: 50
15:44 ninjax INFO    :    n_sample_max: 10000
15:44 ninjax INFO    :    num_layers: 10
15:44 ninjax INFO    :    hidden_size: [128, 128]
15:44 ninjax INFO    :    num_bins: 8
15:44 ninjax INFO    :    save_training_chains: False
15:44 ninjax INFO    :    eps_mass_matrix: 1e-05
15:44 ninjax INFO    :    use_scheduler: True
15:44 ninjax INFO    :    use_temperature: False
15:44 ninjax INFO    :    which_temperature_schedule: exponential
15:44 ninjax INFO    :    starting_temperature: 2.0
15:44 ninjax INFO    :    stop_tempering_iteration: 75
15:44 ninjax INFO    :    stopping_criterion_global_acc: 0.1
15:44 ninjax INFO    :    stopping_criterion_loss: -inf
15:44 ninjax INFO    :    nf_model_kwargs: {}
15:44 ninjax INFO    :    local sampler arg not shown (pretty print)
15:44 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[ 9.51384391e-23  7.33630020e-23  1.26771819e-22  9.92688269e-23
  2.88341161e-23  1.77608075e-23 -1.12472204e-22 -5.05996089e-23
 -3.01567671e-23  7.95696029e-23]
[ 1.14236630e-23 -4.50573848e-23 -5.15798104e-24 -1.05808028e-22
  1.33632326e-23 -5.40458964e-23  6.50047904e-23 -5.54154521e-24
 -7.43876117e-23  5.06637996e-23]
Checking the noise that was generated in inject_signal ifo:
[-1.54103840e-23 -3.10770607e-24  3.44198413e-23 -1.01222001e-22
 -2.34455246e-23  4.70010096e-23 -5.00407217e-23  3.06701330e-23
  2.21181920e-23  1.09400901e-22]
[-1.70405454e-23  1.34934309e-23 -6.88607958e-23  7.20499442e-23
 -1.25557920e-22 -6.64089166e-23  1.05710338e-23  1.28111395e-23
 -3.46707785e-23 -4.90029066e-23]
Checking the noise that was generated in inject_signal ifo:
[-1.08453479e-23 -9.83028744e-23 -2.53450766e-23 -2.92901272e-23
  2.95220379e-23 -2.20624573e-23 -6.76781717e-23  3.69392443e-23
 -1.54465383e-23  1.00794537e-22]
[-1.16180562e-22 -6.62921452e-23 -1.31642517e-22  1.04725207e-22
  1.16903968e-22 -5.01270987e-23  7.47954007e-24 -7.95237541e-24
  6.62244210e-23 -1.22890588e-23]
Checking the noise that was generated in inject_signal ifo:
[ 4.07402560e-23 -5.54319764e-23  3.89005383e-23 -2.40682167e-23
 -8.99779575e-24  8.20326778e-23 -3.54244365e-23 -2.22112248e-23
 -8.88804182e-23 -4.60773294e-23]
[ 7.04965712e-24 -2.62630696e-24 -7.72141903e-23 -5.38391792e-23
 -1.23946162e-23  7.95405851e-23  4.15311311e-23 -5.05420705e-23
  5.71256190e-23 -5.21566627e-23]
Checking the noise that was generated in inject_signal ifo:
[ 8.76699561e-23 -2.95895047e-23  2.34948585e-23 -4.50397598e-23
  7.97235719e-23  1.68435186e-23  1.81793371e-23 -6.48261520e-23
 -8.20895879e-23  8.63818888e-23]
[ 2.03417324e-23  2.75601570e-23  5.96520505e-24 -2.45613960e-23
  1.00691413e-23  9.28477184e-24  5.54833951e-24  4.87997617e-23
  5.30078448e-23 -3.63975443e-23]
Checking the noise that was generated in inject_signal ifo:
[-2.39965037e-23 -4.40348854e-23 -1.75500258e-23 -5.08361994e-23
  6.97688573e-23  8.70853357e-24 -3.81807968e-23  7.03898203e-23
  3.89387952e-23 -1.35862703e-24]
[-4.00833387e-23 -7.90477696e-23 -1.12458768e-22  3.00657799e-25
  1.00972753e-22  2.27654804e-23  8.34899659e-24  2.53151419e-23
  4.90173569e-24 -9.50617182e-24]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.11109161376953125 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 2.097891271906356, 'mass_2_source': 1.2873609187685549, 's1_z': -0.0071149069930580774, 's2_z': 0.001954328241589344, 'cos_iota': -0.42346404495607537, 'd_L': 282.94845403608315, 't_c': -0.05315013933943709, 'phase_c': 2.6507423240856762, 'psi': 1.5845903425966923, 'ra': 2.792570125843334, 'sin_dec': -0.020646475562172473, 'q': 0.6136452045957218, 'M_c': 1.5131655899903527, 'eta': 0.23566833924616465, 'iota': Array(2.00806206, dtype=float64, weak_type=True), 'dec': Array(-0.02064794, dtype=float64, weak_type=True), 'lambda_1': 32.968412812677926, 'lambda_2': 824.0636371390323, 'H1_SNR': 6.44592593651997, 'L1_SNR': 4.895330116286023, 'V1_SNR': 8.15300142615889, 'network_SNR': 11.488500789113724, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5190513134002686 seconds
Time for h_sky_low and h_sky_center: 5.471249580383301 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.6667537689208984
Going to compute coefficients . . .
Time for computing coefficients: 130.2112512588501 seconds
Time for computing coefficients: 7.310925245285034 seconds
Time for computing coefficients: 7.353792190551758 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:26<8:06:00, 146.53s/it]Tuning global sampler:   1%|          | 2/200 [02:31<3:27:57, 63.02s/it] Tuning global sampler:   2%|▏         | 3/200 [02:56<2:30:43, 45.91s/it]Tuning global sampler:   2%|▏         | 4/200 [03:11<1:49:50, 33.62s/it]Tuning global sampler:   2%|▎         | 5/200 [03:17<1:16:32, 23.55s/it]Tuning global sampler:   3%|▎         | 6/200 [03:21<55:24, 17.14s/it]  Tuning global sampler:   4%|▎         | 7/200 [03:27<42:50, 13.32s/it]Tuning global sampler:   4%|▍         | 8/200 [03:31<33:45, 10.55s/it]Tuning global sampler:   4%|▍         | 9/200 [03:36<27:37,  8.68s/it]Tuning global sampler:   5%|▌         | 10/200 [03:40<23:20,  7.37s/it]Tuning global sampler:   6%|▌         | 11/200 [03:45<20:32,  6.52s/it]Tuning global sampler:   6%|▌         | 12/200 [03:50<18:35,  5.94s/it]Tuning global sampler:   6%|▋         | 13/200 [03:54<17:12,  5.52s/it]Tuning global sampler:   7%|▋         | 14/200 [03:59<16:18,  5.26s/it]Tuning global sampler:   8%|▊         | 15/200 [04:03<15:40,  5.08s/it]Tuning global sampler:   8%|▊         | 16/200 [04:08<15:12,  4.96s/it]Tuning global sampler:   8%|▊         | 17/200 [04:13<14:50,  4.87s/it]Tuning global sampler:   9%|▉         | 18/200 [04:17<14:34,  4.81s/it]Tuning global sampler:  10%|▉         | 19/200 [04:22<14:23,  4.77s/it]Tuning global sampler:  10%|█         | 20/200 [04:27<14:12,  4.74s/it]Tuning global sampler:  10%|█         | 21/200 [04:31<14:04,  4.72s/it]Tuning global sampler:  11%|█         | 22/200 [04:36<13:53,  4.68s/it]Tuning global sampler:  12%|█▏        | 23/200 [04:42<14:36,  4.95s/it]Tuning global sampler:  12%|█▏        | 24/200 [04:46<14:03,  4.80s/it]Tuning global sampler:  12%|█▎        | 25/200 [04:51<13:39,  4.68s/it]Tuning global sampler:  13%|█▎        | 26/200 [04:55<13:20,  4.60s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:59<13:05,  4.54s/it]Tuning global sampler:  14%|█▍        | 28/200 [05:19<25:55,  9.04s/it]Tuning global sampler:  14%|█▍        | 29/200 [05:33<30:05, 10.56s/it]Tuning global sampler:  15%|█▌        | 30/200 [05:43<29:24, 10.38s/it]Tuning global sampler:  16%|█▌        | 31/200 [06:01<35:50, 12.73s/it]Tuning global sampler:  16%|█▌        | 32/200 [06:18<39:31, 14.12s/it]Tuning global sampler:  16%|█▋        | 33/200 [06:41<46:07, 16.57s/it]Tuning global sampler:  17%|█▋        | 34/200 [06:45<35:44, 12.92s/it]Tuning global sampler:  18%|█▊        | 35/200 [06:50<28:30, 10.37s/it]Tuning global sampler:  18%|█▊        | 36/200 [06:54<23:26,  8.58s/it]Tuning global sampler:  18%|█▊        | 37/200 [06:58<19:54,  7.33s/it]Tuning global sampler:  19%|█▉        | 38/200 [07:03<17:25,  6.45s/it]Tuning global sampler:  20%|█▉        | 39/200 [07:07<15:40,  5.84s/it]Tuning global sampler:  20%|██        | 40/200 [07:12<14:25,  5.41s/it]Tuning global sampler:  20%|██        | 41/200 [07:16<13:43,  5.18s/it]Tuning global sampler:  21%|██        | 42/200 [07:21<13:00,  4.94s/it]Tuning global sampler:  22%|██▏       | 43/200 [07:25<12:31,  4.79s/it]Tuning global sampler:  22%|██▏       | 44/200 [07:30<12:54,  4.96s/it]Tuning global sampler:  22%|██▎       | 45/200 [07:35<12:21,  4.79s/it]Tuning global sampler:  23%|██▎       | 46/200 [07:39<11:59,  4.67s/it]Tuning global sampler:  24%|██▎       | 47/200 [07:44<11:41,  4.59s/it]Tuning global sampler:  24%|██▍       | 48/200 [07:48<11:27,  4.52s/it]Tuning global sampler:  24%|██▍       | 49/200 [07:52<11:17,  4.48s/it]Tuning global sampler:  25%|██▌       | 50/200 [07:57<11:07,  4.45s/it]Tuning global sampler:  26%|██▌       | 51/200 [08:01<11:00,  4.43s/it]Tuning global sampler:  26%|██▌       | 52/200 [08:06<10:53,  4.42s/it]Tuning global sampler:  26%|██▋       | 53/200 [08:10<10:54,  4.45s/it]Tuning global sampler:  27%|██▋       | 54/200 [08:14<10:47,  4.43s/it]Tuning global sampler:  28%|██▊       | 55/200 [08:19<10:39,  4.41s/it]Tuning global sampler:  28%|██▊       | 56/200 [08:23<10:32,  4.39s/it]Tuning global sampler:  28%|██▊       | 57/200 [08:28<10:28,  4.39s/it]Tuning global sampler:  29%|██▉       | 58/200 [08:32<10:24,  4.39s/it]Tuning global sampler:  30%|██▉       | 59/200 [08:36<10:18,  4.39s/it]Tuning global sampler:  30%|███       | 60/200 [08:41<10:14,  4.39s/it]Tuning global sampler:  30%|███       | 61/200 [08:45<10:10,  4.39s/it]Tuning global sampler:  31%|███       | 62/200 [08:50<10:14,  4.45s/it]Tuning global sampler:  32%|███▏      | 63/200 [08:54<10:08,  4.44s/it]Tuning global sampler:  32%|███▏      | 64/200 [08:59<10:41,  4.71s/it]Tuning global sampler:  32%|███▎      | 65/200 [09:04<10:23,  4.62s/it]Tuning global sampler:  33%|███▎      | 66/200 [09:08<10:07,  4.53s/it]Tuning global sampler:  34%|███▎      | 67/200 [09:13<09:56,  4.48s/it]Tuning global sampler:  34%|███▍      | 68/200 [09:17<09:47,  4.45s/it]Tuning global sampler:  34%|███▍      | 69/200 [09:21<09:40,  4.43s/it]Tuning global sampler:  35%|███▌      | 70/200 [09:26<09:35,  4.42s/it]Tuning global sampler:  36%|███▌      | 71/200 [09:30<09:29,  4.42s/it]Tuning global sampler:  36%|███▌      | 72/200 [09:35<09:25,  4.42s/it]Tuning global sampler:  36%|███▋      | 73/200 [09:39<09:20,  4.41s/it]Tuning global sampler:  37%|███▋      | 74/200 [09:43<09:15,  4.40s/it]Tuning global sampler:  38%|███▊      | 75/200 [09:48<09:12,  4.42s/it]Tuning global sampler:  38%|███▊      | 76/200 [09:52<09:07,  4.42s/it]Tuning global sampler:  38%|███▊      | 77/200 [09:57<09:01,  4.40s/it]Tuning global sampler:  39%|███▉      | 78/200 [10:01<08:58,  4.41s/it]Tuning global sampler:  40%|███▉      | 79/200 [10:05<08:53,  4.41s/it]Tuning global sampler:  40%|████      | 80/200 [10:10<08:48,  4.40s/it]Tuning global sampler:  40%|████      | 81/200 [10:14<08:44,  4.40s/it]Tuning global sampler:  41%|████      | 82/200 [10:19<08:39,  4.40s/it]Tuning global sampler:  42%|████▏     | 83/200 [10:23<08:34,  4.40s/it]Tuning global sampler:  42%|████▏     | 84/200 [10:28<09:05,  4.70s/it]Tuning global sampler:  42%|████▎     | 85/200 [10:33<08:50,  4.61s/it]Tuning global sampler:  43%|████▎     | 86/200 [10:37<08:39,  4.56s/it]Tuning global sampler:  44%|████▎     | 87/200 [10:42<08:29,  4.51s/it]Tuning global sampler:  44%|████▍     | 88/200 [10:46<08:20,  4.47s/it]Tuning global sampler:  44%|████▍     | 89/200 [10:50<08:12,  4.44s/it]Tuning global sampler:  45%|████▌     | 90/200 [10:55<08:07,  4.43s/it]Tuning global sampler:  46%|████▌     | 91/200 [10:59<08:01,  4.42s/it]Tuning global sampler:  46%|████▌     | 92/200 [11:04<07:57,  4.42s/it]Tuning global sampler:  46%|████▋     | 93/200 [11:08<07:58,  4.47s/it]Tuning global sampler:  47%|████▋     | 94/200 [11:13<07:52,  4.46s/it]Tuning global sampler:  48%|████▊     | 95/200 [11:17<07:46,  4.44s/it]Tuning global sampler:  48%|████▊     | 96/200 [11:21<07:42,  4.45s/it]Tuning global sampler:  48%|████▊     | 97/200 [11:26<07:37,  4.44s/it]Tuning global sampler:  49%|████▉     | 98/200 [11:30<07:32,  4.43s/it]Tuning global sampler:  50%|████▉     | 99/200 [11:35<07:26,  4.42s/it]Tuning global sampler:  50%|█████     | 100/200 [11:39<07:20,  4.41s/it]Tuning global sampler:  50%|█████     | 101/200 [11:44<07:16,  4.41s/it]Tuning global sampler:  51%|█████     | 102/200 [11:48<07:12,  4.41s/it]Tuning global sampler:  52%|█████▏    | 103/200 [11:52<07:07,  4.40s/it]Tuning global sampler:  52%|█████▏    | 104/200 [11:57<07:02,  4.40s/it]Tuning global sampler:  52%|█████▎    | 105/200 [12:02<07:28,  4.73s/it]Tuning global sampler:  53%|█████▎    | 106/200 [12:07<07:17,  4.66s/it]Tuning global sampler:  54%|█████▎    | 107/200 [12:11<07:06,  4.59s/it]Tuning global sampler:  54%|█████▍    | 108/200 [12:16<06:56,  4.53s/it]Tuning global sampler:  55%|█████▍    | 109/200 [12:20<06:48,  4.49s/it]Tuning global sampler:  55%|█████▌    | 110/200 [12:24<06:40,  4.45s/it]Tuning global sampler:  56%|█████▌    | 111/200 [12:29<06:33,  4.42s/it]Tuning global sampler:  56%|█████▌    | 112/200 [12:33<06:28,  4.42s/it]Tuning global sampler:  56%|█████▋    | 113/200 [12:37<06:23,  4.41s/it]Tuning global sampler:  57%|█████▋    | 114/200 [12:42<06:19,  4.41s/it]Tuning global sampler:  57%|█████▊    | 115/200 [12:46<06:14,  4.41s/it]Tuning global sampler:  58%|█████▊    | 116/200 [12:51<06:10,  4.41s/it]Tuning global sampler:  58%|█████▊    | 117/200 [12:55<06:05,  4.41s/it]Tuning global sampler:  59%|█████▉    | 118/200 [12:59<06:00,  4.40s/it]Tuning global sampler:  60%|█████▉    | 119/200 [13:04<05:56,  4.40s/it]Tuning global sampler:  60%|██████    | 120/200 [13:08<05:51,  4.39s/it]Tuning global sampler:  60%|██████    | 121/200 [13:13<05:45,  4.38s/it]Tuning global sampler:  61%|██████    | 122/200 [13:17<05:41,  4.37s/it]Tuning global sampler:  62%|██████▏   | 123/200 [13:21<05:37,  4.39s/it]Tuning global sampler:  62%|██████▏   | 124/200 [13:26<05:34,  4.40s/it]Tuning global sampler:  62%|██████▎   | 125/200 [13:49<12:33, 10.04s/it]Tuning global sampler:  63%|██████▎   | 126/200 [14:01<12:57, 10.51s/it]Tuning global sampler:  64%|██████▎   | 127/200 [14:10<12:28, 10.25s/it]Tuning global sampler:  64%|██████▍   | 128/200 [14:18<11:35,  9.66s/it]Tuning global sampler:  64%|██████▍   | 129/200 [14:33<13:17, 11.23s/it]Tuning global sampler:  65%|██████▌   | 130/200 [14:45<13:19, 11.42s/it]Tuning global sampler:  66%|██████▌   | 131/200 [15:03<15:15, 13.28s/it]Tuning global sampler:  66%|██████▌   | 132/200 [15:19<15:58, 14.10s/it]Tuning global sampler:  66%|██████▋   | 133/200 [15:29<14:28, 12.97s/it]Tuning global sampler:  67%|██████▋   | 134/200 [15:45<15:13, 13.85s/it]Tuning global sampler:  68%|██████▊   | 135/200 [16:03<16:17, 15.04s/it]Tuning global sampler:  68%|██████▊   | 136/200 [16:07<12:38, 11.85s/it]Tuning global sampler:  68%|██████▊   | 137/200 [16:12<10:06,  9.62s/it]Tuning global sampler:  69%|██████▉   | 138/200 [16:16<08:19,  8.06s/it]Tuning global sampler:  70%|██████▉   | 139/200 [16:21<07:04,  6.96s/it]Tuning global sampler:  70%|███████   | 140/200 [16:25<06:12,  6.21s/it]Tuning global sampler:  70%|███████   | 141/200 [16:29<05:34,  5.67s/it]Tuning global sampler:  71%|███████   | 142/200 [16:34<05:07,  5.30s/it]Tuning global sampler:  72%|███████▏  | 143/200 [16:38<04:46,  5.03s/it]Tuning global sampler:  72%|███████▏  | 144/200 [16:43<04:30,  4.83s/it]Tuning global sampler:  72%|███████▎  | 145/200 [16:47<04:19,  4.71s/it]Tuning global sampler:  73%|███████▎  | 146/200 [16:52<04:10,  4.65s/it]Tuning global sampler:  74%|███████▎  | 147/200 [16:57<04:20,  4.91s/it]Tuning global sampler:  74%|███████▍  | 148/200 [17:02<04:07,  4.77s/it]Tuning global sampler:  74%|███████▍  | 149/200 [17:06<03:58,  4.67s/it]Tuning global sampler:  75%|███████▌  | 150/200 [17:10<03:49,  4.60s/it]Tuning global sampler:  76%|███████▌  | 151/200 [17:15<03:45,  4.61s/it]Tuning global sampler:  76%|███████▌  | 152/200 [17:19<03:38,  4.56s/it]Tuning global sampler:  76%|███████▋  | 153/200 [17:24<03:32,  4.52s/it]Tuning global sampler:  77%|███████▋  | 154/200 [17:28<03:26,  4.49s/it]Tuning global sampler:  78%|███████▊  | 155/200 [17:33<03:20,  4.45s/it]Tuning global sampler:  78%|███████▊  | 156/200 [17:37<03:15,  4.44s/it]Tuning global sampler:  78%|███████▊  | 157/200 [17:42<03:11,  4.44s/it]Tuning global sampler:  79%|███████▉  | 158/200 [17:46<03:06,  4.44s/it]Tuning global sampler:  80%|███████▉  | 159/200 [17:50<03:01,  4.43s/it]Tuning global sampler:  80%|████████  | 160/200 [17:55<02:57,  4.43s/it]Tuning global sampler:  80%|████████  | 161/200 [18:00<02:56,  4.52s/it]Tuning global sampler:  81%|████████  | 162/200 [18:04<02:50,  4.49s/it]Tuning global sampler:  82%|████████▏ | 163/200 [18:08<02:45,  4.48s/it]Tuning global sampler:  82%|████████▏ | 164/200 [18:13<02:40,  4.46s/it]Tuning global sampler:  82%|████████▎ | 165/200 [18:17<02:35,  4.44s/it]Tuning global sampler:  83%|████████▎ | 166/200 [18:22<02:30,  4.43s/it]Tuning global sampler:  84%|████████▎ | 167/200 [18:26<02:26,  4.43s/it]Tuning global sampler:  84%|████████▍ | 168/200 [18:32<02:32,  4.77s/it]Tuning global sampler:  84%|████████▍ | 169/200 [18:36<02:24,  4.66s/it]Tuning global sampler:  85%|████████▌ | 170/200 [18:40<02:17,  4.59s/it]Tuning global sampler:  86%|████████▌ | 171/200 [18:45<02:11,  4.54s/it]Tuning global sampler:  86%|████████▌ | 172/200 [18:49<02:06,  4.51s/it]Tuning global sampler:  86%|████████▋ | 173/200 [18:54<02:01,  4.49s/it]Tuning global sampler:  87%|████████▋ | 174/200 [18:58<01:56,  4.47s/it]Tuning global sampler:  88%|████████▊ | 175/200 [19:03<01:51,  4.46s/it]Tuning global sampler:  88%|████████▊ | 176/200 [19:07<01:46,  4.43s/it]Tuning global sampler:  88%|████████▊ | 177/200 [19:11<01:41,  4.42s/it]Tuning global sampler:  89%|████████▉ | 178/200 [19:16<01:37,  4.42s/it]Tuning global sampler:  90%|████████▉ | 179/200 [19:20<01:32,  4.41s/it]Tuning global sampler:  90%|█████████ | 180/200 [19:25<01:28,  4.42s/it]Tuning global sampler:  90%|█████████ | 181/200 [19:29<01:24,  4.42s/it]Tuning global sampler:  91%|█████████ | 182/200 [19:34<01:19,  4.43s/it]Tuning global sampler:  92%|█████████▏| 183/200 [19:38<01:15,  4.42s/it]Tuning global sampler:  92%|█████████▏| 184/200 [19:42<01:10,  4.43s/it]Tuning global sampler:  92%|█████████▎| 185/200 [19:47<01:06,  4.43s/it]Tuning global sampler:  93%|█████████▎| 186/200 [19:51<01:01,  4.43s/it]Tuning global sampler:  94%|█████████▎| 187/200 [19:56<00:57,  4.41s/it]Tuning global sampler:  94%|█████████▍| 188/200 [20:00<00:52,  4.40s/it]Tuning global sampler:  94%|█████████▍| 189/200 [20:04<00:48,  4.41s/it]Tuning global sampler:  95%|█████████▌| 190/200 [20:10<00:47,  4.79s/it]Tuning global sampler:  96%|█████████▌| 191/200 [20:14<00:42,  4.67s/it]Tuning global sampler:  96%|█████████▌| 192/200 [20:19<00:36,  4.60s/it]Tuning global sampler:  96%|█████████▋| 193/200 [20:23<00:31,  4.54s/it]Tuning global sampler:  97%|█████████▋| 194/200 [20:28<00:27,  4.50s/it]Tuning global sampler:  98%|█████████▊| 195/200 [20:32<00:22,  4.47s/it]Tuning global sampler:  98%|█████████▊| 196/200 [20:37<00:17,  4.45s/it]Tuning global sampler:  98%|█████████▊| 197/200 [20:41<00:13,  4.44s/it]Tuning global sampler:  99%|█████████▉| 198/200 [20:46<00:08,  4.49s/it]Tuning global sampler: 100%|█████████▉| 199/200 [20:50<00:04,  4.46s/it]Tuning global sampler: 100%|██████████| 200/200 [20:54<00:00,  4.44s/it]Tuning global sampler: 100%|██████████| 200/200 [20:54<00:00,  6.27s/it]
Compiling MALA body
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.21s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.21s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.21s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.21s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.21s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.21s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.21s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.21s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.21s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.21s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.21s/it]
16:06 ninjax INFO    : Saving samples to ./Aplus/injection_28/results_training.npz
16:06 ninjax INFO    : Saving the NF
16:06 ninjax INFO    : Time taken: 1297.6911475658417 seconds (21.62818579276403 minutes)
16:06 ninjax INFO    : Creating the final corner plot
16:06 ninjax INFO    : Dumping the final production chains
16:06 ninjax INFO    : Chains shape is: (13, 220000)
16:06 ninjax INFO    : Key: M_c: ESS = 5920, Rhat = 1.2189152496070847
16:06 ninjax INFO    : Key: q: ESS = 5013, Rhat = 1.129437551524671
16:06 ninjax INFO    : Key: s1_z: ESS = 4881, Rhat = 1.1373266724153395
16:06 ninjax INFO    : Key: s2_z: ESS = 5000, Rhat = 1.1288577755305682
16:06 ninjax INFO    : Key: lambda_1: ESS = 5319, Rhat = 1.1280498810031705
16:06 ninjax INFO    : Key: lambda_2: ESS = 5111, Rhat = 1.1270358228191546
16:06 ninjax INFO    : Key: cos_iota: ESS = 3433, Rhat = 1.2055908066454089
16:06 ninjax INFO    : Key: d_L: ESS = 5381, Rhat = 1.134266110001484
16:06 ninjax INFO    : Key: t_c: ESS = 4650, Rhat = 1.1419267590026136
16:06 ninjax INFO    : Key: phase_c: ESS = 5007, Rhat = 1.128463594818287
16:06 ninjax INFO    : Key: psi: ESS = 4898, Rhat = 1.138189756538428
16:06 ninjax INFO    : Key: ra: ESS = 5020, Rhat = 1.1868395881091818
16:06 ninjax INFO    : Key: sin_dec: ESS = 4595, Rhat = 1.1421489835453065
16:06 ninjax INFO    : Key: eta: ESS = 5013, Rhat = 1.129437551524671
16:06 ninjax INFO    : Key: iota: ESS = 3433, Rhat = 1.2055908066454089
16:06 ninjax INFO    : Key: dec: ESS = 4595, Rhat = 1.1421489835453065
16:06 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.646 +/- 0.478
q: 0.544 +/- 0.255
s1_z: -0.000 +/- 0.029
s2_z: 0.000 +/- 0.029
lambda_1: 2517.613 +/- 1439.226
lambda_2: 2504.659 +/- 1435.500
cos_iota: 0.006 +/- 0.312
d_L: 845.081 +/- 126.743
t_c: 0.001 +/- 0.059
phase_c: 3.146 +/- 1.809
psi: 1.577 +/- 0.901
ra: 3.194 +/- 1.767
sin_dec: -0.007 +/- 0.555
Log probability: -20.405 +/- 4.111
Local acceptance: 0.997 +/- 0.057
Global acceptance: 0.055 +/- 0.228
Max loss: 22.748, Min loss: 15.770
Production summary
==========
M_c: 1.658 +/- 0.478
q: 0.549 +/- 0.256
s1_z: 0.000 +/- 0.029
s2_z: 0.000 +/- 0.029
lambda_1: 2539.947 +/- 1435.865
lambda_2: 2492.941 +/- 1449.731
cos_iota: -0.008 +/- 0.316
d_L: 849.618 +/- 123.500
t_c: 0.001 +/- 0.059
phase_c: 3.154 +/- 1.805
psi: 1.563 +/- 0.905
ra: 3.153 +/- 1.777
sin_dec: -0.024 +/- 0.554
Log probability: -19.950 +/- 3.826
Local acceptance: 0.997 +/- 0.056
Global acceptance: 0.054 +/- 0.226
DONE

JOB STATISTICS
==============
Job ID: 10906044
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:17:33
CPU Efficiency: 4.32% of 06:46:08 core-walltime
Job Wall-clock time: 00:25:23
Memory Utilized: 5.14 GB
Memory Efficiency: 51.37% of 10.00 GB (10.00 GB/node)
