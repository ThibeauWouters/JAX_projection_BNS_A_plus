Tue Apr  1 15:41:22 CEST 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
15:41 ninjax INFO    : Checking and setting outdir
15:41 ninjax INFO    : Found generation prior file ./Aplus/injection_10/generation_prior.prior
15:41 ninjax INFO    : The outdir is set to ./Aplus/injection_10
15:41 ninjax INFO    : Loading the given config
15:41 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
15:41 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
15:41 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/MPA1/Aplus/injection_10/complete_config.json
15:41 ninjax INFO    : No seed specified. Generating a random seed: 698529
15:41 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 507088
15:41 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 894128
15:41 ninjax INFO    : Loading the priors
15:41 ninjax INFO    : Setting up the prior
15:41 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
15:41 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
15:41 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
15:41 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
15:41 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
15:41 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
15:41 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
15:41 ninjax INFO    :    dL_prior = PowerLaw(10.0, 1000.0, 2.0, naming=["d_L"])
15:41 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
15:41 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
15:41 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
15:41 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
15:41 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
15:41 ninjax INFO    : Setting up the generation prior
15:41 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 2.468645554845655, naming=["mass_1_source"])
15:41 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 2.468645554845655, naming=["mass_2_source"])
15:41 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
15:41 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
15:41 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
15:41 ninjax INFO    :    dL_prior = PowerLaw(10.0, 460.0, 2.0, naming=["d_L"])
15:41 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
15:41 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
15:41 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
15:41 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
15:41 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
15:41 ninjax INFO    : Finished prior setup
15:41 ninjax INFO    : Setting the transforms
15:41 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
15:41 ninjax INFO    : transforms_str_list has 3 elements
15:41 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
15:41 ninjax INFO    : Setting the likelihood
15:41 ninjax INFO    : GW likelihood provided, setting up the GW pipe
15:41 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz
15:41 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz for BNS injections
15:41 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
15:41 ninjax INFO    : self.is_BNS_run is True
15:41 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
15:41 ninjax INFO    : GW run is an injection
15:41 ninjax INFO    : Setting up GW injection . . . 
15:41 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
15:41 ninjax INFO    : Generating new injection
15:41 ninjax INFO    : Sanity check: generated parameters:
15:41 ninjax INFO    : {'mass_1_source': 1.2359191632057456, 'mass_2_source': 1.4747568460552316, 's1_z': 0.011371150685221876, 's2_z': 0.01063569164755216, 'cos_iota': -0.5982276020822699, 'd_L': 443.17802885813165, 't_c': -0.0070438330312332376, 'phase_c': 5.941727323940106, 'psi': 0.2211127960644301, 'ra': 5.661154333972316, 'sin_dec': 0.30705075280975036}
15:41 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz . . . 
15:41 ninjax INFO    : Injected lambda_1: 377.9882707204836
15:41 ninjax INFO    : Injected lambda_2: 1031.5612440090983
15:41 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.2919874094592678 is 256.0
15:41 ninjax INFO    : After transforms, the injection parameters are:
15:41 ninjax INFO    : {'mass_1_source': 1.4747568460552316, 'mass_2_source': 1.2359191632057456, 's1_z': 0.011371150685221876, 's2_z': 0.01063569164755216, 'cos_iota': -0.5982276020822699, 'd_L': 443.17802885813165, 't_c': -0.0070438330312332376, 'phase_c': 5.941727323940106, 'psi': 0.2211127960644301, 'ra': 5.661154333972316, 'sin_dec': 0.30705075280975036, 'q': 0.8380494496510774, 'M_c': 1.2919874094592678, 'eta': 0.24805915665525827, 'iota': Array(2.21208377, dtype=float64, weak_type=True), 'dec': Array(0.31209253, dtype=float64, weak_type=True), 'lambda_1': 377.9882707204836, 'lambda_2': 1031.5612440090983}
15:41 ninjax INFO    : The trial injection parameters are {'M_c': 1.2919874094592678, 'eta': 0.24805915665525827, 's1_z': 0.011371150685221876, 's2_z': 0.01063569164755216, 'lambda_1': 377.9882707204836, 'lambda_2': 1031.5612440090983, 'd_L': 443.17802885813165, 'phase_c': 5.941727323940106, 'iota': 2.212083773993955, 't_c': -0.0070438330312332376, 'psi': 0.2211127960644301, 'ra': 5.661154333972316, 'dec': 0.31209252908869367}
15:41 ninjax INFO    : Injecting signals . . .
15:42 ninjax INFO    : self.ifos
15:42 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
15:42 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:42 ninjax INFO    : [-1.22914298e-23+5.48006609e-23j  2.97498697e-23-1.17203613e-22j
  7.54104402e-23-1.18687249e-22j ...
 -3.71033490e-23+5.92180705e-24j -2.35168349e-23-1.86339796e-23j
  2.19848278e-23-5.73971614e-23j]
15:42 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:42 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:42 ninjax INFO    : [-3.67854959e-23+3.24086712e-23j  4.25425319e-23+9.33208835e-23j
 -1.10833825e-22-5.59894680e-23j ...
  4.88275310e-24-9.26873463e-24j -1.94319586e-23+6.03376584e-24j
  3.14623941e-23+3.71033860e-23j]
15:42 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
15:42 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
15:42 ninjax INFO    : [ 5.54921912e-23-1.68800392e-23j  1.07569243e-23+8.73470117e-23j
  5.61691822e-23+3.33086154e-23j ...
 -5.02872937e-23-3.70582808e-23j -2.70192994e-23-8.48321175e-23j
  1.43169579e-23+6.58688481e-24j]
15:42 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
15:42 ninjax INFO    : SNR for ifo H1 is 4.217019684774389
15:42 ninjax INFO    : SNR for ifo L1 is 0.9243430730842996
15:42 ninjax INFO    : SNR for ifo V1 is 4.1177533428945665
15:42 ninjax INFO    : The network SNR is 5.966033668313731
15:42 ninjax INFO    : The network SNR does not pass the threshold, trying again
15:42 ninjax INFO    : Generating new injection
15:42 ninjax INFO    : Sanity check: generated parameters:
15:42 ninjax INFO    : {'mass_1_source': 1.9514297537478906, 'mass_2_source': 2.4621235294211727, 's1_z': 0.017877997919690025, 's2_z': -0.002363910334174893, 'cos_iota': -0.7349737730818706, 'd_L': 448.8555032405264, 't_c': 0.04399980602526671, 'phase_c': 5.4135201654031135, 'psi': 0.4602253650334375, 'ra': 5.772831434409297, 'sin_dec': -0.7146252129075221}
15:42 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/MPA1.npz . . . 
15:42 ninjax INFO    : Injected lambda_1: 3.983762221715675
15:42 ninjax INFO    : Injected lambda_2: 59.24037967317924
15:42 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 2.0989090732413964 is 128.0
15:42 ninjax INFO    : After transforms, the injection parameters are:
15:42 ninjax INFO    : {'mass_1_source': 2.4621235294211727, 'mass_2_source': 1.9514297537478906, 's1_z': 0.017877997919690025, 's2_z': -0.002363910334174893, 'cos_iota': -0.7349737730818706, 'd_L': 448.8555032405264, 't_c': 0.04399980602526671, 'phase_c': 5.4135201654031135, 'psi': 0.4602253650334375, 'ra': 5.772831434409297, 'sin_dec': -0.7146252129075221, 'q': 0.7925799540231263, 'M_c': 2.0989090732413964, 'eta': 0.2466527789808881, 'iota': Array(2.39642433, dtype=float64, weak_type=True), 'dec': Array(-0.79608817, dtype=float64, weak_type=True), 'lambda_1': 3.983762221715675, 'lambda_2': 59.24037967317924}
15:42 ninjax INFO    : The trial injection parameters are {'M_c': 2.0989090732413964, 'eta': 0.2466527789808881, 's1_z': 0.017877997919690025, 's2_z': -0.002363910334174893, 'lambda_1': 3.983762221715675, 'lambda_2': 59.24037967317924, 'd_L': 448.8555032405264, 'phase_c': 5.4135201654031135, 'iota': 2.3964243296497036, 't_c': 0.04399980602526671, 'psi': 0.4602253650334375, 'ra': 5.772831434409297, 'dec': -0.7960881727117578}
15:42 ninjax INFO    : Injecting signals . . .
15:42 ninjax INFO    : self.ifos
15:42 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
15:42 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
15:42 ninjax INFO    : [-3.11773779e-23+4.94941562e-23j -1.64141610e-23+6.48549723e-23j
 -4.25058354e-23+7.74590541e-23j ...
 -3.16526881e-23-9.12479887e-24j  1.65252649e-23-6.74563917e-24j
 -1.53583216e-23+8.21950078e-24j]
15:42 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
15:42 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
15:42 ninjax INFO    : [ 2.17661593e-24-4.07783119e-24j -2.98379016e-23+4.72778714e-23j
 -7.06301623e-23-4.98656991e-23j ...
 -2.23661913e-23+1.41993383e-23j  8.03072490e-25+7.94270985e-24j
  3.53399113e-24-1.01033460e-23j]
15:42 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
15:42 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
15:42 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
15:42 ninjax INFO    : [ 2.23115901e-23+2.25866732e-23j  7.04244253e-23+7.52795288e-23j
  1.20828755e-23-2.75597817e-23j ...
  3.46421709e-23+4.01127214e-23j -1.22026039e-23+1.90551399e-23j
 -1.66860514e-23+2.20933930e-23j]
15:42 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
15:42 ninjax INFO    : SNR for ifo H1 is 8.34994693049869
15:42 ninjax INFO    : SNR for ifo L1 is 7.8897449947718785
15:42 ninjax INFO    : SNR for ifo V1 is 11.872315060730186
15:42 ninjax INFO    : The network SNR is 16.52033760932001
15:42 ninjax INFO    : Network SNR passes threshold
15:42 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
15:42 ninjax INFO    :    mass_1_source: 2.4621235294211727
15:42 ninjax INFO    :    mass_2_source: 1.9514297537478906
15:42 ninjax INFO    :    s1_z: 0.017877997919690025
15:42 ninjax INFO    :    s2_z: -0.002363910334174893
15:42 ninjax INFO    :    cos_iota: -0.7349737730818706
15:42 ninjax INFO    :    d_L: 448.8555032405264
15:42 ninjax INFO    :    t_c: 0.04399980602526671
15:42 ninjax INFO    :    phase_c: 5.4135201654031135
15:42 ninjax INFO    :    psi: 0.4602253650334375
15:42 ninjax INFO    :    ra: 5.772831434409297
15:42 ninjax INFO    :    sin_dec: -0.7146252129075221
15:42 ninjax INFO    :    q: 0.7925799540231263
15:42 ninjax INFO    :    M_c: 2.0989090732413964
15:42 ninjax INFO    :    eta: 0.2466527789808881
15:42 ninjax INFO    :    iota: 2.3964243296497036
15:42 ninjax INFO    :    dec: -0.7960881727117578
15:42 ninjax INFO    :    lambda_1: 3.983762221715675
15:42 ninjax INFO    :    lambda_2: 59.24037967317924
15:42 ninjax INFO    :    H1_SNR: 8.34994693049869
15:42 ninjax INFO    :    L1_SNR: 7.8897449947718785
15:42 ninjax INFO    :    V1_SNR: 11.872315060730186
15:42 ninjax INFO    :    network_SNR: 16.52033760932001
15:42 ninjax INFO    :    epoch: 126.0
15:42 ninjax INFO    :    gmst: 2.7288901910520846
15:42 ninjax INFO    :    duration: 128.0
15:42 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
15:42 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
15:42 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
15:46 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 234.41845273971558 seconds = 3.906974212328593 minutes
15:46 ninjax INFO    : The priors are not modified after their initialization
15:46 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
15:46 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
15:46 ninjax INFO    : sample: {'M_c': Array([2.08252938, 2.17559617, 1.87544205], dtype=float64), 'q': Array([0.29277766, 0.95713043, 0.37555932], dtype=float64), 's1_z': Array([ 0.0496859 , -0.00276564, -0.02625043], dtype=float64), 's2_z': Array([-0.00647836, -0.0029343 , -0.04218088], dtype=float64), 'lambda_1': Array([2942.77293531, 3148.18406125,   43.23403318], dtype=float64), 'lambda_2': Array([4834.10927353, 4277.96289551, 2214.93634451], dtype=float64), 'cos_iota': Array([ 0.05771037, -0.5638251 ,  0.56459386], dtype=float64), 'd_L': Array([808.81154699, 989.52833412, 910.55493567], dtype=float64), 't_c': Array([ 0.02340901,  0.01069899, -0.0789699 ], dtype=float64), 'phase_c': Array([5.60597565, 0.32675738, 2.24166221], dtype=float64), 'psi': Array([0.83581512, 1.41495781, 3.07011564], dtype=float64), 'ra': Array([6.23119753, 5.15528462, 1.09807509], dtype=float64), 'sin_dec': Array([0.97833291, 0.32004776, 0.34041344], dtype=float64)}
15:47 ninjax INFO    : log_prob: [ -8.58856634  -0.26133207 -39.28549441]
15:47 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 2.4621235294211727, 'mass_2_source': 1.9514297537478906, 's1_z': 0.017877997919690025, 's2_z': -0.002363910334174893, 'cos_iota': -0.7349737730818706, 'd_L': 448.8555032405264, 't_c': 0.04399980602526671, 'phase_c': 5.4135201654031135, 'psi': 0.4602253650334375, 'ra': 5.772831434409297, 'sin_dec': -0.7146252129075221, 'q': 0.7925799540231263, 'M_c': 2.0989090732413964, 'eta': 0.2466527789808881, 'iota': Array(2.39642433, dtype=float64, weak_type=True), 'dec': Array(-0.79608817, dtype=float64, weak_type=True), 'lambda_1': 3.983762221715675, 'lambda_2': 59.24037967317924, 'H1_SNR': 8.34994693049869, 'L1_SNR': 7.8897449947718785, 'V1_SNR': 11.872315060730186, 'network_SNR': 16.52033760932001, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
15:47 ninjax INFO    : log_prob at the injection parameters is: 131.79942010105472
15:47 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
15:47 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
15:47 ninjax INFO    : Ninjax setup complete.
15:47 ninjax INFO    : Saving output to ./Aplus/injection_10/
15:47 ninjax INFO    : Using polynomial learning rate scheduler
15:47 ninjax INFO    : The hyperparameters passed to flowMC and jim are
15:47 ninjax INFO    :    n_loop_training: 200
15:47 ninjax INFO    :    n_loop_production: 10
15:47 ninjax INFO    :    n_local_steps: 100
15:47 ninjax INFO    :    n_global_steps: 1000
15:47 ninjax INFO    :    n_epochs: 25
15:47 ninjax INFO    :    n_chains: 1000
15:47 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x151a94dcc280>
15:47 ninjax INFO    :    max_samples: 50000
15:47 ninjax INFO    :    momentum: 0.9
15:47 ninjax INFO    :    batch_size: 30000
15:47 ninjax INFO    :    use_global: True
15:47 ninjax INFO    :    keep_quantile: 0.0
15:47 ninjax INFO    :    train_thinning: 10
15:47 ninjax INFO    :    output_thinning: 50
15:47 ninjax INFO    :    n_sample_max: 10000
15:47 ninjax INFO    :    num_layers: 10
15:47 ninjax INFO    :    hidden_size: [128, 128]
15:47 ninjax INFO    :    num_bins: 8
15:47 ninjax INFO    :    save_training_chains: False
15:47 ninjax INFO    :    eps_mass_matrix: 1e-05
15:47 ninjax INFO    :    use_scheduler: True
15:47 ninjax INFO    :    use_temperature: False
15:47 ninjax INFO    :    which_temperature_schedule: exponential
15:47 ninjax INFO    :    starting_temperature: 2.0
15:47 ninjax INFO    :    stop_tempering_iteration: 75
15:47 ninjax INFO    :    stopping_criterion_global_acc: 0.1
15:47 ninjax INFO    :    stopping_criterion_loss: -inf
15:47 ninjax INFO    :    nf_model_kwargs: {}
15:47 ninjax INFO    :    local sampler arg not shown (pretty print)
15:47 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-1.26986920e-23  2.92189862e-23  7.67530930e-23  9.25008308e-23
 -5.54013327e-23 -9.05376803e-23 -2.11892822e-23 -4.70770457e-23
  1.38700839e-23  4.63426572e-23]
[ 5.28962237e-23 -1.15330335e-22 -1.20096702e-22  3.10635202e-23
 -3.46291826e-23  4.18473239e-23 -4.06861096e-23  1.82747482e-23
 -5.22058175e-23  7.43955923e-23]
Checking the noise that was generated in inject_signal ifo:
[-3.68898002e-23  4.28282356e-23 -1.11234259e-22  8.45951980e-24
 -6.19756352e-23 -9.52379872e-23 -4.01553771e-23 -8.00117393e-23
  1.19097433e-22  6.88340240e-23]
[ 3.28226107e-23  9.30038421e-23 -5.58421217e-23  1.57184898e-23
  1.42042887e-23 -2.43941624e-23 -3.56277659e-24 -3.18304793e-23
  8.24330414e-23  1.95592147e-23]
Checking the noise that was generated in inject_signal ifo:
[ 5.49211032e-23  1.01656710e-23  5.77818017e-23 -5.61893325e-23
  1.11063013e-22  8.51476146e-23  1.52733570e-23  7.56939329e-24
  1.94435125e-23  4.70361747e-23]
[-1.92252529e-23  8.96866530e-23  3.15140974e-23  7.82826168e-23
  2.62126320e-23 -3.01899265e-23  1.11881343e-22 -1.09113527e-23
  1.11353879e-22 -4.33636614e-23]
Checking the noise that was generated in inject_signal ifo:
[-3.12257826e-23 -1.57896930e-23 -4.36797531e-23 -4.19454619e-23
  3.92824071e-23 -1.33350382e-22  7.84925280e-24  4.23966947e-23
 -9.81902397e-23  6.60441454e-23]
[ 5.33884257e-23  6.10126021e-23  8.11687434e-23 -3.70647655e-23
 -2.10419401e-23 -9.41827411e-23 -1.54138335e-23 -7.62197247e-23
 -9.33540850e-23  2.00194895e-24]
Checking the noise that was generated in inject_signal ifo:
[ 3.59409545e-24 -3.17416349e-23 -6.82919647e-23 -8.08479889e-23
 -2.34719422e-23  7.98363079e-24 -4.09885677e-23 -5.03354504e-23
  5.73111533e-24  1.12341000e-23]
[-7.47379782e-24  5.04251272e-23 -5.27029248e-23 -3.74583378e-23
  3.49750505e-23  8.15086507e-24  1.53691255e-23  5.05917888e-23
 -4.66231460e-24  1.45899437e-23]
Checking the noise that was generated in inject_signal ifo:
[ 2.28106803e-23  7.09626182e-23  1.05428140e-23 -7.26927930e-23
 -3.59972029e-23  3.37441923e-23 -1.47161217e-23 -2.49053718e-23
 -6.63994577e-23  2.06228706e-23]
[ 2.95857923e-23  6.82865354e-23 -2.07205766e-23  1.58185516e-23
 -9.02764868e-24  4.61560626e-23  6.44596892e-24 -2.07399044e-23
 -6.35604542e-23 -2.20243587e-23]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.1114354133605957 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 2.4621235294211727, 'mass_2_source': 1.9514297537478906, 's1_z': 0.017877997919690025, 's2_z': -0.002363910334174893, 'cos_iota': -0.7349737730818706, 'd_L': 448.8555032405264, 't_c': 0.04399980602526671, 'phase_c': 5.4135201654031135, 'psi': 0.4602253650334375, 'ra': 5.772831434409297, 'sin_dec': -0.7146252129075221, 'q': 0.7925799540231263, 'M_c': 2.0989090732413964, 'eta': 0.2466527789808881, 'iota': Array(2.39642433, dtype=float64, weak_type=True), 'dec': Array(-0.79608817, dtype=float64, weak_type=True), 'lambda_1': 3.983762221715675, 'lambda_2': 59.24037967317924, 'H1_SNR': 8.34994693049869, 'L1_SNR': 7.8897449947718785, 'V1_SNR': 11.872315060730186, 'network_SNR': 16.52033760932001, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.513695478439331 seconds
Time for h_sky_low and h_sky_center: 28.592045545578003 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.6501061916351318
Going to compute coefficients . . .
Time for computing coefficients: 189.87747144699097 seconds
Time for computing coefficients: 6.731796026229858 seconds
Time for computing coefficients: 6.706169605255127 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:24<7:58:59, 144.42s/it]Tuning global sampler:   1%|          | 2/200 [02:42<3:51:38, 70.20s/it] Tuning global sampler:   2%|▏         | 3/200 [02:47<2:12:34, 40.38s/it]Tuning global sampler:   2%|▏         | 4/200 [02:52<1:25:48, 26.27s/it]Tuning global sampler:   2%|▎         | 5/200 [02:56<1:00:00, 18.46s/it]Tuning global sampler:   3%|▎         | 6/200 [03:02<45:27, 14.06s/it]  Tuning global sampler:   4%|▎         | 7/200 [03:06<35:14, 10.95s/it]Tuning global sampler:   4%|▍         | 8/200 [03:11<28:36,  8.94s/it]Tuning global sampler:   4%|▍         | 9/200 [03:16<24:06,  7.57s/it]Tuning global sampler:   5%|▌         | 10/200 [03:20<20:54,  6.61s/it]Tuning global sampler:   6%|▌         | 11/200 [03:25<18:53,  6.00s/it]Tuning global sampler:   6%|▌         | 12/200 [03:29<17:27,  5.57s/it]Tuning global sampler:   6%|▋         | 13/200 [03:34<16:26,  5.27s/it]Tuning global sampler:   7%|▋         | 14/200 [03:38<15:47,  5.09s/it]Tuning global sampler:   8%|▊         | 15/200 [03:43<15:18,  4.97s/it]Tuning global sampler:   8%|▊         | 16/200 [03:48<15:11,  4.96s/it]Tuning global sampler:   8%|▊         | 17/200 [03:53<14:51,  4.87s/it]Tuning global sampler:   9%|▉         | 18/200 [03:57<14:34,  4.81s/it]Tuning global sampler:  10%|▉         | 19/200 [04:02<14:21,  4.76s/it]Tuning global sampler:  10%|█         | 20/200 [04:07<14:11,  4.73s/it]Tuning global sampler:  10%|█         | 21/200 [04:12<14:53,  4.99s/it]Tuning global sampler:  11%|█         | 22/200 [04:17<14:30,  4.89s/it]Tuning global sampler:  12%|█▏        | 23/200 [04:22<14:11,  4.81s/it]Tuning global sampler:  12%|█▏        | 24/200 [04:26<13:46,  4.70s/it]Tuning global sampler:  12%|█▎        | 25/200 [04:30<13:27,  4.61s/it]Tuning global sampler:  13%|█▎        | 26/200 [04:35<13:12,  4.55s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:39<13:01,  4.52s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:44<12:53,  4.49s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:48<12:46,  4.48s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:53<12:40,  4.47s/it]Tuning global sampler:  16%|█▌        | 31/200 [04:57<12:33,  4.46s/it]Tuning global sampler:  16%|█▌        | 32/200 [05:02<12:28,  4.45s/it]Tuning global sampler:  16%|█▋        | 33/200 [05:06<12:20,  4.44s/it]Tuning global sampler:  17%|█▋        | 34/200 [05:10<12:14,  4.42s/it]Tuning global sampler:  18%|█▊        | 35/200 [05:15<12:10,  4.43s/it]Tuning global sampler:  18%|█▊        | 36/200 [05:19<12:06,  4.43s/it]Tuning global sampler:  18%|█▊        | 37/200 [05:24<12:01,  4.43s/it]Tuning global sampler:  19%|█▉        | 38/200 [05:28<11:57,  4.43s/it]Tuning global sampler:  20%|█▉        | 39/200 [05:32<11:52,  4.43s/it]Tuning global sampler:  20%|██        | 40/200 [05:38<12:32,  4.70s/it]Tuning global sampler:  20%|██        | 41/200 [05:42<12:14,  4.62s/it]Tuning global sampler:  21%|██        | 42/200 [05:47<12:00,  4.56s/it]Tuning global sampler:  22%|██▏       | 43/200 [05:51<11:49,  4.52s/it]Tuning global sampler:  22%|██▏       | 44/200 [05:55<11:38,  4.47s/it]Tuning global sampler:  22%|██▎       | 45/200 [06:00<11:28,  4.44s/it]Tuning global sampler:  23%|██▎       | 46/200 [06:04<11:22,  4.43s/it]Tuning global sampler:  24%|██▎       | 47/200 [06:09<11:16,  4.42s/it]Tuning global sampler:  24%|██▍       | 48/200 [06:13<11:11,  4.42s/it]Tuning global sampler:  24%|██▍       | 49/200 [06:17<11:07,  4.42s/it]Tuning global sampler:  25%|██▌       | 50/200 [06:22<11:02,  4.42s/it]Tuning global sampler:  26%|██▌       | 51/200 [06:26<10:57,  4.41s/it]Tuning global sampler:  26%|██▌       | 52/200 [06:31<10:52,  4.41s/it]Tuning global sampler:  26%|██▋       | 53/200 [06:35<10:47,  4.41s/it]Tuning global sampler:  27%|██▋       | 54/200 [06:39<10:43,  4.41s/it]Tuning global sampler:  28%|██▊       | 55/200 [06:44<10:39,  4.41s/it]Tuning global sampler:  28%|██▊       | 56/200 [06:53<14:04,  5.86s/it]Tuning global sampler:  28%|██▊       | 57/200 [07:08<20:41,  8.69s/it]Tuning global sampler:  29%|██▉       | 58/200 [07:19<22:08,  9.36s/it]Tuning global sampler:  30%|██▉       | 59/200 [07:39<29:13, 12.43s/it]Tuning global sampler:  30%|███       | 60/200 [07:44<24:04, 10.32s/it]Tuning global sampler:  30%|███       | 60/200 [07:55<18:29,  7.93s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.20s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.20s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.20s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.20s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.20s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.20s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.20s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.20s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.20s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.20s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.20s/it]
15:56 ninjax INFO    : Saving samples to ./Aplus/injection_10/results_training.npz
15:56 ninjax INFO    : Saving the NF
15:56 ninjax INFO    : Time taken: 522.9397497177124 seconds (8.715662495295208 minutes)
15:56 ninjax INFO    : Creating the final corner plot
15:56 ninjax INFO    : Dumping the final production chains
15:56 ninjax INFO    : Chains shape is: (13, 220000)
15:56 ninjax INFO    : Key: M_c: ESS = 102668, Rhat = 1.0070640542358078
15:56 ninjax INFO    : Key: q: ESS = 47558, Rhat = 1.0159322026336337
15:56 ninjax INFO    : Key: s1_z: ESS = 64511, Rhat = 1.0117621368289116
15:56 ninjax INFO    : Key: s2_z: ESS = 62630, Rhat = 1.0117134812706738
15:56 ninjax INFO    : Key: lambda_1: ESS = 82599, Rhat = 1.009616186038332
15:56 ninjax INFO    : Key: lambda_2: ESS = 101852, Rhat = 1.0073522459224946
15:56 ninjax INFO    : Key: cos_iota: ESS = 58728, Rhat = 1.0131197593492989
15:56 ninjax INFO    : Key: d_L: ESS = 67202, Rhat = 1.0119630192698739
15:56 ninjax INFO    : Key: t_c: ESS = 97232, Rhat = 1.008035501290088
15:56 ninjax INFO    : Key: phase_c: ESS = 90823, Rhat = 1.0087928009556317
15:56 ninjax INFO    : Key: psi: ESS = 98622, Rhat = 1.008699479888792
15:56 ninjax INFO    : Key: ra: ESS = 110460, Rhat = 1.0065656931951226
15:56 ninjax INFO    : Key: sin_dec: ESS = 108973, Rhat = 1.007100357229798
15:56 ninjax INFO    : Key: eta: ESS = 47558, Rhat = 1.0159322026336337
15:56 ninjax INFO    : Key: iota: ESS = 58728, Rhat = 1.0131197593492989
15:56 ninjax INFO    : Key: dec: ESS = 108973, Rhat = 1.007100357229798
15:56 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 2.043 +/- 0.212
q: 0.761 +/- 0.211
s1_z: 0.010 +/- 0.027
s2_z: 0.005 +/- 0.027
lambda_1: 1668.657 +/- 1495.035
lambda_2: 1876.166 +/- 1595.683
cos_iota: -0.515 +/- 0.456
d_L: 684.363 +/- 182.225
t_c: 0.045 +/- 0.026
phase_c: 3.045 +/- 1.731
psi: 1.701 +/- 0.890
ra: 4.786 +/- 1.803
sin_dec: -0.447 +/- 0.495
Log probability: 59.640 +/- 58.904
Local acceptance: 0.993 +/- 0.086
Global acceptance: 0.013 +/- 0.114
Max loss: 22.799, Min loss: 7.083
Production summary
==========
M_c: 2.099 +/- 0.000
q: 0.860 +/- 0.091
s1_z: 0.020 +/- 0.021
s2_z: 0.015 +/- 0.023
lambda_1: 190.861 +/- 165.688
lambda_2: 310.241 +/- 256.908
cos_iota: -0.821 +/- 0.135
d_L: 478.076 +/- 74.497
t_c: 0.045 +/- 0.001
phase_c: 3.186 +/- 1.813
psi: 1.565 +/- 0.892
ra: 5.763 +/- 0.013
sin_dec: -0.704 +/- 0.010
Log probability: 130.012 +/- 2.268
Local acceptance: 0.985 +/- 0.120
Global acceptance: 0.132 +/- 0.338
DONE

JOB STATISTICS
==============
Job ID: 10906025
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:09:42
CPU Efficiency: 3.89% of 04:09:04 core-walltime
Job Wall-clock time: 00:15:34
Memory Utilized: 4.10 GB
Memory Efficiency: 41.01% of 10.00 GB (10.00 GB/node)
