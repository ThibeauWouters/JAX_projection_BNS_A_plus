Sat Mar 29 11:30:51 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
11:30 ninjax INFO    : Checking and setting outdir
11:30 ninjax INFO    : Found generation prior file ./ET/injection_1/generation_prior.prior
11:30 ninjax INFO    : The outdir is set to ./ET/injection_1
11:30 ninjax INFO    : Loading the given config
11:30 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
11:30 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'ET', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '2000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
11:30 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/ET/injection_1/complete_config.json
11:30 ninjax INFO    : No seed specified. Generating a random seed: 658295
11:30 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 13602
11:30 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 345886
11:30 ninjax INFO    : Loading the priors
11:30 ninjax INFO    : Setting up the prior
11:30 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
11:30 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
11:30 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
11:30 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
11:30 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
11:30 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
11:30 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
11:30 ninjax INFO    :    dL_prior = PowerLaw(1.0, 1500.0, 2.0, naming=["d_L"])
11:30 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
11:30 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
11:30 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
11:30 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
11:30 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
11:30 ninjax INFO    : Setting up the generation prior
11:30 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_1_source"])
11:30 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_2_source"])
11:30 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
11:30 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
11:30 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
11:30 ninjax INFO    :    dL_prior = PowerLaw(100.0, 1000.0, 2.0, naming=["d_L"])
11:30 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
11:30 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
11:30 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
11:30 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
11:30 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
11:30 ninjax INFO    : Finished prior setup
11:30 ninjax INFO    : Setting the transforms
11:30 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
11:30 ninjax INFO    : transforms_str_list has 3 elements
11:30 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
11:30 ninjax INFO    : Setting the likelihood
11:30 ninjax INFO    : GW likelihood provided, setting up the GW pipe
11:30 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
11:30 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
11:30 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
11:30 ninjax INFO    : self.is_BNS_run is True
11:30 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
11:30 ninjax INFO    : GW run is an injection
11:30 ninjax INFO    : Setting up GW injection . . . 
11:30 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
11:30 ninjax INFO    : Generating new injection
11:30 ninjax INFO    : Sanity check: generated parameters:
11:30 ninjax INFO    : {'mass_1_source': 1.1593438557994193, 'mass_2_source': 1.725094959296741, 's1_z': 0.03891230011481532, 's2_z': -0.002772995623891196, 'cos_iota': 0.6387540749414877, 'd_L': 726.7502861072171, 't_c': -0.043343000938563095, 'phase_c': 0.3107090096027275, 'psi': 3.082251520569574, 'ra': 0.04586262145176808, 'sin_dec': 0.39873027902399283}
11:30 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
11:30 ninjax INFO    : Injected lambda_1: 61.06893260521792
11:30 ninjax INFO    : Injected lambda_2: 811.8903372744696
11:30 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.4276956826615248 is 128.0
11:30 ninjax INFO    : After transforms, the injection parameters are:
11:30 ninjax INFO    : {'mass_1_source': 1.725094959296741, 'mass_2_source': 1.1593438557994193, 's1_z': 0.03891230011481532, 's2_z': -0.002772995623891196, 'cos_iota': 0.6387540749414877, 'd_L': 726.7502861072171, 't_c': -0.043343000938563095, 'phase_c': 0.3107090096027275, 'psi': 3.082251520569574, 'ra': 0.04586262145176808, 'sin_dec': 0.39873027902399283, 'q': 0.6720463992730243, 'M_c': 1.4276956826615248, 'eta': 0.2403823677725594, 'iota': Array(0.87791848, dtype=float64, weak_type=True), 'dec': Array(0.41013189, dtype=float64, weak_type=True), 'lambda_1': 61.06893260521792, 'lambda_2': 811.8903372744696}
11:31 ninjax INFO    : The trial injection parameters are {'M_c': 1.4276956826615248, 'eta': 0.2403823677725594, 's1_z': 0.03891230011481532, 's2_z': -0.002772995623891196, 'lambda_1': 61.06893260521792, 'lambda_2': 811.8903372744696, 'd_L': 726.7502861072171, 'phase_c': 0.3107090096027275, 'iota': 0.8779184750478792, 't_c': -0.043343000938563095, 'psi': 3.082251520569574, 'ra': 0.04586262145176808, 'dec': 0.4101318850292668}
11:31 ninjax INFO    : Injecting signals . . .
11:31 ninjax INFO    : self.ifos
11:31 ninjax INFO    : [GroundBased2G(ET1), GroundBased2G(ET2), GroundBased2G(ET3)]
11:31 ninjax INFO    : Signal injected in ifo ET1. Frequencies, data, and PSD:
11:31 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:31 ninjax INFO    : [ 4.77546013e-25+4.17942425e-24j -4.63379651e-24-5.61579636e-24j
 -4.62126219e-24+2.41283341e-24j ...
 -3.10838314e-25+7.24441889e-24j  3.16587606e-24-1.11386780e-24j
  1.13494655e-23-4.80532369e-25j]
11:31 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:31 ninjax INFO    : Signal injected in ifo ET2. Frequencies, data, and PSD:
11:31 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:31 ninjax INFO    : [-5.87662863e-24-9.12065426e-25j -2.81000422e-24-1.43187551e-24j
 -2.47537332e-24+4.78590483e-24j ...
 -1.01144957e-24-1.48911974e-24j  1.12795061e-24-5.17697315e-24j
  2.83043178e-24+7.92056632e-25j]
11:31 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:31 ninjax INFO    : Signal injected in ifo ET3. Frequencies, data, and PSD:
11:31 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:31 ninjax INFO    : [ 1.49855954e-24-3.82905469e-24j  1.97425326e-24-1.34718763e-24j
  2.49044583e-24+1.85795722e-24j ...
 -7.68131518e-25-6.14788932e-25j -1.82165864e-24+4.87095813e-24j
  2.12970882e-24-1.49755638e-24j]
11:31 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:31 ninjax INFO    : SNR for ifo ET1 is 11.208829361581987
11:31 ninjax INFO    : SNR for ifo ET2 is 17.23909471971236
11:31 ninjax INFO    : SNR for ifo ET3 is 16.2842357527711
11:31 ninjax INFO    : The network SNR is 26.229765085949694
11:31 ninjax INFO    : Network SNR passes threshold
11:31 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
11:31 ninjax INFO    :    mass_1_source: 1.725094959296741
11:31 ninjax INFO    :    mass_2_source: 1.1593438557994193
11:31 ninjax INFO    :    s1_z: 0.03891230011481532
11:31 ninjax INFO    :    s2_z: -0.002772995623891196
11:31 ninjax INFO    :    cos_iota: 0.6387540749414877
11:31 ninjax INFO    :    d_L: 726.7502861072171
11:31 ninjax INFO    :    t_c: -0.043343000938563095
11:31 ninjax INFO    :    phase_c: 0.3107090096027275
11:31 ninjax INFO    :    psi: 3.082251520569574
11:31 ninjax INFO    :    ra: 0.04586262145176808
11:31 ninjax INFO    :    sin_dec: 0.39873027902399283
11:31 ninjax INFO    :    q: 0.6720463992730243
11:31 ninjax INFO    :    M_c: 1.4276956826615248
11:31 ninjax INFO    :    eta: 0.2403823677725594
11:31 ninjax INFO    :    iota: 0.8779184750478792
11:31 ninjax INFO    :    dec: 0.4101318850292668
11:31 ninjax INFO    :    lambda_1: 61.06893260521792
11:31 ninjax INFO    :    lambda_2: 811.8903372744696
11:31 ninjax INFO    :    ET1_SNR: 11.208829361581987
11:31 ninjax INFO    :    ET2_SNR: 17.23909471971236
11:31 ninjax INFO    :    ET3_SNR: 16.2842357527711
11:31 ninjax INFO    :    network_SNR: 26.229765085949694
11:31 ninjax INFO    :    epoch: 126.0
11:31 ninjax INFO    :    gmst: 2.7288901910520846
11:31 ninjax INFO    :    duration: 128.0
11:31 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
11:31 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
11:31 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
11:33 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 140.7520260810852 seconds = 2.3458671013514203 minutes
11:33 ninjax INFO    : The priors are not modified after their initialization
11:33 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
11:33 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
11:33 ninjax INFO    : sample: {'M_c': Array([1.84950708, 1.93088729, 1.53048947], dtype=float64), 'q': Array([0.9376214 , 0.59969935, 0.27875686], dtype=float64), 's1_z': Array([-0.00129347,  0.00320909,  0.04704792], dtype=float64), 's2_z': Array([-0.03168995,  0.00190074,  0.03854244], dtype=float64), 'lambda_1': Array([1613.21696916, 2078.20589982, 3522.40289742], dtype=float64), 'lambda_2': Array([ 507.2936557 ,  455.37119971, 1619.23387365], dtype=float64), 'cos_iota': Array([ 0.91906454,  0.57265868, -0.51232346], dtype=float64), 'd_L': Array([ 775.03655309,  833.55830008, 1448.18426016], dtype=float64), 't_c': Array([0.01596103, 0.04780731, 0.01746738], dtype=float64), 'phase_c': Array([0.50126025, 2.76733838, 1.46317514], dtype=float64), 'psi': Array([2.9763151 , 1.51635906, 1.34211125], dtype=float64), 'ra': Array([4.13083061, 4.78361453, 4.14647247], dtype=float64), 'sin_dec': Array([-0.68907868, -0.83632018,  0.26816277], dtype=float64)}
11:33 ninjax INFO    : log_prob: [-717.86849733 -766.69071148  -61.03153965]
11:33 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 1.725094959296741, 'mass_2_source': 1.1593438557994193, 's1_z': 0.03891230011481532, 's2_z': -0.002772995623891196, 'cos_iota': 0.6387540749414877, 'd_L': 726.7502861072171, 't_c': -0.043343000938563095, 'phase_c': 0.3107090096027275, 'psi': 3.082251520569574, 'ra': 0.04586262145176808, 'sin_dec': 0.39873027902399283, 'q': 0.6720463992730243, 'M_c': 1.4276956826615248, 'eta': 0.2403823677725594, 'iota': Array(0.87791848, dtype=float64, weak_type=True), 'dec': Array(0.41013189, dtype=float64, weak_type=True), 'lambda_1': 61.06893260521792, 'lambda_2': 811.8903372744696, 'ET1_SNR': 11.208829361581987, 'ET2_SNR': 17.23909471971236, 'ET3_SNR': 16.2842357527711, 'network_SNR': 26.229765085949694, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
11:33 ninjax INFO    : log_prob at the injection parameters is: 310.2925281932979
11:33 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
11:33 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
11:33 ninjax INFO    : Ninjax setup complete.
11:33 ninjax INFO    : Saving output to ./ET/injection_1/
11:33 ninjax INFO    : Using polynomial learning rate scheduler
11:33 ninjax INFO    : The hyperparameters passed to flowMC and jim are
11:33 ninjax INFO    :    n_loop_training: 200
11:33 ninjax INFO    :    n_loop_production: 10
11:33 ninjax INFO    :    n_local_steps: 100
11:33 ninjax INFO    :    n_global_steps: 1000
11:33 ninjax INFO    :    n_epochs: 25
11:33 ninjax INFO    :    n_chains: 1000
11:33 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x14837dd2a680>
11:33 ninjax INFO    :    max_samples: 50000
11:33 ninjax INFO    :    momentum: 0.9
11:33 ninjax INFO    :    batch_size: 30000
11:33 ninjax INFO    :    use_global: True
11:33 ninjax INFO    :    keep_quantile: 0.0
11:33 ninjax INFO    :    train_thinning: 10
11:33 ninjax INFO    :    output_thinning: 50
11:33 ninjax INFO    :    n_sample_max: 10000
11:33 ninjax INFO    :    num_layers: 10
11:33 ninjax INFO    :    hidden_size: [128, 128]
11:33 ninjax INFO    :    num_bins: 8
11:33 ninjax INFO    :    save_training_chains: False
11:33 ninjax INFO    :    eps_mass_matrix: 1e-05
11:33 ninjax INFO    :    use_scheduler: True
11:33 ninjax INFO    :    use_temperature: False
11:33 ninjax INFO    :    which_temperature_schedule: exponential
11:33 ninjax INFO    :    starting_temperature: 2.0
11:33 ninjax INFO    :    stop_tempering_iteration: 75
11:33 ninjax INFO    :    stopping_criterion_global_acc: 0.1
11:33 ninjax INFO    :    stopping_criterion_loss: -inf
11:33 ninjax INFO    :    nf_model_kwargs: {}
11:33 ninjax INFO    :    local sampler arg not shown (pretty print)
11:33 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[ 1.37093087e-24 -3.73400427e-24 -3.72899131e-24  1.29958772e-24
 -4.60709047e-24  2.47841858e-24  3.28213732e-24  1.47444850e-24
 -2.39294699e-24  1.13952062e-24]
[ 4.29003275e-24 -5.61415681e-24  2.29995976e-24  2.60139471e-24
 -5.76010401e-25  4.94400510e-24 -1.36910393e-24  5.86584376e-24
  3.55336431e-24  4.29583660e-25]
Checking the noise that was generated in inject_signal ifo:
[-6.28838861e-24 -3.37850385e-24 -3.19954440e-24  3.09929739e-24
 -4.33310435e-25  1.59358863e-24  1.67506453e-24  1.86580375e-24
 -4.47590047e-25 -1.48417434e-24]
[-2.23392830e-24 -2.69358897e-24  3.60737347e-24  5.65899045e-24
 -5.91787622e-25  9.05085074e-25 -1.35838682e-24 -1.47687809e-24
 -5.76772560e-25 -3.92351660e-24]
Checking the noise that was generated in inject_signal ifo:
[ 1.01402249e-24  1.64049456e-24  2.32038798e-24  9.14743269e-25
 -5.37797272e-24  3.89622589e-24  6.55073982e-25  1.68234286e-26
 -8.32546153e-25  3.81756261e-24]
[-2.61430159e-24 -8.32887621e-26  3.15346931e-24  5.49839412e-25
 -1.18114299e-24 -2.35480847e-24  4.58148101e-25 -3.65674558e-24
  1.85589798e-24  5.01125044e-24]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.12288069725036621 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 1.725094959296741, 'mass_2_source': 1.1593438557994193, 's1_z': 0.03891230011481532, 's2_z': -0.002772995623891196, 'cos_iota': 0.6387540749414877, 'd_L': 726.7502861072171, 't_c': -0.043343000938563095, 'phase_c': 0.3107090096027275, 'psi': 3.082251520569574, 'ra': 0.04586262145176808, 'sin_dec': 0.39873027902399283, 'q': 0.6720463992730243, 'M_c': 1.4276956826615248, 'eta': 0.2403823677725594, 'iota': Array(0.87791848, dtype=float64, weak_type=True), 'dec': Array(0.41013189, dtype=float64, weak_type=True), 'lambda_1': 61.06893260521792, 'lambda_2': 811.8903372744696, 'ET1_SNR': 11.208829361581987, 'ET2_SNR': 17.23909471971236, 'ET3_SNR': 16.2842357527711, 'network_SNR': 26.229765085949694, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5116581916809082 seconds
Time for h_sky_low and h_sky_center: 5.765917062759399 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 1.2133307456970215
Going to compute coefficients . . .
Time for computing coefficients: 103.42827892303467 seconds
Time for computing coefficients: 14.56125807762146 seconds
Time for computing coefficients: 14.62153697013855 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:00<6:38:39, 120.20s/it]Tuning global sampler:   1%|          | 2/200 [02:06<2:55:17, 53.12s/it] Tuning global sampler:   2%|▏         | 3/200 [02:12<1:44:05, 31.70s/it]Tuning global sampler:   2%|▏         | 4/200 [02:18<1:10:39, 21.63s/it]Tuning global sampler:   2%|▎         | 5/200 [02:24<52:12, 16.07s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:31<41:59, 12.99s/it]Tuning global sampler:   4%|▎         | 7/200 [02:38<34:34, 10.75s/it]Tuning global sampler:   4%|▍         | 8/200 [02:44<29:46,  9.30s/it]Tuning global sampler:   4%|▍         | 9/200 [02:50<26:27,  8.31s/it]Tuning global sampler:   5%|▌         | 10/200 [02:56<24:05,  7.61s/it]Tuning global sampler:   6%|▌         | 11/200 [03:02<22:36,  7.18s/it]Tuning global sampler:   6%|▌         | 12/200 [03:08<21:33,  6.88s/it]Tuning global sampler:   6%|▋         | 13/200 [03:15<20:46,  6.66s/it]Tuning global sampler:   7%|▋         | 14/200 [03:21<20:14,  6.53s/it]Tuning global sampler:   8%|▊         | 15/200 [03:27<19:51,  6.44s/it]Tuning global sampler:   8%|▊         | 16/200 [03:33<19:32,  6.37s/it]Tuning global sampler:   8%|▊         | 17/200 [03:39<19:18,  6.33s/it]Tuning global sampler:   9%|▉         | 18/200 [03:46<19:05,  6.30s/it]Tuning global sampler:  10%|▉         | 19/200 [03:52<18:55,  6.27s/it]Tuning global sampler:  10%|█         | 20/200 [03:58<18:46,  6.26s/it]Tuning global sampler:  10%|█         | 21/200 [04:04<18:39,  6.25s/it]Tuning global sampler:  11%|█         | 22/200 [04:11<19:15,  6.49s/it]Tuning global sampler:  12%|█▏        | 23/200 [04:18<18:52,  6.40s/it]Tuning global sampler:  12%|█▏        | 24/200 [04:24<18:26,  6.28s/it]Tuning global sampler:  12%|█▎        | 25/200 [04:30<18:03,  6.19s/it]Tuning global sampler:  13%|█▎        | 26/200 [04:36<17:46,  6.13s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:42<17:32,  6.09s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:48<17:21,  6.06s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:54<17:12,  6.04s/it]Tuning global sampler:  15%|█▌        | 30/200 [05:00<17:03,  6.02s/it]Tuning global sampler:  16%|█▌        | 31/200 [05:05<16:55,  6.01s/it]Tuning global sampler:  16%|█▌        | 32/200 [05:11<16:48,  6.00s/it]Tuning global sampler:  16%|█▋        | 33/200 [05:17<16:40,  5.99s/it]Tuning global sampler:  17%|█▋        | 34/200 [05:23<16:32,  5.98s/it]Tuning global sampler:  18%|█▊        | 35/200 [05:29<16:26,  5.98s/it]Tuning global sampler:  18%|█▊        | 36/200 [05:35<16:20,  5.98s/it]Tuning global sampler:  18%|█▊        | 37/200 [05:41<16:15,  5.98s/it]Tuning global sampler:  19%|█▉        | 38/200 [05:47<16:09,  5.98s/it]Tuning global sampler:  20%|█▉        | 39/200 [05:53<16:03,  5.98s/it]Tuning global sampler:  20%|██        | 40/200 [06:00<16:39,  6.25s/it]Tuning global sampler:  20%|██        | 41/200 [06:06<16:20,  6.17s/it]Tuning global sampler:  21%|██        | 42/200 [06:12<16:06,  6.11s/it]Tuning global sampler:  22%|██▏       | 43/200 [06:18<15:53,  6.07s/it]Tuning global sampler:  22%|██▏       | 44/200 [06:24<15:41,  6.04s/it]Tuning global sampler:  22%|██▎       | 45/200 [06:30<15:31,  6.01s/it]Tuning global sampler:  23%|██▎       | 46/200 [06:36<15:24,  6.00s/it]Tuning global sampler:  24%|██▎       | 47/200 [06:42<15:17,  6.00s/it]Tuning global sampler:  24%|██▍       | 48/200 [06:48<15:10,  5.99s/it]Tuning global sampler:  24%|██▍       | 49/200 [06:54<15:04,  5.99s/it]Tuning global sampler:  25%|██▌       | 50/200 [07:00<14:57,  5.98s/it]Tuning global sampler:  26%|██▌       | 51/200 [07:06<14:51,  5.98s/it]Tuning global sampler:  26%|██▌       | 52/200 [07:12<14:45,  5.98s/it]Tuning global sampler:  26%|██▋       | 53/200 [07:18<14:39,  5.98s/it]Tuning global sampler:  27%|██▋       | 54/200 [07:24<14:33,  5.98s/it]Tuning global sampler:  28%|██▊       | 55/200 [07:30<14:25,  5.97s/it]Tuning global sampler:  28%|██▊       | 56/200 [07:36<14:18,  5.96s/it]Tuning global sampler:  28%|██▊       | 57/200 [07:42<14:13,  5.97s/it]Tuning global sampler:  29%|██▉       | 58/200 [07:48<14:08,  5.98s/it]Tuning global sampler:  30%|██▉       | 59/200 [07:54<14:03,  5.98s/it]Tuning global sampler:  30%|███       | 60/200 [08:01<14:35,  6.26s/it]Tuning global sampler:  30%|███       | 61/200 [08:07<14:18,  6.17s/it]Tuning global sampler:  31%|███       | 62/200 [08:13<14:04,  6.12s/it]Tuning global sampler:  32%|███▏      | 63/200 [08:19<13:53,  6.08s/it]Tuning global sampler:  32%|███▏      | 64/200 [08:25<13:43,  6.06s/it]Tuning global sampler:  32%|███▎      | 65/200 [08:31<13:35,  6.04s/it]Tuning global sampler:  33%|███▎      | 66/200 [08:37<13:26,  6.02s/it]Tuning global sampler:  34%|███▎      | 67/200 [08:43<13:18,  6.00s/it]Tuning global sampler:  34%|███▍      | 68/200 [08:49<13:12,  6.01s/it]Tuning global sampler:  34%|███▍      | 69/200 [08:55<13:06,  6.00s/it]Tuning global sampler:  35%|███▌      | 70/200 [09:01<13:00,  6.01s/it]Tuning global sampler:  36%|███▌      | 71/200 [09:07<12:54,  6.01s/it]Tuning global sampler:  36%|███▌      | 72/200 [09:13<12:48,  6.01s/it]Tuning global sampler:  36%|███▋      | 73/200 [09:19<12:42,  6.01s/it]Tuning global sampler:  37%|███▋      | 74/200 [09:25<12:36,  6.01s/it]Tuning global sampler:  38%|███▊      | 75/200 [09:31<12:30,  6.01s/it]Tuning global sampler:  38%|███▊      | 76/200 [09:37<12:25,  6.01s/it]Tuning global sampler:  38%|███▊      | 77/200 [09:43<12:18,  6.01s/it]Tuning global sampler:  39%|███▉      | 78/200 [09:49<12:11,  6.00s/it]Tuning global sampler:  40%|███▉      | 79/200 [09:56<12:39,  6.28s/it]Tuning global sampler:  40%|████      | 80/200 [10:02<12:23,  6.20s/it]Tuning global sampler:  40%|████      | 81/200 [10:08<12:10,  6.14s/it]Tuning global sampler:  41%|████      | 82/200 [10:14<11:59,  6.10s/it]Tuning global sampler:  42%|████▏     | 83/200 [10:20<11:50,  6.07s/it]Tuning global sampler:  42%|████▏     | 84/200 [10:26<11:41,  6.05s/it]Tuning global sampler:  42%|████▎     | 85/200 [10:32<11:34,  6.04s/it]Tuning global sampler:  43%|████▎     | 86/200 [10:38<11:27,  6.03s/it]Tuning global sampler:  44%|████▎     | 87/200 [10:44<11:20,  6.02s/it]Tuning global sampler:  44%|████▍     | 88/200 [10:50<11:12,  6.00s/it]Tuning global sampler:  44%|████▍     | 89/200 [10:55<11:05,  5.99s/it]Tuning global sampler:  45%|████▌     | 90/200 [11:01<10:58,  5.99s/it]Tuning global sampler:  46%|████▌     | 91/200 [11:07<10:52,  5.99s/it]Tuning global sampler:  46%|████▌     | 92/200 [11:13<10:47,  5.99s/it]Tuning global sampler:  46%|████▋     | 93/200 [11:19<10:41,  5.99s/it]Tuning global sampler:  47%|████▋     | 94/200 [11:25<10:36,  6.00s/it]Tuning global sampler:  48%|████▊     | 95/200 [11:31<10:30,  6.00s/it]Tuning global sampler:  48%|████▊     | 96/200 [11:37<10:23,  6.00s/it]Tuning global sampler:  48%|████▊     | 97/200 [11:43<10:19,  6.01s/it]Tuning global sampler:  49%|████▉     | 98/200 [11:50<10:13,  6.02s/it]Tuning global sampler:  50%|████▉     | 99/200 [11:55<10:06,  6.00s/it]Tuning global sampler:  50%|█████     | 100/200 [12:02<10:29,  6.30s/it]Tuning global sampler:  50%|█████     | 101/200 [12:08<10:14,  6.20s/it]Tuning global sampler:  51%|█████     | 102/200 [12:14<10:01,  6.14s/it]Tuning global sampler:  52%|█████▏    | 103/200 [12:20<09:51,  6.09s/it]Tuning global sampler:  52%|█████▏    | 104/200 [12:26<09:41,  6.06s/it]Tuning global sampler:  52%|█████▎    | 105/200 [12:32<09:33,  6.03s/it]Tuning global sampler:  53%|█████▎    | 106/200 [12:38<09:25,  6.02s/it]Tuning global sampler:  54%|█████▎    | 107/200 [12:44<09:18,  6.01s/it]Tuning global sampler:  54%|█████▍    | 108/200 [12:50<09:11,  6.00s/it]Tuning global sampler:  55%|█████▍    | 109/200 [12:56<09:05,  5.99s/it]Tuning global sampler:  55%|█████▌    | 110/200 [13:02<08:58,  5.98s/it]Tuning global sampler:  56%|█████▌    | 111/200 [13:08<08:51,  5.97s/it]Tuning global sampler:  56%|█████▌    | 112/200 [13:14<08:45,  5.97s/it]Tuning global sampler:  56%|█████▋    | 113/200 [13:20<08:39,  5.97s/it]Tuning global sampler:  57%|█████▋    | 114/200 [13:26<08:34,  5.98s/it]Tuning global sampler:  57%|█████▊    | 115/200 [13:32<08:28,  5.98s/it]Tuning global sampler:  58%|█████▊    | 116/200 [13:38<08:22,  5.98s/it]Tuning global sampler:  58%|█████▊    | 117/200 [13:44<08:16,  5.98s/it]Tuning global sampler:  59%|█████▉    | 118/200 [13:50<08:10,  5.98s/it]Tuning global sampler:  60%|█████▉    | 119/200 [13:56<08:05,  5.99s/it]Tuning global sampler:  60%|██████    | 120/200 [14:03<08:24,  6.30s/it]Tuning global sampler:  60%|██████    | 121/200 [14:09<08:09,  6.20s/it]Tuning global sampler:  61%|██████    | 122/200 [14:15<07:58,  6.13s/it]Tuning global sampler:  62%|██████▏   | 123/200 [14:21<07:49,  6.09s/it]Tuning global sampler:  62%|██████▏   | 124/200 [14:27<07:41,  6.07s/it]Tuning global sampler:  62%|██████▎   | 125/200 [14:33<07:33,  6.05s/it]Tuning global sampler:  63%|██████▎   | 126/200 [14:39<07:26,  6.03s/it]Tuning global sampler:  64%|██████▎   | 127/200 [14:45<07:19,  6.02s/it]Tuning global sampler:  64%|██████▍   | 128/200 [14:51<07:13,  6.02s/it]Tuning global sampler:  64%|██████▍   | 129/200 [14:57<07:07,  6.02s/it]Tuning global sampler:  65%|██████▌   | 130/200 [15:03<07:01,  6.02s/it]Tuning global sampler:  66%|██████▌   | 131/200 [15:09<06:55,  6.02s/it]Tuning global sampler:  66%|██████▌   | 132/200 [15:15<06:48,  6.01s/it]Tuning global sampler:  66%|██████▋   | 133/200 [15:21<06:41,  6.00s/it]Tuning global sampler:  67%|██████▋   | 134/200 [15:27<06:36,  6.00s/it]Tuning global sampler:  68%|██████▊   | 135/200 [15:33<06:30,  6.01s/it]Tuning global sampler:  68%|██████▊   | 136/200 [15:39<06:24,  6.01s/it]Tuning global sampler:  68%|██████▊   | 137/200 [15:45<06:18,  6.01s/it]Tuning global sampler:  69%|██████▉   | 138/200 [15:51<06:12,  6.01s/it]Tuning global sampler:  70%|██████▉   | 139/200 [15:57<06:06,  6.01s/it]Tuning global sampler:  70%|███████   | 140/200 [16:03<06:00,  6.01s/it]Tuning global sampler:  70%|███████   | 141/200 [16:10<06:13,  6.33s/it]Tuning global sampler:  71%|███████   | 142/200 [16:16<06:01,  6.24s/it]Tuning global sampler:  72%|███████▏  | 143/200 [16:22<05:51,  6.17s/it]Tuning global sampler:  72%|███████▏  | 144/200 [16:28<05:42,  6.11s/it]Tuning global sampler:  72%|███████▎  | 145/200 [16:34<05:34,  6.09s/it]Tuning global sampler:  73%|███████▎  | 146/200 [16:40<05:27,  6.07s/it]Tuning global sampler:  74%|███████▎  | 147/200 [16:46<05:20,  6.05s/it]Tuning global sampler:  74%|███████▍  | 148/200 [16:52<05:14,  6.04s/it]Tuning global sampler:  74%|███████▍  | 149/200 [16:58<05:07,  6.04s/it]Tuning global sampler:  75%|███████▌  | 150/200 [17:04<05:01,  6.03s/it]Tuning global sampler:  76%|███████▌  | 151/200 [17:10<04:55,  6.03s/it]Tuning global sampler:  76%|███████▌  | 152/200 [17:16<04:49,  6.02s/it]Tuning global sampler:  76%|███████▋  | 153/200 [17:22<04:43,  6.02s/it]Tuning global sampler:  77%|███████▋  | 154/200 [17:28<04:36,  6.01s/it]Tuning global sampler:  78%|███████▊  | 155/200 [17:34<04:30,  6.00s/it]Tuning global sampler:  78%|███████▊  | 156/200 [17:40<04:24,  6.01s/it]Tuning global sampler:  78%|███████▊  | 157/200 [17:46<04:18,  6.01s/it]Tuning global sampler:  79%|███████▉  | 158/200 [17:52<04:12,  6.01s/it]Tuning global sampler:  80%|███████▉  | 159/200 [17:58<04:06,  6.01s/it]Tuning global sampler:  80%|████████  | 160/200 [18:04<04:00,  6.01s/it]Tuning global sampler:  80%|████████  | 161/200 [18:12<04:07,  6.34s/it]Tuning global sampler:  81%|████████  | 162/200 [18:18<03:57,  6.24s/it]Tuning global sampler:  82%|████████▏ | 163/200 [18:24<03:48,  6.17s/it]Tuning global sampler:  82%|████████▏ | 164/200 [18:30<03:40,  6.12s/it]Tuning global sampler:  82%|████████▎ | 165/200 [18:36<03:32,  6.08s/it]Tuning global sampler:  83%|████████▎ | 166/200 [18:42<03:25,  6.04s/it]Tuning global sampler:  84%|████████▎ | 167/200 [18:48<03:19,  6.04s/it]Tuning global sampler:  84%|████████▍ | 168/200 [18:54<03:12,  6.03s/it]Tuning global sampler:  84%|████████▍ | 169/200 [19:00<03:06,  6.02s/it]Tuning global sampler:  85%|████████▌ | 170/200 [19:06<03:00,  6.02s/it]Tuning global sampler:  86%|████████▌ | 171/200 [19:12<02:54,  6.01s/it]Tuning global sampler:  86%|████████▌ | 172/200 [19:18<02:48,  6.01s/it]Tuning global sampler:  86%|████████▋ | 173/200 [19:24<02:42,  6.01s/it]Tuning global sampler:  87%|████████▋ | 174/200 [19:30<02:36,  6.01s/it]Tuning global sampler:  88%|████████▊ | 175/200 [19:36<02:30,  6.01s/it]Tuning global sampler:  88%|████████▊ | 176/200 [19:42<02:23,  6.00s/it]Tuning global sampler:  88%|████████▊ | 177/200 [19:48<02:17,  5.99s/it]Tuning global sampler:  89%|████████▉ | 178/200 [19:54<02:11,  6.00s/it]Tuning global sampler:  90%|████████▉ | 179/200 [20:00<02:05,  6.00s/it]Tuning global sampler:  90%|█████████ | 180/200 [20:06<02:00,  6.00s/it]Tuning global sampler:  90%|█████████ | 181/200 [20:12<01:54,  6.01s/it]Tuning global sampler:  91%|█████████ | 182/200 [20:19<01:54,  6.33s/it]Tuning global sampler:  92%|█████████▏| 183/200 [20:25<01:46,  6.24s/it]Tuning global sampler:  92%|█████████▏| 184/200 [20:31<01:38,  6.17s/it]Tuning global sampler:  92%|█████████▎| 185/200 [20:37<01:31,  6.12s/it]Tuning global sampler:  93%|█████████▎| 186/200 [20:43<01:25,  6.09s/it]Tuning global sampler:  94%|█████████▎| 187/200 [20:49<01:18,  6.06s/it]Tuning global sampler:  94%|█████████▍| 188/200 [20:55<01:12,  6.03s/it]Tuning global sampler:  94%|█████████▍| 189/200 [21:01<01:06,  6.02s/it]Tuning global sampler:  95%|█████████▌| 190/200 [21:07<01:00,  6.02s/it]Tuning global sampler:  96%|█████████▌| 191/200 [21:13<00:54,  6.03s/it]Tuning global sampler:  96%|█████████▌| 192/200 [21:19<00:48,  6.03s/it]Tuning global sampler:  96%|█████████▋| 193/200 [21:25<00:42,  6.03s/it]Tuning global sampler:  97%|█████████▋| 194/200 [21:31<00:36,  6.03s/it]Tuning global sampler:  98%|█████████▊| 195/200 [21:37<00:30,  6.02s/it]Tuning global sampler:  98%|█████████▊| 196/200 [21:43<00:24,  6.02s/it]Tuning global sampler:  98%|█████████▊| 197/200 [21:49<00:18,  6.03s/it]Tuning global sampler:  99%|█████████▉| 198/200 [21:55<00:12,  6.01s/it]Tuning global sampler: 100%|█████████▉| 199/200 [22:01<00:06,  6.00s/it]Tuning global sampler: 100%|██████████| 200/200 [22:07<00:00,  6.01s/it]Tuning global sampler: 100%|██████████| 200/200 [22:07<00:00,  6.64s/it]
Compiling MALA body
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:04<00:43,  4.82s/it]Production run:  20%|██        | 2/10 [00:09<00:38,  4.82s/it]Production run:  30%|███       | 3/10 [00:14<00:33,  4.82s/it]Production run:  40%|████      | 4/10 [00:19<00:28,  4.82s/it]Production run:  50%|█████     | 5/10 [00:24<00:24,  4.82s/it]Production run:  60%|██████    | 6/10 [00:28<00:19,  4.82s/it]Production run:  70%|███████   | 7/10 [00:33<00:14,  4.82s/it]Production run:  80%|████████  | 8/10 [00:38<00:09,  4.82s/it]Production run:  90%|█████████ | 9/10 [00:43<00:04,  4.82s/it]Production run: 100%|██████████| 10/10 [00:48<00:00,  4.82s/it]Production run: 100%|██████████| 10/10 [00:48<00:00,  4.82s/it]
11:56 ninjax INFO    : Saving samples to ./ET/injection_1/results_training.npz
11:56 ninjax INFO    : Saving the NF
11:56 ninjax INFO    : Time taken: 1383.4859693050385 seconds (23.05809948841731 minutes)
11:56 ninjax INFO    : Creating the final corner plot
11:56 ninjax INFO    : Dumping the final production chains
11:56 ninjax INFO    : Chains shape is: (13, 220000)
11:56 ninjax INFO    : Key: M_c: ESS = 11977, Rhat = 1.0502985439266606
11:56 ninjax INFO    : Key: q: ESS = 12374, Rhat = 1.065204016108251
11:56 ninjax INFO    : Key: s1_z: ESS = 10204, Rhat = 1.0589020006391894
11:56 ninjax INFO    : Key: s2_z: ESS = 11124, Rhat = 1.0545568798205471
11:56 ninjax INFO    : Key: lambda_1: ESS = 10096, Rhat = 1.0603043448281873
11:56 ninjax INFO    : Key: lambda_2: ESS = 10460, Rhat = 1.0576034293622505
11:56 ninjax INFO    : Key: cos_iota: ESS = 40883, Rhat = 1.0732752054447665
11:56 ninjax INFO    : Key: d_L: ESS = 8727, Rhat = 1.0700343823351983
11:56 ninjax INFO    : Key: t_c: ESS = 4137, Rhat = 1.1634328782692065
11:56 ninjax INFO    : Key: phase_c: ESS = 9626, Rhat = 1.0638891004694417
11:56 ninjax INFO    : Key: psi: ESS = 9978, Rhat = 1.0642736993217687
11:56 ninjax INFO    : Key: ra: ESS = 10894, Rhat = 1.0550530244562164
11:56 ninjax INFO    : Key: sin_dec: ESS = 8462, Rhat = 1.073235488411283
11:56 ninjax INFO    : Key: eta: ESS = 12374, Rhat = 1.066260560491419
11:56 ninjax INFO    : Key: iota: ESS = 40883, Rhat = 1.077473574359517
11:56 ninjax INFO    : Key: dec: ESS = 8462, Rhat = 1.073235488411283
11:56 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.428 +/- 0.055
q: 0.800 +/- 0.140
s1_z: 0.011 +/- 0.025
s2_z: 0.004 +/- 0.027
lambda_1: 848.882 +/- 1074.763
lambda_2: 1063.686 +/- 1056.860
cos_iota: 0.118 +/- 0.742
d_L: 962.118 +/- 214.155
t_c: -0.035 +/- 0.013
phase_c: 2.949 +/- 1.726
psi: 1.619 +/- 0.871
ra: 2.638 +/- 1.476
sin_dec: -0.203 +/- 0.436
Log probability: 265.383 +/- 97.327
Local acceptance: 0.495 +/- 0.500
Global acceptance: 0.032 +/- 0.177
Max loss: 22.898, Min loss: 0.168
Production summary
==========
M_c: 1.428 +/- 0.000
q: 0.820 +/- 0.109
s1_z: 0.011 +/- 0.025
s2_z: 0.005 +/- 0.027
lambda_1: 396.499 +/- 379.164
lambda_2: 710.915 +/- 603.384
cos_iota: 0.032 +/- 0.749
d_L: 864.406 +/- 151.656
t_c: -0.035 +/- 0.009
phase_c: 3.053 +/- 1.772
psi: 1.661 +/- 0.886
ra: 2.756 +/- 1.499
sin_dec: -0.156 +/- 0.435
Log probability: 306.134 +/- 2.425
Local acceptance: 0.409 +/- 0.492
Global acceptance: 0.050 +/- 0.218
DONE

JOB STATISTICS
==============
Job ID: 10874060
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:19:38
CPU Efficiency: 4.67% of 07:00:32 core-walltime
Job Wall-clock time: 00:26:17
Memory Utilized: 4.83 GB
Memory Efficiency: 48.26% of 10.00 GB
