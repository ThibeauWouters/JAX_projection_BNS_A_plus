Sat Mar 29 11:31:52 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
11:31 ninjax INFO    : Checking and setting outdir
11:31 ninjax INFO    : Found generation prior file ./ET/injection_4/generation_prior.prior
11:31 ninjax INFO    : The outdir is set to ./ET/injection_4
11:31 ninjax INFO    : Loading the given config
11:31 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
11:31 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'ET', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '2000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
11:31 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/ET/injection_4/complete_config.json
11:31 ninjax INFO    : No seed specified. Generating a random seed: 384112
11:31 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 150262
11:31 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 959654
11:31 ninjax INFO    : Loading the priors
11:31 ninjax INFO    : Setting up the prior
11:31 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
11:31 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
11:31 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
11:31 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
11:31 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
11:31 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
11:31 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
11:31 ninjax INFO    :    dL_prior = PowerLaw(1.0, 1500.0, 2.0, naming=["d_L"])
11:31 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
11:31 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
11:31 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
11:31 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
11:31 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
11:31 ninjax INFO    : Setting up the generation prior
11:31 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_1_source"])
11:31 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_2_source"])
11:31 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
11:31 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
11:31 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
11:31 ninjax INFO    :    dL_prior = PowerLaw(100.0, 1000.0, 2.0, naming=["d_L"])
11:31 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
11:31 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
11:31 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
11:31 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
11:31 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
11:31 ninjax INFO    : Finished prior setup
11:31 ninjax INFO    : Setting the transforms
11:31 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
11:31 ninjax INFO    : transforms_str_list has 3 elements
11:31 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
11:31 ninjax INFO    : Setting the likelihood
11:31 ninjax INFO    : GW likelihood provided, setting up the GW pipe
11:31 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
11:31 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
11:31 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
11:31 ninjax INFO    : self.is_BNS_run is True
11:31 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
11:31 ninjax INFO    : GW run is an injection
11:31 ninjax INFO    : Setting up GW injection . . . 
11:31 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
11:31 ninjax INFO    : Generating new injection
11:31 ninjax INFO    : Sanity check: generated parameters:
11:31 ninjax INFO    : {'mass_1_source': 1.0351460118901334, 'mass_2_source': 1.7866299727155999, 's1_z': 0.014784503802529048, 's2_z': 0.025701765880176253, 'cos_iota': -0.4278549150670634, 'd_L': 800.0596016476076, 't_c': -0.06938237195532238, 'phase_c': 1.5023650788207215, 'psi': 0.7727129251960801, 'ra': 0.31547575495180036, 'sin_dec': -0.9940055543476847}
11:31 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
11:31 ninjax INFO    : Injected lambda_1: 46.24692429973104
11:31 ninjax INFO    : Injected lambda_2: 1561.2754606740057
11:31 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.387668325922929 is 128.0
11:31 ninjax INFO    : After transforms, the injection parameters are:
11:31 ninjax INFO    : {'mass_1_source': 1.7866299727155999, 'mass_2_source': 1.0351460118901334, 's1_z': 0.014784503802529048, 's2_z': 0.025701765880176253, 'cos_iota': -0.4278549150670634, 'd_L': 800.0596016476076, 't_c': -0.06938237195532238, 'phase_c': 1.5023650788207215, 'psi': 0.7727129251960801, 'ra': 0.31547575495180036, 'sin_dec': -0.9940055543476847, 'q': 0.5793846670537809, 'M_c': 1.387668325922929, 'eta': 0.23226895327872665, 'iota': Array(2.01291448, dtype=float64, weak_type=True), 'dec': Array(-1.46124776, dtype=float64, weak_type=True), 'lambda_1': 46.24692429973104, 'lambda_2': 1561.2754606740057}
11:32 ninjax INFO    : The trial injection parameters are {'M_c': 1.387668325922929, 'eta': 0.23226895327872665, 's1_z': 0.014784503802529048, 's2_z': 0.025701765880176253, 'lambda_1': 46.24692429973104, 'lambda_2': 1561.2754606740057, 'd_L': 800.0596016476076, 'phase_c': 1.5023650788207215, 'iota': 2.012914484760427, 't_c': -0.06938237195532238, 'psi': 0.7727129251960801, 'ra': 0.31547575495180036, 'dec': -1.4612477609383707}
11:32 ninjax INFO    : Injecting signals . . .
11:32 ninjax INFO    : self.ifos
11:32 ninjax INFO    : [GroundBased2G(ET1), GroundBased2G(ET2), GroundBased2G(ET3)]
11:32 ninjax INFO    : Signal injected in ifo ET1. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [-5.72238959e-24-5.56761100e-24j  2.88773491e-24+9.90621547e-25j
 -1.47618381e-24-1.75845268e-25j ...
 -1.86292228e-24-3.18450066e-24j -4.38665090e-24+2.11439320e-24j
  2.57782129e-24+3.95710056e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : Signal injected in ifo ET2. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [-2.30464803e-25-1.86821787e-24j  2.71505135e-24+2.36523677e-24j
 -1.37183598e-24+2.62289018e-24j ...
 -1.00650470e-24-4.72995048e-24j  1.96219947e-24+8.78247922e-24j
  5.18591080e-24-5.21719469e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : Signal injected in ifo ET3. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [ 7.08535083e-25-2.74390449e-24j  4.95530210e-25+3.46199930e-24j
 -5.89614076e-25+7.39066594e-24j ...
 -6.87644306e-24-2.88304565e-25j  2.71124539e-24-4.08352803e-24j
  6.66243845e-24+6.75972138e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : SNR for ifo ET1 is 17.108713119299463
11:32 ninjax INFO    : SNR for ifo ET2 is 13.635784894877247
11:32 ninjax INFO    : SNR for ifo ET3 is 18.553941508396836
11:32 ninjax INFO    : The network SNR is 28.686084427730165
11:32 ninjax INFO    : Network SNR passes threshold
11:32 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
11:32 ninjax INFO    :    mass_1_source: 1.7866299727155999
11:32 ninjax INFO    :    mass_2_source: 1.0351460118901334
11:32 ninjax INFO    :    s1_z: 0.014784503802529048
11:32 ninjax INFO    :    s2_z: 0.025701765880176253
11:32 ninjax INFO    :    cos_iota: -0.4278549150670634
11:32 ninjax INFO    :    d_L: 800.0596016476076
11:32 ninjax INFO    :    t_c: -0.06938237195532238
11:32 ninjax INFO    :    phase_c: 1.5023650788207215
11:32 ninjax INFO    :    psi: 0.7727129251960801
11:32 ninjax INFO    :    ra: 0.31547575495180036
11:32 ninjax INFO    :    sin_dec: -0.9940055543476847
11:32 ninjax INFO    :    q: 0.5793846670537809
11:32 ninjax INFO    :    M_c: 1.387668325922929
11:32 ninjax INFO    :    eta: 0.23226895327872665
11:32 ninjax INFO    :    iota: 2.012914484760427
11:32 ninjax INFO    :    dec: -1.4612477609383707
11:32 ninjax INFO    :    lambda_1: 46.24692429973104
11:32 ninjax INFO    :    lambda_2: 1561.2754606740057
11:32 ninjax INFO    :    ET1_SNR: 17.108713119299463
11:32 ninjax INFO    :    ET2_SNR: 13.635784894877247
11:32 ninjax INFO    :    ET3_SNR: 18.553941508396836
11:32 ninjax INFO    :    network_SNR: 28.686084427730165
11:32 ninjax INFO    :    epoch: 126.0
11:32 ninjax INFO    :    gmst: 2.7288901910520846
11:32 ninjax INFO    :    duration: 128.0
11:32 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
11:32 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
11:32 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
11:34 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 143.27716445922852 seconds = 2.3879527409871417 minutes
11:34 ninjax INFO    : The priors are not modified after their initialization
11:34 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
11:34 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
11:34 ninjax INFO    : sample: {'M_c': Array([1.29562695, 1.38579402, 1.33467052], dtype=float64), 'q': Array([0.40726629, 0.19464432, 0.29908132], dtype=float64), 's1_z': Array([ 0.0305043 ,  0.00311475, -0.03628448], dtype=float64), 's2_z': Array([ 0.01116466, -0.04541669,  0.04947955], dtype=float64), 'lambda_1': Array([1722.67119177, 3587.01500633, 2956.45910221], dtype=float64), 'lambda_2': Array([ 402.97517532, 2407.98822187, 3984.87481789], dtype=float64), 'cos_iota': Array([0.13123701, 0.65060095, 0.31906331], dtype=float64), 'd_L': Array([1262.32798493,  775.9098698 ,  661.31534739], dtype=float64), 't_c': Array([0.02832309, 0.08302988, 0.06679632], dtype=float64), 'phase_c': Array([3.55125127, 3.7356924 , 1.83824788], dtype=float64), 'psi': Array([2.21498266, 0.28436569, 1.21467245], dtype=float64), 'ra': Array([2.66576937, 4.05878664, 1.42141508], dtype=float64), 'sin_dec': Array([ 0.71814876, -0.21497582,  0.23281851], dtype=float64)}
11:34 ninjax INFO    : log_prob: [-112.2338266  -146.68263197 -139.47812952]
11:34 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 1.7866299727155999, 'mass_2_source': 1.0351460118901334, 's1_z': 0.014784503802529048, 's2_z': 0.025701765880176253, 'cos_iota': -0.4278549150670634, 'd_L': 800.0596016476076, 't_c': -0.06938237195532238, 'phase_c': 1.5023650788207215, 'psi': 0.7727129251960801, 'ra': 0.31547575495180036, 'sin_dec': -0.9940055543476847, 'q': 0.5793846670537809, 'M_c': 1.387668325922929, 'eta': 0.23226895327872665, 'iota': Array(2.01291448, dtype=float64, weak_type=True), 'dec': Array(-1.46124776, dtype=float64, weak_type=True), 'lambda_1': 46.24692429973104, 'lambda_2': 1561.2754606740057, 'ET1_SNR': 17.108713119299463, 'ET2_SNR': 13.635784894877247, 'ET3_SNR': 18.553941508396836, 'network_SNR': 28.686084427730165, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
11:34 ninjax INFO    : log_prob at the injection parameters is: 408.27457373248495
11:34 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
11:34 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
11:34 ninjax INFO    : Ninjax setup complete.
11:34 ninjax INFO    : Saving output to ./ET/injection_4/
11:34 ninjax INFO    : Using polynomial learning rate scheduler
11:34 ninjax INFO    : The hyperparameters passed to flowMC and jim are
11:34 ninjax INFO    :    n_loop_training: 200
11:34 ninjax INFO    :    n_loop_production: 10
11:34 ninjax INFO    :    n_local_steps: 100
11:34 ninjax INFO    :    n_global_steps: 1000
11:34 ninjax INFO    :    n_epochs: 25
11:34 ninjax INFO    :    n_chains: 1000
11:34 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x152951946680>
11:34 ninjax INFO    :    max_samples: 50000
11:34 ninjax INFO    :    momentum: 0.9
11:34 ninjax INFO    :    batch_size: 30000
11:34 ninjax INFO    :    use_global: True
11:34 ninjax INFO    :    keep_quantile: 0.0
11:34 ninjax INFO    :    train_thinning: 10
11:34 ninjax INFO    :    output_thinning: 50
11:34 ninjax INFO    :    n_sample_max: 10000
11:34 ninjax INFO    :    num_layers: 10
11:34 ninjax INFO    :    hidden_size: [128, 128]
11:34 ninjax INFO    :    num_bins: 8
11:34 ninjax INFO    :    save_training_chains: False
11:34 ninjax INFO    :    eps_mass_matrix: 1e-05
11:34 ninjax INFO    :    use_scheduler: True
11:34 ninjax INFO    :    use_temperature: False
11:34 ninjax INFO    :    which_temperature_schedule: exponential
11:34 ninjax INFO    :    starting_temperature: 2.0
11:34 ninjax INFO    :    stop_tempering_iteration: 75
11:34 ninjax INFO    :    stopping_criterion_global_acc: 0.1
11:34 ninjax INFO    :    stopping_criterion_loss: -inf
11:34 ninjax INFO    :    nf_model_kwargs: {}
11:34 ninjax INFO    :    local sampler arg not shown (pretty print)
11:34 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-4.36295549e-24  4.26156517e-24 -1.26349475e-25 -5.55536072e-25
 -3.60355405e-24  2.51161318e-25  4.81915687e-24 -1.47522794e-24
 -3.55531557e-24  6.35531262e-24]
[-5.77243578e-24  1.02018570e-24  7.81281249e-26  8.89311824e-25
 -2.89370147e-24  3.50664136e-25 -1.42181277e-24 -2.67964247e-24
  5.90723665e-25  3.64516743e-24]
Checking the noise that was generated in inject_signal ifo:
[-3.90515585e-25  2.37297323e-24 -1.87940402e-24  1.33249302e-24
  1.62143320e-25 -7.64055875e-25 -4.02584641e-24 -8.10513339e-25
 -4.39378566e-24 -8.21710814e-25]
[-7.84260962e-25  3.40565112e-24  3.59281607e-24 -5.28112216e-24
 -1.79965680e-24  3.56555697e-24 -7.18409759e-25  2.69592478e-24
  2.29710245e-24  3.50599559e-24]
Checking the noise that was generated in inject_signal ifo:
[-4.92969557e-25 -5.37700144e-25 -1.43269948e-24 -7.77874243e-25
  2.22184492e-24  2.36741807e-25  2.96970297e-24 -2.30701106e-24
 -7.39420780e-24 -3.30521180e-24]
[-3.62662684e-24  2.38812231e-24  6.16267937e-24  9.54636782e-25
  2.17154294e-24 -6.15199994e-26  6.11154027e-24  6.33592984e-25
 -2.01245237e-24  2.64376548e-24]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.12238097190856934 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 1.7866299727155999, 'mass_2_source': 1.0351460118901334, 's1_z': 0.014784503802529048, 's2_z': 0.025701765880176253, 'cos_iota': -0.4278549150670634, 'd_L': 800.0596016476076, 't_c': -0.06938237195532238, 'phase_c': 1.5023650788207215, 'psi': 0.7727129251960801, 'ra': 0.31547575495180036, 'sin_dec': -0.9940055543476847, 'q': 0.5793846670537809, 'M_c': 1.387668325922929, 'eta': 0.23226895327872665, 'iota': Array(2.01291448, dtype=float64, weak_type=True), 'dec': Array(-1.46124776, dtype=float64, weak_type=True), 'lambda_1': 46.24692429973104, 'lambda_2': 1561.2754606740057, 'ET1_SNR': 17.108713119299463, 'ET2_SNR': 13.635784894877247, 'ET3_SNR': 18.553941508396836, 'network_SNR': 28.686084427730165, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5079605579376221 seconds
Time for h_sky_low and h_sky_center: 5.8125457763671875 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 1.2914724349975586
Going to compute coefficients . . .
Time for computing coefficients: 105.59439277648926 seconds
Time for computing coefficients: 14.876661539077759 seconds
Time for computing coefficients: 14.538888454437256 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [01:59<6:36:45, 119.63s/it]Tuning global sampler:   1%|          | 2/200 [02:05<2:54:30, 52.88s/it] Tuning global sampler:   2%|▏         | 3/200 [02:12<1:43:41, 31.58s/it]Tuning global sampler:   2%|▏         | 4/200 [02:18<1:10:27, 21.57s/it]Tuning global sampler:   2%|▎         | 5/200 [02:24<52:05, 16.03s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:30<41:01, 12.69s/it]Tuning global sampler:   4%|▎         | 7/200 [02:37<34:48, 10.82s/it]Tuning global sampler:   4%|▍         | 8/200 [02:43<29:55,  9.35s/it]Tuning global sampler:   4%|▍         | 9/200 [02:49<26:34,  8.35s/it]Tuning global sampler:   5%|▌         | 10/200 [02:55<24:09,  7.63s/it]Tuning global sampler:   6%|▌         | 11/200 [03:02<22:39,  7.19s/it]Tuning global sampler:   6%|▌         | 12/200 [03:08<21:35,  6.89s/it]Tuning global sampler:   6%|▋         | 13/200 [03:14<20:46,  6.67s/it]Tuning global sampler:   7%|▋         | 14/200 [03:20<20:15,  6.54s/it]Tuning global sampler:   8%|▊         | 15/200 [03:27<19:52,  6.45s/it]Tuning global sampler:   8%|▊         | 16/200 [03:33<19:34,  6.38s/it]Tuning global sampler:   8%|▊         | 17/200 [03:39<19:20,  6.34s/it]Tuning global sampler:   9%|▉         | 18/200 [03:45<19:07,  6.31s/it]Tuning global sampler:  10%|▉         | 19/200 [03:51<18:57,  6.29s/it]Tuning global sampler:  10%|█         | 20/200 [03:58<18:48,  6.27s/it]Tuning global sampler:  10%|█         | 21/200 [04:04<18:40,  6.26s/it]Tuning global sampler:  11%|█         | 22/200 [04:10<18:31,  6.24s/it]Tuning global sampler:  12%|█▏        | 23/200 [04:16<18:22,  6.23s/it]Tuning global sampler:  12%|█▏        | 24/200 [04:23<18:51,  6.43s/it]Tuning global sampler:  12%|█▎        | 25/200 [04:29<18:22,  6.30s/it]Tuning global sampler:  13%|█▎        | 26/200 [04:35<17:59,  6.20s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:41<17:42,  6.14s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:47<17:28,  6.10s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:53<17:16,  6.06s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:59<17:07,  6.04s/it]Tuning global sampler:  16%|█▌        | 31/200 [05:05<16:58,  6.03s/it]Tuning global sampler:  16%|█▌        | 32/200 [05:11<16:50,  6.02s/it]Tuning global sampler:  16%|█▋        | 33/200 [05:17<16:41,  6.00s/it]Tuning global sampler:  17%|█▋        | 34/200 [05:23<16:33,  5.99s/it]Tuning global sampler:  18%|█▊        | 35/200 [05:29<16:28,  5.99s/it]Tuning global sampler:  18%|█▊        | 36/200 [05:35<16:22,  5.99s/it]Tuning global sampler:  18%|█▊        | 37/200 [05:41<16:16,  5.99s/it]Tuning global sampler:  19%|█▉        | 38/200 [05:47<16:10,  5.99s/it]Tuning global sampler:  20%|█▉        | 39/200 [05:53<16:04,  5.99s/it]Tuning global sampler:  20%|██        | 40/200 [05:59<15:58,  5.99s/it]Tuning global sampler:  20%|██        | 41/200 [06:05<15:52,  5.99s/it]Tuning global sampler:  21%|██        | 42/200 [06:11<15:46,  5.99s/it]Tuning global sampler:  22%|██▏       | 43/200 [06:18<16:22,  6.26s/it]Tuning global sampler:  22%|██▏       | 44/200 [06:24<16:01,  6.17s/it]Tuning global sampler:  22%|██▎       | 45/200 [06:30<15:45,  6.10s/it]Tuning global sampler:  23%|██▎       | 46/200 [06:36<15:34,  6.07s/it]Tuning global sampler:  24%|██▎       | 47/200 [06:42<15:24,  6.04s/it]Tuning global sampler:  24%|██▍       | 48/200 [06:48<15:16,  6.03s/it]Tuning global sampler:  24%|██▍       | 49/200 [06:54<15:08,  6.01s/it]Tuning global sampler:  25%|██▌       | 50/200 [07:00<15:00,  6.01s/it]Tuning global sampler:  26%|██▌       | 51/200 [07:06<14:54,  6.00s/it]Tuning global sampler:  26%|██▌       | 52/200 [07:12<14:47,  6.00s/it]Tuning global sampler:  26%|██▋       | 53/200 [07:18<14:41,  5.99s/it]Tuning global sampler:  27%|██▋       | 54/200 [07:24<14:34,  5.99s/it]Tuning global sampler:  28%|██▊       | 55/200 [07:30<14:26,  5.98s/it]Tuning global sampler:  28%|██▊       | 56/200 [07:36<14:19,  5.97s/it]Tuning global sampler:  28%|██▊       | 57/200 [07:42<14:14,  5.97s/it]Tuning global sampler:  29%|██▉       | 58/200 [07:48<14:09,  5.98s/it]Tuning global sampler:  30%|██▉       | 59/200 [07:54<14:03,  5.98s/it]Tuning global sampler:  30%|███       | 60/200 [08:00<13:58,  5.99s/it]Tuning global sampler:  30%|███       | 61/200 [08:05<13:52,  5.99s/it]Tuning global sampler:  31%|███       | 62/200 [08:12<14:23,  6.26s/it]Tuning global sampler:  32%|███▏      | 63/200 [08:18<14:06,  6.18s/it]Tuning global sampler:  32%|███▏      | 64/200 [08:24<13:53,  6.13s/it]Tuning global sampler:  32%|███▎      | 65/200 [08:30<13:42,  6.09s/it]Tuning global sampler:  33%|███▎      | 66/200 [08:36<13:30,  6.05s/it]Tuning global sampler:  34%|███▎      | 67/200 [08:42<13:21,  6.03s/it]Tuning global sampler:  34%|███▍      | 68/200 [08:48<13:13,  6.01s/it]Tuning global sampler:  34%|███▍      | 69/200 [08:54<13:06,  6.01s/it]Tuning global sampler:  35%|███▌      | 70/200 [09:00<13:00,  6.00s/it]Tuning global sampler:  36%|███▌      | 71/200 [09:06<12:53,  5.99s/it]Tuning global sampler:  36%|███▌      | 72/200 [09:12<12:47,  6.00s/it]Tuning global sampler:  36%|███▋      | 73/200 [09:18<12:41,  6.00s/it]Tuning global sampler:  37%|███▋      | 74/200 [09:24<12:35,  5.99s/it]Tuning global sampler:  38%|███▊      | 75/200 [09:30<12:28,  5.99s/it]Tuning global sampler:  38%|███▊      | 76/200 [09:36<12:23,  5.99s/it]Tuning global sampler:  38%|███▊      | 77/200 [09:42<12:16,  5.99s/it]Tuning global sampler:  39%|███▉      | 78/200 [09:48<12:09,  5.98s/it]Tuning global sampler:  40%|███▉      | 79/200 [09:54<12:04,  5.98s/it]Tuning global sampler:  40%|████      | 80/200 [10:00<11:58,  5.99s/it]Tuning global sampler:  40%|████      | 81/200 [10:06<11:52,  5.99s/it]Tuning global sampler:  41%|████      | 82/200 [10:13<12:20,  6.28s/it]Tuning global sampler:  42%|████▏     | 83/200 [10:19<12:04,  6.19s/it]Tuning global sampler:  42%|████▏     | 84/200 [10:25<11:51,  6.13s/it]Tuning global sampler:  42%|████▎     | 85/200 [10:31<11:40,  6.09s/it]Tuning global sampler:  43%|████▎     | 86/200 [10:37<11:30,  6.06s/it]Tuning global sampler:  44%|████▎     | 87/200 [10:43<11:22,  6.04s/it]Tuning global sampler:  44%|████▍     | 88/200 [10:49<11:13,  6.01s/it]Tuning global sampler:  44%|████▍     | 89/200 [10:55<11:05,  6.00s/it]Tuning global sampler:  45%|████▌     | 90/200 [11:01<10:59,  5.99s/it]Tuning global sampler:  46%|████▌     | 91/200 [11:07<10:52,  5.99s/it]Tuning global sampler:  46%|████▌     | 92/200 [11:13<10:47,  5.99s/it]Tuning global sampler:  46%|████▋     | 93/200 [11:19<10:41,  5.99s/it]Tuning global sampler:  47%|████▋     | 94/200 [11:25<10:36,  6.00s/it]Tuning global sampler:  48%|████▊     | 95/200 [11:31<10:30,  6.01s/it]Tuning global sampler:  48%|████▊     | 96/200 [11:37<10:24,  6.00s/it]Tuning global sampler:  48%|████▊     | 97/200 [11:43<10:18,  6.01s/it]Tuning global sampler:  49%|████▉     | 98/200 [11:49<10:13,  6.01s/it]Tuning global sampler:  50%|████▉     | 99/200 [11:55<10:05,  6.00s/it]Tuning global sampler:  50%|█████     | 100/200 [12:01<09:58,  5.99s/it]Tuning global sampler:  50%|█████     | 101/200 [12:07<09:52,  5.99s/it]Tuning global sampler:  51%|█████     | 102/200 [12:14<10:17,  6.30s/it]Tuning global sampler:  52%|█████▏    | 103/200 [12:20<10:01,  6.20s/it]Tuning global sampler:  52%|█████▏    | 104/200 [12:26<09:48,  6.13s/it]Tuning global sampler:  52%|█████▎    | 105/200 [12:32<09:38,  6.09s/it]Tuning global sampler:  53%|█████▎    | 106/200 [12:38<09:29,  6.06s/it]Tuning global sampler:  54%|█████▎    | 107/200 [12:44<09:21,  6.04s/it]Tuning global sampler:  54%|█████▍    | 108/200 [12:50<09:13,  6.02s/it]Tuning global sampler:  55%|█████▍    | 109/200 [12:56<09:06,  6.01s/it]Tuning global sampler:  55%|█████▌    | 110/200 [13:02<08:59,  5.99s/it]Tuning global sampler:  56%|█████▌    | 111/200 [13:08<08:52,  5.98s/it]Tuning global sampler:  56%|█████▌    | 112/200 [13:14<08:46,  5.98s/it]Tuning global sampler:  56%|█████▋    | 113/200 [13:20<08:40,  5.98s/it]Tuning global sampler:  57%|█████▋    | 114/200 [13:26<08:34,  5.98s/it]Tuning global sampler:  57%|█████▊    | 115/200 [13:32<08:28,  5.98s/it]Tuning global sampler:  58%|█████▊    | 116/200 [13:38<08:22,  5.99s/it]Tuning global sampler:  58%|█████▊    | 117/200 [13:44<08:16,  5.98s/it]Tuning global sampler:  59%|█████▉    | 118/200 [13:50<08:10,  5.99s/it]Tuning global sampler:  60%|█████▉    | 119/200 [13:56<08:05,  5.99s/it]Tuning global sampler:  60%|██████    | 120/200 [14:02<07:59,  6.00s/it]Tuning global sampler:  60%|██████    | 121/200 [14:08<07:52,  5.99s/it]Tuning global sampler:  61%|██████    | 122/200 [14:15<08:11,  6.30s/it]Tuning global sampler:  62%|██████▏   | 123/200 [14:21<07:58,  6.21s/it]Tuning global sampler:  62%|██████▏   | 124/200 [14:27<07:47,  6.15s/it]Tuning global sampler:  62%|██████▎   | 125/200 [14:33<07:38,  6.11s/it]Tuning global sampler:  63%|██████▎   | 126/200 [14:39<07:29,  6.08s/it]Tuning global sampler:  64%|██████▎   | 127/200 [14:45<07:22,  6.06s/it]Tuning global sampler:  64%|██████▍   | 128/200 [14:51<07:14,  6.04s/it]Tuning global sampler:  64%|██████▍   | 129/200 [14:57<07:07,  6.03s/it]Tuning global sampler:  65%|██████▌   | 130/200 [15:03<07:01,  6.02s/it]Tuning global sampler:  66%|██████▌   | 131/200 [15:09<06:55,  6.02s/it]Tuning global sampler:  66%|██████▌   | 132/200 [15:15<06:48,  6.00s/it]Tuning global sampler:  66%|██████▋   | 133/200 [15:21<06:42,  6.00s/it]Tuning global sampler:  67%|██████▋   | 134/200 [15:27<06:36,  6.00s/it]Tuning global sampler:  68%|██████▊   | 135/200 [15:33<06:30,  6.01s/it]Tuning global sampler:  68%|██████▊   | 136/200 [15:39<06:24,  6.01s/it]Tuning global sampler:  68%|██████▊   | 137/200 [15:45<06:18,  6.01s/it]Tuning global sampler:  69%|██████▉   | 138/200 [15:51<06:12,  6.01s/it]Tuning global sampler:  70%|██████▉   | 139/200 [15:57<06:06,  6.01s/it]Tuning global sampler:  70%|███████   | 140/200 [16:03<06:00,  6.01s/it]Tuning global sampler:  70%|███████   | 141/200 [16:09<05:54,  6.01s/it]Tuning global sampler:  71%|███████   | 142/200 [16:16<06:07,  6.33s/it]Tuning global sampler:  72%|███████▏  | 143/200 [16:22<05:54,  6.23s/it]Tuning global sampler:  72%|███████▏  | 144/200 [16:28<05:44,  6.15s/it]Tuning global sampler:  72%|███████▎  | 145/200 [16:34<05:35,  6.11s/it]Tuning global sampler:  73%|███████▎  | 146/200 [16:40<05:28,  6.08s/it]Tuning global sampler:  74%|███████▎  | 147/200 [16:46<05:21,  6.06s/it]Tuning global sampler:  74%|███████▍  | 148/200 [16:52<05:14,  6.04s/it]Tuning global sampler:  74%|███████▍  | 149/200 [16:58<05:07,  6.03s/it]Tuning global sampler:  75%|███████▌  | 150/200 [17:04<05:01,  6.03s/it]Tuning global sampler:  76%|███████▌  | 151/200 [17:10<04:55,  6.02s/it]Tuning global sampler:  76%|███████▌  | 152/200 [17:16<04:49,  6.02s/it]Tuning global sampler:  76%|███████▋  | 153/200 [17:22<04:42,  6.02s/it]Tuning global sampler:  77%|███████▋  | 154/200 [17:28<04:36,  6.01s/it]Tuning global sampler:  78%|███████▊  | 155/200 [17:34<04:29,  6.00s/it]Tuning global sampler:  78%|███████▊  | 156/200 [17:40<04:24,  6.00s/it]Tuning global sampler:  78%|███████▊  | 157/200 [17:46<04:18,  6.01s/it]Tuning global sampler:  79%|███████▉  | 158/200 [17:52<04:12,  6.01s/it]Tuning global sampler:  80%|███████▉  | 159/200 [17:58<04:06,  6.01s/it]Tuning global sampler:  80%|████████  | 160/200 [18:04<04:00,  6.01s/it]Tuning global sampler:  80%|████████  | 161/200 [18:10<03:54,  6.01s/it]Tuning global sampler:  81%|████████  | 162/200 [18:16<03:48,  6.02s/it]Tuning global sampler:  82%|████████▏ | 163/200 [18:23<03:54,  6.34s/it]Tuning global sampler:  82%|████████▏ | 164/200 [18:29<03:44,  6.24s/it]Tuning global sampler:  82%|████████▎ | 165/200 [18:35<03:35,  6.16s/it]Tuning global sampler:  83%|████████▎ | 166/200 [18:41<03:27,  6.11s/it]Tuning global sampler:  84%|████████▎ | 167/200 [18:47<03:20,  6.08s/it]Tuning global sampler:  84%|████████▍ | 168/200 [18:53<03:13,  6.06s/it]Tuning global sampler:  84%|████████▍ | 169/200 [18:59<03:07,  6.04s/it]Tuning global sampler:  85%|████████▌ | 170/200 [19:05<03:01,  6.04s/it]Tuning global sampler:  86%|████████▌ | 171/200 [19:11<02:55,  6.04s/it]Tuning global sampler:  86%|████████▌ | 172/200 [19:17<02:49,  6.04s/it]Tuning global sampler:  86%|████████▋ | 173/200 [19:23<02:43,  6.04s/it]Tuning global sampler:  87%|████████▋ | 174/200 [19:29<02:37,  6.04s/it]Tuning global sampler:  88%|████████▊ | 175/200 [19:35<02:31,  6.04s/it]Tuning global sampler:  88%|████████▊ | 176/200 [19:41<02:24,  6.03s/it]Tuning global sampler:  88%|████████▊ | 177/200 [19:47<02:18,  6.02s/it]Tuning global sampler:  89%|████████▉ | 178/200 [19:53<02:12,  6.02s/it]Tuning global sampler:  90%|████████▉ | 179/200 [19:59<02:06,  6.03s/it]Tuning global sampler:  90%|█████████ | 180/200 [20:05<02:00,  6.03s/it]Tuning global sampler:  90%|█████████ | 181/200 [20:11<01:54,  6.04s/it]Tuning global sampler:  91%|█████████ | 182/200 [20:17<01:48,  6.03s/it]Tuning global sampler:  92%|█████████▏| 183/200 [20:25<01:48,  6.36s/it]Tuning global sampler:  92%|█████████▏| 184/200 [20:31<01:40,  6.26s/it]Tuning global sampler:  92%|█████████▎| 185/200 [20:37<01:32,  6.19s/it]Tuning global sampler:  93%|█████████▎| 186/200 [20:43<01:25,  6.14s/it]Tuning global sampler:  94%|█████████▎| 187/200 [20:49<01:19,  6.09s/it]Tuning global sampler:  94%|█████████▍| 188/200 [20:55<01:12,  6.07s/it]Tuning global sampler:  94%|█████████▍| 189/200 [21:01<01:06,  6.06s/it]Tuning global sampler:  95%|█████████▌| 190/200 [21:07<01:00,  6.05s/it]Tuning global sampler:  96%|█████████▌| 191/200 [21:13<00:54,  6.04s/it]Tuning global sampler:  96%|█████████▌| 192/200 [21:19<00:48,  6.03s/it]Tuning global sampler:  96%|█████████▋| 193/200 [21:25<00:42,  6.03s/it]Tuning global sampler:  97%|█████████▋| 194/200 [21:31<00:36,  6.03s/it]Tuning global sampler:  98%|█████████▊| 195/200 [21:37<00:30,  6.03s/it]Tuning global sampler:  98%|█████████▊| 196/200 [21:43<00:24,  6.02s/it]Tuning global sampler:  98%|█████████▊| 197/200 [21:49<00:18,  6.02s/it]Tuning global sampler:  99%|█████████▉| 198/200 [21:55<00:12,  6.01s/it]Tuning global sampler: 100%|█████████▉| 199/200 [22:01<00:06,  6.00s/it]Tuning global sampler: 100%|██████████| 200/200 [22:07<00:00,  6.01s/it]Tuning global sampler: 100%|██████████| 200/200 [22:07<00:00,  6.64s/it]
Compiling MALA body
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:04<00:43,  4.83s/it]Production run:  20%|██        | 2/10 [00:09<00:38,  4.83s/it]Production run:  30%|███       | 3/10 [00:14<00:33,  4.83s/it]Production run:  40%|████      | 4/10 [00:19<00:28,  4.83s/it]Production run:  50%|█████     | 5/10 [00:24<00:24,  4.83s/it]Production run:  60%|██████    | 6/10 [00:28<00:19,  4.83s/it]Production run:  70%|███████   | 7/10 [00:33<00:14,  4.83s/it]Production run:  80%|████████  | 8/10 [00:38<00:09,  4.83s/it]Production run:  90%|█████████ | 9/10 [00:43<00:04,  4.83s/it]Production run: 100%|██████████| 10/10 [00:48<00:00,  4.83s/it]Production run: 100%|██████████| 10/10 [00:48<00:00,  4.83s/it]
11:57 ninjax INFO    : Saving samples to ./ET/injection_4/results_training.npz
11:57 ninjax INFO    : Saving the NF
11:57 ninjax INFO    : Time taken: 1382.7170646190643 seconds (23.045284410317738 minutes)
11:57 ninjax INFO    : Creating the final corner plot
11:57 ninjax INFO    : Dumping the final production chains
11:57 ninjax INFO    : Chains shape is: (13, 220000)
11:57 ninjax INFO    : Key: M_c: ESS = 9091, Rhat = 1.0678119880143881
11:57 ninjax INFO    : Key: q: ESS = 8193, Rhat = 1.0751142736315484
11:57 ninjax INFO    : Key: s1_z: ESS = 8128, Rhat = 1.0768120099968055
11:57 ninjax INFO    : Key: s2_z: ESS = 10311, Rhat = 1.0602185103714674
11:57 ninjax INFO    : Key: lambda_1: ESS = 8558, Rhat = 1.07243366569444
11:57 ninjax INFO    : Key: lambda_2: ESS = 9080, Rhat = 1.0677085393684096
11:57 ninjax INFO    : Key: cos_iota: ESS = 10527, Rhat = 1.0863289609906397
11:57 ninjax INFO    : Key: d_L: ESS = 6889, Rhat = 1.089902408160814
11:57 ninjax INFO    : Key: t_c: ESS = 4492, Rhat = 1.1476862110637045
11:57 ninjax INFO    : Key: phase_c: ESS = 8699, Rhat = 1.0725180490146962
11:57 ninjax INFO    : Key: psi: ESS = 7621, Rhat = 1.0819044213088829
11:57 ninjax INFO    : Key: ra: ESS = 6806, Rhat = 1.0914769916566993
11:57 ninjax INFO    : Key: sin_dec: ESS = 6312, Rhat = 1.0998438259576033
11:57 ninjax INFO    : Key: eta: ESS = 8193, Rhat = 1.0751142736315484
11:57 ninjax INFO    : Key: iota: ESS = 10527, Rhat = 1.0865468416462967
11:57 ninjax INFO    : Key: dec: ESS = 6312, Rhat = 1.0998438259576033
11:57 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.389 +/- 0.053
q: 0.755 +/- 0.146
s1_z: -0.008 +/- 0.025
s2_z: -0.007 +/- 0.027
lambda_1: 948.376 +/- 1088.269
lambda_2: 1454.682 +/- 1173.547
cos_iota: -0.525 +/- 0.518
d_L: 908.382 +/- 224.284
t_c: -0.058 +/- 0.013
phase_c: 3.054 +/- 1.741
psi: 1.574 +/- 0.873
ra: 2.125 +/- 1.430
sin_dec: -0.406 +/- 0.436
Log probability: 349.611 +/- 146.173
Local acceptance: 0.345 +/- 0.475
Global acceptance: 0.027 +/- 0.163
Max loss: 22.772, Min loss: 0.066
Production summary
==========
M_c: 1.388 +/- 0.000
q: 0.759 +/- 0.124
s1_z: -0.010 +/- 0.025
s2_z: -0.009 +/- 0.026
lambda_1: 491.902 +/- 440.682
lambda_2: 1122.079 +/- 907.345
cos_iota: -0.239 +/- 0.705
d_L: 815.824 +/- 129.365
t_c: -0.057 +/- 0.010
phase_c: 3.113 +/- 1.789
psi: 1.562 +/- 0.860
ra: 2.184 +/- 1.442
sin_dec: -0.341 +/- 0.437
Log probability: 404.519 +/- 2.288
Local acceptance: 0.243 +/- 0.429
Global acceptance: 0.040 +/- 0.196
DONE

JOB STATISTICS
==============
Job ID: 10874068
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:19:40
CPU Efficiency: 4.67% of 07:01:20 core-walltime
Job Wall-clock time: 00:26:20
Memory Utilized: 4.75 GB
Memory Efficiency: 47.49% of 10.00 GB
