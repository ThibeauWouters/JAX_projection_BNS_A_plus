Sat Mar 29 11:32:21 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
11:32 ninjax INFO    : Checking and setting outdir
11:32 ninjax INFO    : Found generation prior file ./ET/injection_8/generation_prior.prior
11:32 ninjax INFO    : The outdir is set to ./ET/injection_8
11:32 ninjax INFO    : Loading the given config
11:32 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
11:32 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'ET', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '2000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
11:32 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/ET/injection_8/complete_config.json
11:32 ninjax INFO    : No seed specified. Generating a random seed: 247757
11:32 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 429735
11:32 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 517018
11:32 ninjax INFO    : Loading the priors
11:32 ninjax INFO    : Setting up the prior
11:32 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
11:32 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
11:32 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
11:32 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
11:32 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
11:32 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
11:32 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
11:32 ninjax INFO    :    dL_prior = PowerLaw(1.0, 1500.0, 2.0, naming=["d_L"])
11:32 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
11:32 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
11:32 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
11:32 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
11:32 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
11:32 ninjax INFO    : Setting up the generation prior
11:32 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_1_source"])
11:32 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_2_source"])
11:32 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
11:32 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
11:32 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
11:32 ninjax INFO    :    dL_prior = PowerLaw(100.0, 1000.0, 2.0, naming=["d_L"])
11:32 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
11:32 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
11:32 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
11:32 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
11:32 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
11:32 ninjax INFO    : Finished prior setup
11:32 ninjax INFO    : Setting the transforms
11:32 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
11:32 ninjax INFO    : transforms_str_list has 3 elements
11:32 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
11:32 ninjax INFO    : Setting the likelihood
11:32 ninjax INFO    : GW likelihood provided, setting up the GW pipe
11:32 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
11:32 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
11:32 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
11:32 ninjax INFO    : self.is_BNS_run is True
11:32 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
11:32 ninjax INFO    : GW run is an injection
11:32 ninjax INFO    : Setting up GW injection . . . 
11:32 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
11:32 ninjax INFO    : Generating new injection
11:32 ninjax INFO    : Sanity check: generated parameters:
11:32 ninjax INFO    : {'mass_1_source': 1.6255556619389342, 'mass_2_source': 1.6734986205942382, 's1_z': 0.010722248185099523, 's2_z': -0.011589557189626107, 'cos_iota': -0.35293563696842156, 'd_L': 854.5757112100138, 't_c': 0.05597874427472599, 'phase_c': 0.33615024592860454, 'psi': 0.05592269902383577, 'ra': 4.99751806462353, 'sin_dec': 0.4028853172539071}
11:32 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
11:32 ninjax INFO    : Injected lambda_1: 76.72071011574333
11:32 ninjax INFO    : Injected lambda_2: 94.66657558317183
11:32 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.7130660336400574 is 128.0
11:32 ninjax INFO    : After transforms, the injection parameters are:
11:32 ninjax INFO    : {'mass_1_source': 1.6734986205942382, 'mass_2_source': 1.6255556619389342, 's1_z': 0.010722248185099523, 's2_z': -0.011589557189626107, 'cos_iota': -0.35293563696842156, 'd_L': 854.5757112100138, 't_c': 0.05597874427472599, 'phase_c': 0.33615024592860454, 'psi': 0.05592269902383577, 'ra': 4.99751806462353, 'sin_dec': 0.4028853172539071, 'q': 0.9713516592931042, 'M_c': 1.7130660336400574, 'eta': 0.24994720281726598, 'iota': Array(1.93150313, dtype=float64, weak_type=True), 'dec': Array(0.41466716, dtype=float64, weak_type=True), 'lambda_1': 76.72071011574333, 'lambda_2': 94.66657558317183}
11:32 ninjax INFO    : The trial injection parameters are {'M_c': 1.7130660336400574, 'eta': 0.24994720281726598, 's1_z': 0.010722248185099523, 's2_z': -0.011589557189626107, 'lambda_1': 76.72071011574333, 'lambda_2': 94.66657558317183, 'd_L': 854.5757112100138, 'phase_c': 0.33615024592860454, 'iota': 1.9315031266512377, 't_c': 0.05597874427472599, 'psi': 0.05592269902383577, 'ra': 4.99751806462353, 'dec': 0.4146671561889746}
11:32 ninjax INFO    : Injecting signals . . .
11:32 ninjax INFO    : self.ifos
11:32 ninjax INFO    : [GroundBased2G(ET1), GroundBased2G(ET2), GroundBased2G(ET3)]
11:32 ninjax INFO    : Signal injected in ifo ET1. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [ 5.84044050e-25-4.26922860e-24j  2.13084364e-24-3.72506345e-25j
 -3.81964301e-24-6.40282583e-25j ...
 -3.59481191e-25-3.87882877e-24j  4.11425820e-24-3.99116624e-24j
  1.39639976e-24+4.66272447e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : Signal injected in ifo ET2. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [-2.12671621e-24-3.44992426e-24j  3.36405908e-24+5.70590408e-25j
 -4.67760947e-25-1.52554198e-24j ...
  2.34567401e-25-6.78592101e-24j -2.71117534e-24+5.24446001e-24j
 -6.33751756e-24-4.58257298e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : Signal injected in ifo ET3. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [-3.15459219e-24+3.12696908e-24j -8.89753882e-26-2.41355530e-24j
  6.73806105e-24+2.60633706e-24j ...
  6.31565511e-24-2.48904317e-24j  4.29204735e-24+2.04700826e-25j
  3.30679249e-24-3.74559073e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : SNR for ifo ET1 is 6.691749113601123
11:32 ninjax INFO    : SNR for ifo ET2 is 7.555680118226945
11:32 ninjax INFO    : SNR for ifo ET3 is 1.5389825567233544
11:32 ninjax INFO    : The network SNR is 10.209616817405545
11:32 ninjax INFO    : The network SNR does not pass the threshold, trying again
11:32 ninjax INFO    : Generating new injection
11:32 ninjax INFO    : Sanity check: generated parameters:
11:32 ninjax INFO    : {'mass_1_source': 1.2997578738547693, 'mass_2_source': 1.9696548607943551, 's1_z': 0.04961305225582957, 's2_z': 0.03507304056743561, 'cos_iota': -0.08237323631054494, 'd_L': 439.24271874002955, 't_c': 0.0442548237922335, 'phase_c': 0.6079967536577469, 'psi': 2.1575572715009925, 'ra': 0.27491248708051286, 'sin_dec': 0.09920910950940476}
11:32 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
11:32 ninjax INFO    : Injected lambda_1: 17.575139568373178
11:32 ninjax INFO    : Injected lambda_2: 409.009218914264
11:32 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.5245930878785308 is 128.0
11:32 ninjax INFO    : After transforms, the injection parameters are:
11:32 ninjax INFO    : {'mass_1_source': 1.9696548607943551, 'mass_2_source': 1.2997578738547693, 's1_z': 0.04961305225582957, 's2_z': 0.03507304056743561, 'cos_iota': -0.08237323631054494, 'd_L': 439.24271874002955, 't_c': 0.0442548237922335, 'phase_c': 0.6079967536577469, 'psi': 2.1575572715009925, 'ra': 0.27491248708051286, 'sin_dec': 0.09920910950940476, 'q': 0.6598911818137424, 'M_c': 1.5245930878785308, 'eta': 0.23950417556206677, 'iota': Array(1.653263, dtype=float64, weak_type=True), 'dec': Array(0.09937258, dtype=float64, weak_type=True), 'lambda_1': 17.575139568373178, 'lambda_2': 409.009218914264}
11:32 ninjax INFO    : The trial injection parameters are {'M_c': 1.5245930878785308, 'eta': 0.23950417556206677, 's1_z': 0.04961305225582957, 's2_z': 0.03507304056743561, 'lambda_1': 17.575139568373178, 'lambda_2': 409.009218914264, 'd_L': 439.24271874002955, 'phase_c': 0.6079967536577469, 'iota': 1.6532630039077396, 't_c': 0.0442548237922335, 'psi': 2.1575572715009925, 'ra': 0.27491248708051286, 'dec': 0.09937257797501026}
11:32 ninjax INFO    : Injecting signals . . .
11:32 ninjax INFO    : self.ifos
11:32 ninjax INFO    : [GroundBased2G(ET1), GroundBased2G(ET2), GroundBased2G(ET3)]
11:32 ninjax INFO    : Signal injected in ifo ET1. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [-1.03234402e-24-5.85345268e-24j -3.22438957e-25+3.03977461e-26j
 -4.84609672e-24+1.45929118e-24j ...
 -3.59333241e-25-3.87722064e-24j  4.11425222e-24-3.98955135e-24j
  1.39623991e-24+4.66433143e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : Signal injected in ifo ET2. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [-4.06441705e-25-2.15702250e-24j  5.62284235e-24-2.05708469e-25j
  8.28452833e-26-3.67933670e-24j ...
  2.34016969e-25-6.78765936e-24j -2.71155760e-24+5.24267713e-24j
 -6.33772817e-24-4.58438415e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : Signal injected in ifo ET3. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [-3.25265809e-24+3.41654131e-24j  1.08962161e-25-2.04643362e-24j
  7.21103728e-24+2.65341057e-24j ...
  6.31602543e-24-2.48901479e-24j  4.29241328e-24+2.04764368e-25j
  3.30715068e-24-3.74549261e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : SNR for ifo ET1 is 24.274533013794233
11:32 ninjax INFO    : SNR for ifo ET2 is 22.188655688248456
11:32 ninjax INFO    : SNR for ifo ET3 is 4.406644098537679
11:32 ninjax INFO    : The network SNR is 33.181439186698995
11:32 ninjax INFO    : Network SNR passes threshold
11:32 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
11:32 ninjax INFO    :    mass_1_source: 1.9696548607943551
11:32 ninjax INFO    :    mass_2_source: 1.2997578738547693
11:32 ninjax INFO    :    s1_z: 0.04961305225582957
11:32 ninjax INFO    :    s2_z: 0.03507304056743561
11:32 ninjax INFO    :    cos_iota: -0.08237323631054494
11:32 ninjax INFO    :    d_L: 439.24271874002955
11:32 ninjax INFO    :    t_c: 0.0442548237922335
11:32 ninjax INFO    :    phase_c: 0.6079967536577469
11:32 ninjax INFO    :    psi: 2.1575572715009925
11:32 ninjax INFO    :    ra: 0.27491248708051286
11:32 ninjax INFO    :    sin_dec: 0.09920910950940476
11:32 ninjax INFO    :    q: 0.6598911818137424
11:32 ninjax INFO    :    M_c: 1.5245930878785308
11:32 ninjax INFO    :    eta: 0.23950417556206677
11:32 ninjax INFO    :    iota: 1.6532630039077396
11:32 ninjax INFO    :    dec: 0.09937257797501026
11:32 ninjax INFO    :    lambda_1: 17.575139568373178
11:32 ninjax INFO    :    lambda_2: 409.009218914264
11:32 ninjax INFO    :    ET1_SNR: 24.274533013794233
11:32 ninjax INFO    :    ET2_SNR: 22.188655688248456
11:32 ninjax INFO    :    ET3_SNR: 4.406644098537679
11:32 ninjax INFO    :    network_SNR: 33.181439186698995
11:32 ninjax INFO    :    epoch: 126.0
11:32 ninjax INFO    :    gmst: 2.7288901910520846
11:32 ninjax INFO    :    duration: 128.0
11:32 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
11:32 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
11:32 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
11:35 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 146.30782532691956 seconds = 2.4384637554486592 minutes
11:35 ninjax INFO    : The priors are not modified after their initialization
11:35 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
11:35 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
11:35 ninjax INFO    : sample: {'M_c': Array([2.17075153, 1.0289335 , 2.03815317], dtype=float64), 'q': Array([0.94247954, 0.89783422, 0.3312486 ], dtype=float64), 's1_z': Array([-0.04476913,  0.00543042, -0.02891182], dtype=float64), 's2_z': Array([-0.04594136,  0.03346899, -0.04527397], dtype=float64), 'lambda_1': Array([3102.1498763 , 1648.73520241, 3476.96253297], dtype=float64), 'lambda_2': Array([4487.20231411, 2116.96492051, 3428.16590059], dtype=float64), 'cos_iota': Array([0.32507638, 0.57669822, 0.81657918], dtype=float64), 'd_L': Array([ 881.47681855, 1181.60064664, 1164.33160236], dtype=float64), 't_c': Array([ 0.04567223, -0.06791148,  0.01321284], dtype=float64), 'phase_c': Array([2.31709692, 1.14196612, 1.75246041], dtype=float64), 'psi': Array([2.64432569, 1.25279953, 0.29856695], dtype=float64), 'ra': Array([2.74872735, 4.56213829, 4.08262682], dtype=float64), 'sin_dec': Array([0.5607815 , 0.20712257, 0.40503719], dtype=float64)}
11:35 ninjax INFO    : log_prob: [-856.92305639  -28.44119084 -571.29470564]
11:35 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 1.9696548607943551, 'mass_2_source': 1.2997578738547693, 's1_z': 0.04961305225582957, 's2_z': 0.03507304056743561, 'cos_iota': -0.08237323631054494, 'd_L': 439.24271874002955, 't_c': 0.0442548237922335, 'phase_c': 0.6079967536577469, 'psi': 2.1575572715009925, 'ra': 0.27491248708051286, 'sin_dec': 0.09920910950940476, 'q': 0.6598911818137424, 'M_c': 1.5245930878785308, 'eta': 0.23950417556206677, 'iota': Array(1.653263, dtype=float64, weak_type=True), 'dec': Array(0.09937258, dtype=float64, weak_type=True), 'lambda_1': 17.575139568373178, 'lambda_2': 409.009218914264, 'ET1_SNR': 24.274533013794233, 'ET2_SNR': 22.188655688248456, 'ET3_SNR': 4.406644098537679, 'network_SNR': 33.181439186698995, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
11:35 ninjax INFO    : log_prob at the injection parameters is: 543.011095123491
11:35 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
11:35 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
11:35 ninjax INFO    : Ninjax setup complete.
11:35 ninjax INFO    : Saving output to ./ET/injection_8/
11:35 ninjax INFO    : Using polynomial learning rate scheduler
11:35 ninjax INFO    : The hyperparameters passed to flowMC and jim are
11:35 ninjax INFO    :    n_loop_training: 200
11:35 ninjax INFO    :    n_loop_production: 10
11:35 ninjax INFO    :    n_local_steps: 100
11:35 ninjax INFO    :    n_global_steps: 1000
11:35 ninjax INFO    :    n_epochs: 25
11:35 ninjax INFO    :    n_chains: 1000
11:35 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x14c09c373a30>
11:35 ninjax INFO    :    max_samples: 50000
11:35 ninjax INFO    :    momentum: 0.9
11:35 ninjax INFO    :    batch_size: 30000
11:35 ninjax INFO    :    use_global: True
11:35 ninjax INFO    :    keep_quantile: 0.0
11:35 ninjax INFO    :    train_thinning: 10
11:35 ninjax INFO    :    output_thinning: 50
11:35 ninjax INFO    :    n_sample_max: 10000
11:35 ninjax INFO    :    num_layers: 10
11:35 ninjax INFO    :    hidden_size: [128, 128]
11:35 ninjax INFO    :    num_bins: 8
11:35 ninjax INFO    :    save_training_chains: False
11:35 ninjax INFO    :    eps_mass_matrix: 1e-05
11:35 ninjax INFO    :    use_scheduler: True
11:35 ninjax INFO    :    use_temperature: False
11:35 ninjax INFO    :    which_temperature_schedule: exponential
11:35 ninjax INFO    :    starting_temperature: 2.0
11:35 ninjax INFO    :    stop_tempering_iteration: 75
11:35 ninjax INFO    :    stopping_criterion_global_acc: 0.1
11:35 ninjax INFO    :    stopping_criterion_loss: -inf
11:35 ninjax INFO    :    nf_model_kwargs: {}
11:35 ninjax INFO    :    local sampler arg not shown (pretty print)
11:35 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[ 6.14004574e-25  1.59421375e-24 -3.69841536e-24 -8.83096426e-25
 -2.30839736e-24  4.23546147e-24 -2.55728878e-24 -1.18797660e-24
 -2.22296934e-24 -1.73032398e-24]
[-4.80714511e-24 -3.27625864e-25 -1.15855084e-25 -4.41894497e-25
 -2.08800749e-25 -2.03954559e-25  1.76697277e-24  3.43298111e-24
 -7.00165911e-24 -5.76655172e-24]
Checking the noise that was generated in inject_signal ifo:
[-2.05087820e-24  3.95100757e-24 -7.08792560e-25 -3.84228248e-24
 -6.09410719e-24  1.16169866e-24  4.42404060e-24  5.64843293e-24
 -1.52342077e-24 -4.15024183e-24]
[-2.84636520e-24  4.11884939e-25 -2.08344984e-24  1.24495657e-24
  4.53142619e-24 -5.45059378e-24 -8.32122701e-25  4.30296407e-24
  3.24692370e-24  1.32733544e-24]
Checking the noise that was generated in inject_signal ifo:
[-3.26040713e-24 -1.38121278e-25  6.85755106e-24  9.69931728e-25
  6.73040972e-25 -2.60323762e-24  2.53074311e-24  4.38258131e-24
 -4.57163836e-24  3.61709401e-24]
[ 3.06250879e-24 -2.29987792e-24  2.63867834e-24  7.58271276e-25
 -5.79055693e-24  2.37431290e-24  7.73462532e-24  4.28513426e-24
 -2.05459490e-24  5.67299214e-24]
Checking the noise that was generated in inject_signal ifo:
[ 6.14004574e-25  1.59421375e-24 -3.69841536e-24 -8.83096426e-25
 -2.30839736e-24  4.23546147e-24 -2.55728878e-24 -1.18797660e-24
 -2.22296934e-24 -1.73032398e-24]
[-4.80714511e-24 -3.27625864e-25 -1.15855084e-25 -4.41894497e-25
 -2.08800749e-25 -2.03954559e-25  1.76697277e-24  3.43298111e-24
 -7.00165911e-24 -5.76655172e-24]
Checking the noise that was generated in inject_signal ifo:
[-2.05087820e-24  3.95100757e-24 -7.08792560e-25 -3.84228248e-24
 -6.09410719e-24  1.16169866e-24  4.42404060e-24  5.64843293e-24
 -1.52342077e-24 -4.15024183e-24]
[-2.84636520e-24  4.11884939e-25 -2.08344984e-24  1.24495657e-24
  4.53142619e-24 -5.45059378e-24 -8.32122701e-25  4.30296407e-24
  3.24692370e-24  1.32733544e-24]
Checking the noise that was generated in inject_signal ifo:
[-3.26040713e-24 -1.38121278e-25  6.85755106e-24  9.69931728e-25
  6.73040972e-25 -2.60323762e-24  2.53074311e-24  4.38258131e-24
 -4.57163836e-24  3.61709401e-24]
[ 3.06250879e-24 -2.29987792e-24  2.63867834e-24  7.58271276e-25
 -5.79055693e-24  2.37431290e-24  7.73462532e-24  4.28513426e-24
 -2.05459490e-24  5.67299214e-24]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.12170910835266113 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 1.9696548607943551, 'mass_2_source': 1.2997578738547693, 's1_z': 0.04961305225582957, 's2_z': 0.03507304056743561, 'cos_iota': -0.08237323631054494, 'd_L': 439.24271874002955, 't_c': 0.0442548237922335, 'phase_c': 0.6079967536577469, 'psi': 2.1575572715009925, 'ra': 0.27491248708051286, 'sin_dec': 0.09920910950940476, 'q': 0.6598911818137424, 'M_c': 1.5245930878785308, 'eta': 0.23950417556206677, 'iota': Array(1.653263, dtype=float64, weak_type=True), 'dec': Array(0.09937258, dtype=float64, weak_type=True), 'lambda_1': 17.575139568373178, 'lambda_2': 409.009218914264, 'ET1_SNR': 24.274533013794233, 'ET2_SNR': 22.188655688248456, 'ET3_SNR': 4.406644098537679, 'network_SNR': 33.181439186698995, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.510230302810669 seconds
Time for h_sky_low and h_sky_center: 5.882917404174805 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 1.215575933456421
Going to compute coefficients . . .
Time for computing coefficients: 108.64793372154236 seconds
Time for computing coefficients: 14.48822546005249 seconds
Time for computing coefficients: 14.893600702285767 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:00<6:39:05, 120.33s/it]Tuning global sampler:   1%|          | 2/200 [02:06<2:55:28, 53.17s/it] Tuning global sampler:   2%|▏         | 3/200 [02:12<1:44:11, 31.73s/it]Tuning global sampler:   2%|▏         | 4/200 [02:18<1:10:45, 21.66s/it]Tuning global sampler:   2%|▎         | 5/200 [02:25<52:17, 16.09s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:32<42:04, 13.01s/it]Tuning global sampler:   4%|▎         | 7/200 [02:38<34:38, 10.77s/it]Tuning global sampler:   4%|▍         | 8/200 [02:44<29:49,  9.32s/it]Tuning global sampler:   4%|▍         | 9/200 [02:50<26:30,  8.33s/it]Tuning global sampler:   5%|▌         | 10/200 [02:56<24:08,  7.62s/it]Tuning global sampler:   6%|▌         | 11/200 [03:02<22:38,  7.19s/it]Tuning global sampler:   6%|▌         | 12/200 [03:09<21:35,  6.89s/it]Tuning global sampler:   6%|▋         | 13/200 [03:15<20:47,  6.67s/it]Tuning global sampler:   7%|▋         | 14/200 [03:21<20:17,  6.54s/it]Tuning global sampler:   8%|▊         | 15/200 [03:27<19:54,  6.46s/it]Tuning global sampler:   8%|▊         | 16/200 [03:34<19:36,  6.39s/it]Tuning global sampler:   8%|▊         | 17/200 [03:40<19:22,  6.35s/it]Tuning global sampler:   9%|▉         | 18/200 [03:46<19:11,  6.33s/it]Tuning global sampler:  10%|▉         | 19/200 [03:52<19:00,  6.30s/it]Tuning global sampler:  10%|█         | 20/200 [03:59<18:51,  6.29s/it]Tuning global sampler:  10%|█         | 21/200 [04:05<18:43,  6.28s/it]Tuning global sampler:  11%|█         | 22/200 [04:12<19:19,  6.52s/it]Tuning global sampler:  12%|█▏        | 23/200 [04:18<18:58,  6.43s/it]Tuning global sampler:  12%|█▏        | 24/200 [04:24<18:30,  6.31s/it]Tuning global sampler:  12%|█▎        | 25/200 [04:30<18:08,  6.22s/it]Tuning global sampler:  13%|█▎        | 26/200 [04:36<17:51,  6.16s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:42<17:37,  6.11s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:48<17:25,  6.08s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:54<17:15,  6.06s/it]Tuning global sampler:  15%|█▌        | 30/200 [05:00<17:07,  6.04s/it]Tuning global sampler:  16%|█▌        | 31/200 [05:06<16:59,  6.03s/it]Tuning global sampler:  16%|█▌        | 32/200 [05:12<16:52,  6.02s/it]Tuning global sampler:  16%|█▋        | 33/200 [05:18<16:43,  6.01s/it]Tuning global sampler:  17%|█▋        | 34/200 [05:24<16:35,  6.00s/it]Tuning global sampler:  18%|█▊        | 35/200 [05:30<16:30,  6.00s/it]Tuning global sampler:  18%|█▊        | 36/200 [05:36<16:24,  6.00s/it]Tuning global sampler:  18%|█▊        | 37/200 [05:42<16:18,  6.00s/it]Tuning global sampler:  19%|█▉        | 38/200 [05:48<16:13,  6.01s/it]Tuning global sampler:  20%|█▉        | 39/200 [05:54<16:07,  6.01s/it]Tuning global sampler:  20%|██        | 40/200 [06:00<16:01,  6.01s/it]Tuning global sampler:  20%|██        | 41/200 [06:07<16:37,  6.28s/it]Tuning global sampler:  21%|██        | 42/200 [06:13<16:18,  6.20s/it]Tuning global sampler:  22%|██▏       | 43/200 [06:19<16:03,  6.14s/it]Tuning global sampler:  22%|██▏       | 44/200 [06:25<15:49,  6.09s/it]Tuning global sampler:  22%|██▎       | 45/200 [06:31<15:38,  6.05s/it]Tuning global sampler:  23%|██▎       | 46/200 [06:37<15:29,  6.04s/it]Tuning global sampler:  24%|██▎       | 47/200 [06:43<15:22,  6.03s/it]Tuning global sampler:  24%|██▍       | 48/200 [06:49<15:15,  6.02s/it]Tuning global sampler:  24%|██▍       | 49/200 [06:55<15:08,  6.02s/it]Tuning global sampler:  25%|██▌       | 50/200 [07:01<15:02,  6.01s/it]Tuning global sampler:  26%|██▌       | 51/200 [07:07<14:56,  6.01s/it]Tuning global sampler:  26%|██▌       | 52/200 [07:13<14:49,  6.01s/it]Tuning global sampler:  26%|██▋       | 53/200 [07:19<14:43,  6.01s/it]Tuning global sampler:  27%|██▋       | 54/200 [07:25<14:37,  6.01s/it]Tuning global sampler:  28%|██▊       | 55/200 [07:31<14:29,  6.00s/it]Tuning global sampler:  28%|██▊       | 56/200 [07:37<14:22,  5.99s/it]Tuning global sampler:  28%|██▊       | 57/200 [07:43<14:16,  5.99s/it]Tuning global sampler:  29%|██▉       | 58/200 [07:49<14:11,  6.00s/it]Tuning global sampler:  30%|██▉       | 59/200 [07:55<14:05,  6.00s/it]Tuning global sampler:  30%|███       | 60/200 [08:02<14:38,  6.27s/it]Tuning global sampler:  30%|███       | 61/200 [08:08<14:20,  6.19s/it]Tuning global sampler:  31%|███       | 62/200 [08:14<14:07,  6.14s/it]Tuning global sampler:  32%|███▏      | 63/200 [08:20<13:55,  6.10s/it]Tuning global sampler:  32%|███▏      | 64/200 [08:26<13:46,  6.08s/it]Tuning global sampler:  32%|███▎      | 65/200 [08:32<13:37,  6.05s/it]Tuning global sampler:  33%|███▎      | 66/200 [08:38<13:27,  6.03s/it]Tuning global sampler:  34%|███▎      | 67/200 [08:44<13:19,  6.01s/it]Tuning global sampler:  34%|███▍      | 68/200 [08:50<13:13,  6.01s/it]Tuning global sampler:  34%|███▍      | 69/200 [08:56<13:07,  6.01s/it]Tuning global sampler:  35%|███▌      | 70/200 [09:02<13:00,  6.01s/it]Tuning global sampler:  36%|███▌      | 71/200 [09:08<12:54,  6.00s/it]Tuning global sampler:  36%|███▌      | 72/200 [09:14<12:49,  6.01s/it]Tuning global sampler:  36%|███▋      | 73/200 [09:20<12:43,  6.01s/it]Tuning global sampler:  37%|███▋      | 74/200 [09:26<12:38,  6.02s/it]Tuning global sampler:  38%|███▊      | 75/200 [09:32<12:32,  6.02s/it]Tuning global sampler:  38%|███▊      | 76/200 [09:38<12:26,  6.02s/it]Tuning global sampler:  38%|███▊      | 77/200 [09:44<12:18,  6.01s/it]Tuning global sampler:  39%|███▉      | 78/200 [09:50<12:11,  6.00s/it]Tuning global sampler:  40%|███▉      | 79/200 [09:57<12:40,  6.29s/it]Tuning global sampler:  40%|████      | 80/200 [10:03<12:24,  6.20s/it]Tuning global sampler:  40%|████      | 81/200 [10:09<12:11,  6.14s/it]Tuning global sampler:  41%|████      | 82/200 [10:15<12:00,  6.10s/it]Tuning global sampler:  42%|████▏     | 83/200 [10:21<11:50,  6.07s/it]Tuning global sampler:  42%|████▏     | 84/200 [10:27<11:42,  6.06s/it]Tuning global sampler:  42%|████▏     | 84/200 [10:33<14:34,  7.54s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:04<00:43,  4.83s/it]Production run:  20%|██        | 2/10 [00:09<00:38,  4.83s/it]Production run:  30%|███       | 3/10 [00:14<00:33,  4.83s/it]Production run:  40%|████      | 4/10 [00:19<00:28,  4.83s/it]Production run:  50%|█████     | 5/10 [00:24<00:24,  4.83s/it]Production run:  60%|██████    | 6/10 [00:28<00:19,  4.83s/it]Production run:  70%|███████   | 7/10 [00:33<00:14,  4.83s/it]Production run:  80%|████████  | 8/10 [00:38<00:09,  4.83s/it]Production run:  90%|█████████ | 9/10 [00:43<00:04,  4.83s/it]Production run: 100%|██████████| 10/10 [00:48<00:00,  4.83s/it]Production run: 100%|██████████| 10/10 [00:48<00:00,  4.83s/it]
11:46 ninjax INFO    : Saving samples to ./ET/injection_8/results_training.npz
11:46 ninjax INFO    : Saving the NF
11:46 ninjax INFO    : Time taken: 689.4194760322571 seconds (11.490324600537617 minutes)
11:46 ninjax INFO    : Creating the final corner plot
11:46 ninjax INFO    : Dumping the final production chains
11:46 ninjax INFO    : Chains shape is: (13, 220000)
11:46 ninjax INFO    : Key: M_c: ESS = 27543, Rhat = 1.0225746616826186
11:46 ninjax INFO    : Key: q: ESS = 38033, Rhat = 1.021731021189109
11:46 ninjax INFO    : Key: s1_z: ESS = 35820, Rhat = 1.0195779942249752
11:46 ninjax INFO    : Key: s2_z: ESS = 34116, Rhat = 1.0232523189788585
11:46 ninjax INFO    : Key: lambda_1: ESS = 30428, Rhat = 1.0205838182746556
11:46 ninjax INFO    : Key: lambda_2: ESS = 30244, Rhat = 1.021801528842088
11:46 ninjax INFO    : Key: cos_iota: ESS = 9147, Rhat = 1.0665713179081597
11:46 ninjax INFO    : Key: d_L: ESS = 9220, Rhat = 1.065437248035384
11:46 ninjax INFO    : Key: t_c: ESS = 12983, Rhat = 1.0458905267953327
11:46 ninjax INFO    : Key: phase_c: ESS = 34695, Rhat = 1.0188363078043239
11:46 ninjax INFO    : Key: psi: ESS = 29012, Rhat = 1.021113503696614
11:46 ninjax INFO    : Key: ra: ESS = 10196, Rhat = 1.0580496378783264
11:46 ninjax INFO    : Key: sin_dec: ESS = 13122, Rhat = 1.044901895749392
11:46 ninjax INFO    : Key: eta: ESS = 38033, Rhat = 1.0222348732159114
11:46 ninjax INFO    : Key: iota: ESS = 9147, Rhat = 1.0665713179081597
11:46 ninjax INFO    : Key: dec: ESS = 13122, Rhat = 1.044901895749392
11:46 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.525 +/- 0.064
q: 0.819 +/- 0.168
s1_z: 0.018 +/- 0.022
s2_z: 0.018 +/- 0.023
lambda_1: 1149.808 +/- 1309.113
lambda_2: 1329.222 +/- 1328.546
cos_iota: -0.609 +/- 0.440
d_L: 798.439 +/- 329.212
t_c: 0.052 +/- 0.016
phase_c: 2.837 +/- 1.683
psi: 1.665 +/- 0.832
ra: 2.693 +/- 1.290
sin_dec: -0.391 +/- 0.396
Log probability: 391.983 +/- 207.630
Local acceptance: 0.528 +/- 0.499
Global acceptance: 0.014 +/- 0.119
Max loss: 22.858, Min loss: 2.899
Production summary
==========
M_c: 1.525 +/- 0.000
q: 0.874 +/- 0.082
s1_z: 0.029 +/- 0.014
s2_z: 0.025 +/- 0.016
lambda_1: 316.821 +/- 209.815
lambda_2: 492.650 +/- 316.813
cos_iota: -0.764 +/- 0.190
d_L: 528.225 +/- 98.847
t_c: 0.056 +/- 0.000
phase_c: 3.075 +/- 1.775
psi: 1.587 +/- 0.884
ra: 2.976 +/- 1.015
sin_dec: -0.557 +/- 0.051
Log probability: 544.172 +/- 2.108
Local acceptance: 0.320 +/- 0.467
Global acceptance: 0.107 +/- 0.310
DONE

JOB STATISTICS
==============
Job ID: 10874072
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:12:10
CPU Efficiency: 5.12% of 03:57:36 core-walltime
Job Wall-clock time: 00:14:51
Memory Utilized: 4.22 GB
Memory Efficiency: 42.18% of 10.00 GB
