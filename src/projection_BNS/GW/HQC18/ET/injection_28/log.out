Sun Mar 30 19:16:33 CEST 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
19:16 ninjax INFO    : Checking and setting outdir
19:16 ninjax INFO    : Found generation prior file ./ET/injection_28/generation_prior.prior
19:16 ninjax INFO    : The outdir is set to ./ET/injection_28
19:16 ninjax INFO    : Loading the given config
19:16 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'ET', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '2000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '75', 'n_loop_production': '30', 'n_local_steps': '500', 'n_global_steps': '1000', 'n_epochs': '50', 'n_chains': '1000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '50000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '30', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'True', 'which_temperature_schedule': 'exponential', 'starting_temperature': '10.0', 'stop_tempering_iteration': '50', 'stopping_criterion_global_acc': '1.0', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
19:16 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/ET/injection_28/complete_config.json
19:16 ninjax INFO    : No seed specified. Generating a random seed: 690846
19:16 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 578793
19:16 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 813828
19:16 ninjax INFO    : Loading the priors
19:16 ninjax INFO    : Setting up the prior
19:16 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
19:16 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
19:16 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
19:16 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
19:16 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
19:16 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
19:16 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
19:16 ninjax INFO    :    dL_prior = PowerLaw(1.0, 1500.0, 2.0, naming=["d_L"])
19:16 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
19:16 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
19:16 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
19:16 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
19:16 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
19:16 ninjax INFO    : Setting up the generation prior
19:16 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_1_source"])
19:16 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_2_source"])
19:16 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
19:16 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
19:16 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
19:16 ninjax INFO    :    dL_prior = PowerLaw(10.0, 800.0, 2.0, naming=["d_L"])
19:16 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
19:16 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
19:16 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
19:16 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
19:16 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
19:16 ninjax INFO    : Finished prior setup
19:16 ninjax INFO    : Setting the transforms
19:16 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
19:16 ninjax INFO    : transforms_str_list has 3 elements
19:16 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
19:16 ninjax INFO    : Setting the likelihood
19:16 ninjax INFO    : GW likelihood provided, setting up the GW pipe
19:16 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
19:16 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
19:16 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
19:16 ninjax INFO    : self.is_BNS_run is True
19:16 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
19:16 ninjax INFO    : GW run is an injection
19:16 ninjax INFO    : Setting up GW injection . . . 
19:16 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
19:16 ninjax INFO    : Generating new injection
19:16 ninjax INFO    : Sanity check: generated parameters:
19:16 ninjax INFO    : {'mass_1_source': 1.9431923222047889, 'mass_2_source': 1.0281017214650254, 's1_z': 0.0005122007889412292, 's2_z': -0.023988462594968386, 'cos_iota': -0.25029164406329585, 'd_L': 186.99147852785288, 't_c': -0.07533972495711955, 'phase_c': 2.000746389050802, 'psi': 0.34178227528353716, 'ra': 4.710923130797267, 'sin_dec': -0.07545537034064909}
19:16 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
19:16 ninjax INFO    : Injected lambda_1: 20.815283800194862
19:16 ninjax INFO    : Injected lambda_2: 1622.9583832168034
19:16 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.2697396891435948 is 256.0
19:16 ninjax INFO    : After transforms, the injection parameters are:
19:16 ninjax INFO    : {'mass_1_source': 1.9431923222047889, 'mass_2_source': 1.0281017214650254, 's1_z': 0.0005122007889412292, 's2_z': -0.023988462594968386, 'cos_iota': -0.25029164406329585, 'd_L': 186.99147852785288, 't_c': -0.07533972495711955, 'phase_c': 2.000746389050802, 'psi': 0.34178227528353716, 'ra': 4.710923130797267, 'sin_dec': -0.07545537034064909, 'q': 0.5290787276776179, 'M_c': 1.2697396891435948, 'eta': 0.2262875224305023, 'iota': Array(1.8237778, dtype=float64, weak_type=True), 'dec': Array(-0.07552716, dtype=float64, weak_type=True), 'lambda_1': 20.815283800194862, 'lambda_2': 1622.9583832168034}
19:16 ninjax INFO    : The trial injection parameters are {'M_c': 1.2697396891435948, 'eta': 0.2262875224305023, 's1_z': 0.0005122007889412292, 's2_z': -0.023988462594968386, 'lambda_1': 20.815283800194862, 'lambda_2': 1622.9583832168034, 'd_L': 186.99147852785288, 'phase_c': 2.000746389050802, 'iota': 1.8237778023485824, 't_c': -0.07533972495711955, 'psi': 0.34178227528353716, 'ra': 4.710923130797267, 'dec': -0.07552715543327437}
19:16 ninjax INFO    : Injecting signals . . .
19:16 ninjax INFO    : self.ifos
19:16 ninjax INFO    : [GroundBased2G(ET1), GroundBased2G(ET2), GroundBased2G(ET3)]
19:16 ninjax INFO    : Signal injected in ifo ET1. Frequencies, data, and PSD:
19:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
19:16 ninjax INFO    : [-1.23761103e-23-8.08209663e-24j -1.27553611e-24+6.10257429e-24j
 -3.53240190e-24-1.28559753e-23j ...
  1.99309494e-24-1.51663753e-24j  4.31095417e-24-5.38200499e-24j
 -2.83724006e-24-9.27745493e-24j]
19:16 ninjax INFO    : [8.83385322e-49 8.83135459e-49 8.82885595e-49 ... 1.23823480e-48
 1.23823937e-48 1.23824395e-48]
19:16 ninjax INFO    : Signal injected in ifo ET2. Frequencies, data, and PSD:
19:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
19:16 ninjax INFO    : [-3.11954666e-24-4.17252466e-24j -1.03316335e-23-7.39191408e-25j
 -9.80655793e-24+6.02324887e-24j ...
 -9.23636686e-24-1.09592801e-23j -1.75731424e-24+7.68388800e-24j
  1.82667449e-24-9.45961819e-24j]
19:16 ninjax INFO    : [8.83385322e-49 8.83135459e-49 8.82885595e-49 ... 1.23823480e-48
 1.23823937e-48 1.23824395e-48]
19:16 ninjax INFO    : Signal injected in ifo ET3. Frequencies, data, and PSD:
19:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
19:16 ninjax INFO    : [-1.72382772e-24-5.21454581e-24j -1.57081158e-26-3.32356726e-25j
 -1.48395531e-23+5.50364645e-24j ...
 -1.57854376e-24-6.87682013e-25j  6.91732209e-24+3.83571789e-25j
  5.46192112e-25+4.76866572e-24j]
19:16 ninjax INFO    : [8.83385322e-49 8.83135459e-49 8.82885595e-49 ... 1.23823480e-48
 1.23823937e-48 1.23824395e-48]
19:16 ninjax INFO    : SNR for ifo ET1 is 19.138311951012184
19:16 ninjax INFO    : SNR for ifo ET2 is 21.90807849920775
19:16 ninjax INFO    : SNR for ifo ET3 is 36.0583973486036
19:16 ninjax INFO    : The network SNR is 46.3297626500664
19:16 ninjax INFO    : Network SNR passes threshold
19:16 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
19:16 ninjax INFO    :    mass_1_source: 1.9431923222047889
19:16 ninjax INFO    :    mass_2_source: 1.0281017214650254
19:16 ninjax INFO    :    s1_z: 0.0005122007889412292
19:16 ninjax INFO    :    s2_z: -0.023988462594968386
19:16 ninjax INFO    :    cos_iota: -0.25029164406329585
19:16 ninjax INFO    :    d_L: 186.99147852785288
19:16 ninjax INFO    :    t_c: -0.07533972495711955
19:16 ninjax INFO    :    phase_c: 2.000746389050802
19:16 ninjax INFO    :    psi: 0.34178227528353716
19:16 ninjax INFO    :    ra: 4.710923130797267
19:16 ninjax INFO    :    sin_dec: -0.07545537034064909
19:16 ninjax INFO    :    q: 0.5290787276776179
19:16 ninjax INFO    :    M_c: 1.2697396891435948
19:16 ninjax INFO    :    eta: 0.2262875224305023
19:16 ninjax INFO    :    iota: 1.8237778023485824
19:16 ninjax INFO    :    dec: -0.07552715543327437
19:16 ninjax INFO    :    lambda_1: 20.815283800194862
19:16 ninjax INFO    :    lambda_2: 1622.9583832168034
19:16 ninjax INFO    :    ET1_SNR: 19.138311951012184
19:16 ninjax INFO    :    ET2_SNR: 21.90807849920775
19:16 ninjax INFO    :    ET3_SNR: 36.0583973486036
19:16 ninjax INFO    :    network_SNR: 46.3297626500664
19:16 ninjax INFO    :    epoch: 254.0
19:16 ninjax INFO    :    gmst: 2.7288901910520846
19:16 ninjax INFO    :    duration: 256.0
19:16 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
19:16 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
19:16 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
19:20 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 211.28501319885254 seconds = 3.5214168866475424 minutes
19:20 ninjax INFO    : The priors are not modified after their initialization
19:20 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
19:20 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
19:20 ninjax INFO    : sample: {'M_c': Array([2.06088627, 2.17887577, 1.66106225], dtype=float64), 'q': Array([0.86018896, 0.78492813, 0.17383772], dtype=float64), 's1_z': Array([-0.01652411, -0.03852378,  0.00530929], dtype=float64), 's2_z': Array([ 0.0302385 ,  0.00624855, -0.03697309], dtype=float64), 'lambda_1': Array([4494.70474948, 1946.71163724,  725.82556116], dtype=float64), 'lambda_2': Array([ 837.98622845, 3578.08721478, 1888.74271823], dtype=float64), 'cos_iota': Array([-0.07439002,  0.4272353 , -0.2282718 ], dtype=float64), 'd_L': Array([1346.08280131, 1127.29572383, 1456.73961409], dtype=float64), 't_c': Array([-0.08175243, -0.02213382, -0.09244468], dtype=float64), 'phase_c': Array([2.19733753, 3.57458968, 5.01187096], dtype=float64), 'psi': Array([0.14849372, 0.45838684, 1.68689093], dtype=float64), 'ra': Array([0.2466934 , 4.41931167, 3.1887755 ], dtype=float64), 'sin_dec': Array([ 0.28004401, -0.56605432, -0.67072698], dtype=float64)}
19:20 ninjax INFO    : log_prob: [ -77.20672706 -191.8738539   -30.52461663]
19:20 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 1.9431923222047889, 'mass_2_source': 1.0281017214650254, 's1_z': 0.0005122007889412292, 's2_z': -0.023988462594968386, 'cos_iota': -0.25029164406329585, 'd_L': 186.99147852785288, 't_c': -0.07533972495711955, 'phase_c': 2.000746389050802, 'psi': 0.34178227528353716, 'ra': 4.710923130797267, 'sin_dec': -0.07545537034064909, 'q': 0.5290787276776179, 'M_c': 1.2697396891435948, 'eta': 0.2262875224305023, 'iota': Array(1.8237778, dtype=float64, weak_type=True), 'dec': Array(-0.07552716, dtype=float64, weak_type=True), 'lambda_1': 20.815283800194862, 'lambda_2': 1622.9583832168034, 'ET1_SNR': 19.138311951012184, 'ET2_SNR': 21.90807849920775, 'ET3_SNR': 36.0583973486036, 'network_SNR': 46.3297626500664, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
19:20 ninjax INFO    : log_prob at the injection parameters is: 1002.0258710251103
19:20 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
19:20 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
19:20 ninjax INFO    : Ninjax setup complete.
19:20 ninjax INFO    : Saving output to ./ET/injection_28/
19:20 ninjax INFO    : Using polynomial learning rate scheduler
19:20 ninjax INFO    : Using temperature scheduler
19:20 ninjax INFO    : Using exponential temperature scheduler
19:20 ninjax INFO    : The hyperparameters passed to flowMC and jim are
19:20 ninjax INFO    :    n_loop_training: 75
19:20 ninjax INFO    :    n_loop_production: 30
19:20 ninjax INFO    :    n_local_steps: 500
19:20 ninjax INFO    :    n_global_steps: 1000
19:20 ninjax INFO    :    n_epochs: 50
19:20 ninjax INFO    :    n_chains: 1000
19:20 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x149cbce976d0>
19:20 ninjax INFO    :    max_samples: 50000
19:20 ninjax INFO    :    momentum: 0.9
19:20 ninjax INFO    :    batch_size: 50000
19:20 ninjax INFO    :    use_global: True
19:20 ninjax INFO    :    keep_quantile: 0.0
19:20 ninjax INFO    :    train_thinning: 10
19:20 ninjax INFO    :    output_thinning: 30
19:20 ninjax INFO    :    n_sample_max: 10000
19:20 ninjax INFO    :    num_layers: 10
19:20 ninjax INFO    :    hidden_size: [128, 128]
19:20 ninjax INFO    :    num_bins: 8
19:20 ninjax INFO    :    save_training_chains: False
19:20 ninjax INFO    :    eps_mass_matrix: 1e-05
19:20 ninjax INFO    :    use_scheduler: True
19:20 ninjax INFO    :    use_temperature: True
19:20 ninjax INFO    :    which_temperature_schedule: exponential
19:20 ninjax INFO    :    starting_temperature: 10.0
19:20 ninjax INFO    :    stop_tempering_iteration: 50
19:20 ninjax INFO    :    stopping_criterion_global_acc: 1.0
19:20 ninjax INFO    :    stopping_criterion_loss: -inf
19:20 ninjax INFO    :    nf_model_kwargs: {}
19:20 ninjax INFO    :    local sampler arg not shown (pretty print)
19:20 ninjax INFO    :    temperature_scheduler: <function exponential_decay.<locals>.schedule at 0x149cbce977f0>
19:20 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-1.08662716e-23 -2.37038013e-24 -3.21988276e-24  1.50387128e-24
 -7.38505906e-24 -1.79005940e-24 -5.35478635e-24 -8.28626522e-24
 -1.66635406e-25 -4.93728070e-24]
[-7.79589662e-24  5.02472528e-24 -1.13520827e-23 -6.97413302e-25
 -4.17831773e-24  2.67767961e-24 -2.73254682e-25  6.49925502e-24
 -6.15261042e-24 -9.75907775e-24]
Checking the noise that was generated in inject_signal ifo:
[-2.46942993e-24 -9.96208982e-24 -1.10679336e-23  8.15304666e-25
  7.64137839e-24  4.16256342e-24  8.29555551e-24  5.56252654e-24
 -4.19402504e-24  6.12052527e-24]
[-2.53793904e-24 -2.45865128e-24  7.24824685e-24  8.74220638e-24
 -1.60041505e-24 -3.65254905e-24 -1.22216053e-24  1.61165594e-25
  4.46408371e-24 -6.52866707e-24]
Checking the noise that was generated in inject_signal ifo:
[-3.89305772e-24  7.19037778e-25 -1.38971318e-23  4.88003502e-24
  6.94854883e-24  1.13203837e-23 -3.36463306e-24  2.05378962e-24
 -4.51170583e-24  7.32286862e-24]
[-7.13220312e-24  2.46751433e-24  2.76738346e-24  2.25742582e-24
 -9.15802967e-24 -6.77948358e-24  4.26468380e-24 -1.35312636e-25
 -1.04449916e-24  1.36207299e-25]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.19059300422668457 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 1.9431923222047889, 'mass_2_source': 1.0281017214650254, 's1_z': 0.0005122007889412292, 's2_z': -0.023988462594968386, 'cos_iota': -0.25029164406329585, 'd_L': 186.99147852785288, 't_c': -0.07533972495711955, 'phase_c': 2.000746389050802, 'psi': 0.34178227528353716, 'ra': 4.710923130797267, 'sin_dec': -0.07545537034064909, 'q': 0.5290787276776179, 'M_c': 1.2697396891435948, 'eta': 0.2262875224305023, 'iota': Array(1.8237778, dtype=float64, weak_type=True), 'dec': Array(-0.07552716, dtype=float64, weak_type=True), 'lambda_1': 20.815283800194862, 'lambda_2': 1622.9583832168034, 'ET1_SNR': 19.138311951012184, 'ET2_SNR': 21.90807849920775, 'ET3_SNR': 36.0583973486036, 'network_SNR': 46.3297626500664, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5035250186920166 seconds
Time for h_sky_low and h_sky_center: 6.014835357666016 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 1.3958964347839355
Going to compute coefficients . . .
Time for computing coefficients: 174.0781533718109 seconds
Time for computing coefficients: 14.293018817901611 seconds
Time for computing coefficients: 14.278513193130493 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/75 [00:00<?, ?it/s]Tuning global sampler:   1%|▏         | 1/75 [02:13<2:44:44, 133.57s/it]Tuning global sampler:   3%|▎         | 2/75 [02:28<1:17:44, 63.89s/it] Tuning global sampler:   4%|▍         | 3/75 [02:43<49:54, 41.59s/it]  Tuning global sampler:   5%|▌         | 4/75 [02:58<36:45, 31.06s/it]Tuning global sampler:   7%|▋         | 5/75 [03:13<29:30, 25.30s/it]Tuning global sampler:   8%|▊         | 6/75 [03:28<25:03, 21.79s/it]Tuning global sampler:   9%|▉         | 7/75 [03:43<22:12, 19.59s/it]Tuning global sampler:  11%|█         | 8/75 [03:58<20:16, 18.16s/it]Tuning global sampler:  12%|█▏        | 9/75 [04:14<19:14, 17.49s/it]Tuning global sampler:  13%|█▎        | 10/75 [04:29<18:08, 16.74s/it]Tuning global sampler:  15%|█▍        | 11/75 [04:44<17:15, 16.17s/it]Tuning global sampler:  16%|█▌        | 12/75 [04:59<16:32, 15.76s/it]Tuning global sampler:  17%|█▋        | 13/75 [05:14<15:59, 15.47s/it]Tuning global sampler:  19%|█▊        | 14/75 [05:29<15:32, 15.28s/it]Tuning global sampler:  20%|██        | 15/75 [05:44<15:08, 15.14s/it]Tuning global sampler:  21%|██▏       | 16/75 [05:58<14:47, 15.05s/it]Tuning global sampler:  23%|██▎       | 17/75 [06:13<14:29, 14.99s/it]Tuning global sampler:  24%|██▍       | 18/75 [06:28<14:11, 14.94s/it]Tuning global sampler:  25%|██▌       | 19/75 [06:43<13:54, 14.91s/it]Tuning global sampler:  27%|██▋       | 20/75 [06:59<13:54, 15.18s/it]Tuning global sampler:  28%|██▊       | 21/75 [07:14<13:34, 15.08s/it]Tuning global sampler:  29%|██▉       | 22/75 [07:28<13:15, 15.00s/it]Tuning global sampler:  31%|███       | 23/75 [07:43<12:58, 14.97s/it]Tuning global sampler:  32%|███▏      | 24/75 [07:58<12:41, 14.93s/it]Tuning global sampler:  33%|███▎      | 25/75 [08:13<12:25, 14.90s/it]Tuning global sampler:  35%|███▍      | 26/75 [08:28<12:09, 14.89s/it]Tuning global sampler:  36%|███▌      | 27/75 [08:43<11:53, 14.87s/it]Tuning global sampler:  37%|███▋      | 28/75 [08:58<11:38, 14.86s/it]Tuning global sampler:  39%|███▊      | 29/75 [09:12<11:23, 14.87s/it]Tuning global sampler:  40%|████      | 30/75 [09:27<11:08, 14.85s/it]Tuning global sampler:  41%|████▏     | 31/75 [09:42<10:53, 14.84s/it]Tuning global sampler:  43%|████▎     | 32/75 [09:58<10:50, 15.13s/it]Tuning global sampler:  44%|████▍     | 33/75 [10:13<10:31, 15.04s/it]Tuning global sampler:  45%|████▌     | 34/75 [10:27<10:13, 14.97s/it]Tuning global sampler:  47%|████▋     | 35/75 [10:42<09:57, 14.94s/it]Tuning global sampler:  48%|████▊     | 36/75 [10:57<09:40, 14.90s/it]Tuning global sampler:  49%|████▉     | 37/75 [11:12<09:24, 14.87s/it]Tuning global sampler:  51%|█████     | 38/75 [11:27<09:10, 14.87s/it]Tuning global sampler:  52%|█████▏    | 39/75 [11:42<08:54, 14.85s/it]Tuning global sampler:  53%|█████▎    | 40/75 [11:56<08:39, 14.84s/it]Tuning global sampler:  55%|█████▍    | 41/75 [12:11<08:24, 14.84s/it]Tuning global sampler:  56%|█████▌    | 42/75 [12:26<08:09, 14.83s/it]Tuning global sampler:  57%|█████▋    | 43/75 [12:42<08:03, 15.12s/it]Tuning global sampler:  59%|█████▊    | 44/75 [12:57<07:46, 15.04s/it]Tuning global sampler:  60%|██████    | 45/75 [13:12<07:29, 14.97s/it]Tuning global sampler:  61%|██████▏   | 46/75 [13:26<07:12, 14.92s/it]Tuning global sampler:  63%|██████▎   | 47/75 [13:41<06:57, 14.90s/it]Tuning global sampler:  64%|██████▍   | 48/75 [13:56<06:41, 14.87s/it]Tuning global sampler:  65%|██████▌   | 49/75 [14:11<06:26, 14.86s/it]Tuning global sampler:  67%|██████▋   | 50/75 [14:26<06:11, 14.85s/it]Tuning global sampler:  68%|██████▊   | 51/75 [14:40<05:56, 14.84s/it]Tuning global sampler:  69%|██████▉   | 52/75 [14:55<05:41, 14.83s/it]Tuning global sampler:  71%|███████   | 53/75 [15:10<05:26, 14.84s/it]Tuning global sampler:  72%|███████▏  | 54/75 [15:25<05:11, 14.83s/it]Tuning global sampler:  73%|███████▎  | 55/75 [15:41<05:02, 15.13s/it]Tuning global sampler:  75%|███████▍  | 56/75 [15:56<04:45, 15.05s/it]Tuning global sampler:  76%|███████▌  | 57/75 [16:10<04:29, 14.97s/it]Tuning global sampler:  77%|███████▋  | 58/75 [16:25<04:13, 14.92s/it]Tuning global sampler:  79%|███████▊  | 59/75 [16:40<03:58, 14.90s/it]Tuning global sampler:  80%|████████  | 60/75 [16:55<03:43, 14.87s/it]Tuning global sampler:  81%|████████▏ | 61/75 [17:10<03:27, 14.85s/it]Tuning global sampler:  83%|████████▎ | 62/75 [17:25<03:13, 14.86s/it]Tuning global sampler:  84%|████████▍ | 63/75 [17:39<02:58, 14.84s/it]Tuning global sampler:  85%|████████▌ | 64/75 [17:54<02:43, 14.83s/it]Tuning global sampler:  87%|████████▋ | 65/75 [18:09<02:28, 14.84s/it]Tuning global sampler:  88%|████████▊ | 66/75 [18:25<02:16, 15.14s/it]Tuning global sampler:  89%|████████▉ | 67/75 [18:40<02:00, 15.04s/it]Tuning global sampler:  91%|█████████ | 68/75 [18:55<01:44, 14.98s/it]Tuning global sampler:  92%|█████████▏| 69/75 [19:09<01:29, 14.93s/it]Tuning global sampler:  93%|█████████▎| 70/75 [19:24<01:14, 14.89s/it]Tuning global sampler:  95%|█████████▍| 71/75 [19:39<00:59, 14.88s/it]Tuning global sampler:  96%|█████████▌| 72/75 [19:54<00:44, 14.86s/it]Tuning global sampler:  97%|█████████▋| 73/75 [20:09<00:29, 14.84s/it]Tuning global sampler:  99%|█████████▊| 74/75 [20:23<00:14, 14.84s/it]Tuning global sampler: 100%|██████████| 75/75 [20:38<00:00, 14.83s/it]Tuning global sampler: 100%|██████████| 75/75 [20:38<00:00, 16.52s/it]
Compiling MALA body
Starting Production run
Production run:   0%|          | 0/30 [00:00<?, ?it/s]Production run:   3%|▎         | 1/30 [00:12<06:01, 12.47s/it]Production run:   7%|▋         | 2/30 [00:24<05:48, 12.45s/it]Production run:  10%|█         | 3/30 [00:37<05:35, 12.44s/it]Production run:  13%|█▎        | 4/30 [00:49<05:23, 12.43s/it]Production run:  17%|█▋        | 5/30 [01:02<05:10, 12.43s/it]Production run:  20%|██        | 6/30 [01:14<04:58, 12.43s/it]Production run:  23%|██▎       | 7/30 [01:27<04:45, 12.43s/it]Production run:  27%|██▋       | 8/30 [01:39<04:33, 12.43s/it]Production run:  30%|███       | 9/30 [01:51<04:20, 12.43s/it]Production run:  33%|███▎      | 10/30 [02:04<04:08, 12.43s/it]Production run:  37%|███▋      | 11/30 [02:16<03:56, 12.43s/it]Production run:  40%|████      | 12/30 [02:29<03:43, 12.43s/it]Production run:  43%|████▎     | 13/30 [02:41<03:31, 12.43s/it]Production run:  47%|████▋     | 14/30 [02:54<03:18, 12.43s/it]Production run:  50%|█████     | 15/30 [03:06<03:06, 12.43s/it]Production run:  53%|█████▎    | 16/30 [03:18<02:53, 12.43s/it]Production run:  57%|█████▋    | 17/30 [03:31<02:41, 12.43s/it]Production run:  60%|██████    | 18/30 [03:43<02:29, 12.43s/it]Production run:  63%|██████▎   | 19/30 [03:56<02:16, 12.43s/it]Production run:  67%|██████▋   | 20/30 [04:08<02:04, 12.43s/it]Production run:  70%|███████   | 21/30 [04:21<01:51, 12.43s/it]Production run:  73%|███████▎  | 22/30 [04:33<01:39, 12.43s/it]Production run:  77%|███████▋  | 23/30 [04:45<01:26, 12.43s/it]Production run:  80%|████████  | 24/30 [04:58<01:14, 12.43s/it]Production run:  83%|████████▎ | 25/30 [05:10<01:02, 12.43s/it]Production run:  87%|████████▋ | 26/30 [05:23<00:49, 12.43s/it]Production run:  90%|█████████ | 27/30 [05:35<00:37, 12.43s/it]Production run:  93%|█████████▎| 28/30 [05:48<00:24, 12.43s/it]Production run:  97%|█████████▋| 29/30 [06:00<00:12, 12.43s/it]Production run: 100%|██████████| 30/30 [06:12<00:00, 12.43s/it]Production run: 100%|██████████| 30/30 [06:12<00:00, 12.43s/it]
19:47 ninjax INFO    : Saving samples to ./ET/injection_28/results_training.npz
19:47 ninjax INFO    : Saving the NF
19:47 ninjax INFO    : Time taken: 1618.5188817977905 seconds (26.97531469662984 minutes)
19:47 ninjax INFO    : Creating the final corner plot
19:47 ninjax INFO    : Dumping the final production chains
19:47 ninjax INFO    : Chains shape is: (13, 1530000)
19:47 ninjax INFO    : Key: M_c: ESS = 13792, Rhat = 1.0458198892804151
19:47 ninjax INFO    : Key: q: ESS = 13818, Rhat = 1.0439889638961757
19:47 ninjax INFO    : Key: s1_z: ESS = 13416, Rhat = 1.0467791123024384
19:47 ninjax INFO    : Key: s2_z: ESS = 13350, Rhat = 1.045070577632841
19:47 ninjax INFO    : Key: lambda_1: ESS = 11539, Rhat = 1.0533256260157986
19:47 ninjax INFO    : Key: lambda_2: ESS = 13222, Rhat = 1.0449914060668444
19:47 ninjax INFO    : Key: cos_iota: ESS = 62873, Rhat = 1.074650567430511
19:47 ninjax INFO    : Key: d_L: ESS = 7595, Rhat = 1.0797543608725895
19:47 ninjax INFO    : Key: t_c: ESS = 5705, Rhat = 1.1090210462996568
19:47 ninjax INFO    : Key: phase_c: ESS = 16120, Rhat = 1.0366690420193634
19:47 ninjax INFO    : Key: psi: ESS = 8921, Rhat = 1.0748407077734474
19:47 ninjax INFO    : Key: ra: ESS = 6252, Rhat = 1.0994841021019286
19:47 ninjax INFO    : Key: sin_dec: ESS = 5346, Rhat = 1.116971924698328
19:47 ninjax INFO    : Key: eta: ESS = 13818, Rhat = 1.0439889638961757
19:47 ninjax INFO    : Key: iota: ESS = 62873, Rhat = 1.0747643466855725
19:47 ninjax INFO    : Key: dec: ESS = 5346, Rhat = 1.116971924698328
19:47 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.287 +/- 0.132
q: 0.582 +/- 0.135
s1_z: -0.012 +/- 0.027
s2_z: -0.011 +/- 0.028
lambda_1: 1107.510 +/- 1437.938
lambda_2: 1673.244 +/- 1299.325
cos_iota: 0.153 +/- 0.675
d_L: 620.048 +/- 385.553
t_c: -0.062 +/- 0.026
phase_c: 3.089 +/- 1.740
psi: 1.728 +/- 0.952
ra: 2.885 +/- 1.046
sin_dec: -0.400 +/- 0.466
Log probability: 533.991 +/- 412.624
Local acceptance: 0.323 +/- 0.467
Global acceptance: 0.033 +/- 0.179
Max loss: 22.764, Min loss: -3.246
Production summary
==========
M_c: 1.270 +/- 0.000
q: 0.556 +/- 0.052
s1_z: -0.017 +/- 0.024
s2_z: -0.010 +/- 0.027
lambda_1: 157.154 +/- 108.284
lambda_2: 951.037 +/- 606.687
cos_iota: 0.054 +/- 0.684
d_L: 368.723 +/- 61.055
t_c: -0.066 +/- 0.008
phase_c: 3.070 +/- 1.794
psi: 1.686 +/- 0.960
ra: 2.759 +/- 0.152
sin_dec: -0.441 +/- 0.470
Log probability: 1001.478 +/- 2.211
Local acceptance: 0.034 +/- 0.180
Global acceptance: 0.036 +/- 0.186
DONE

JOB STATISTICS
==============
Job ID: 10885693
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:28:37
CPU Efficiency: 5.65% of 08:26:56 core-walltime
Job Wall-clock time: 00:31:41
Memory Utilized: 5.12 GB
Memory Efficiency: 51.16% of 10.00 GB
