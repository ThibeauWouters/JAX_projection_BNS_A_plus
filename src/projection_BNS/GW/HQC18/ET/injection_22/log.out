Sun Mar 30 19:16:35 CEST 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
19:16 ninjax INFO    : Checking and setting outdir
19:16 ninjax INFO    : Found generation prior file ./ET/injection_22/generation_prior.prior
19:16 ninjax INFO    : The outdir is set to ./ET/injection_22
19:16 ninjax INFO    : Loading the given config
19:16 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'ET', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '2000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '75', 'n_loop_production': '30', 'n_local_steps': '500', 'n_global_steps': '1000', 'n_epochs': '50', 'n_chains': '1000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '50000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '30', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'True', 'which_temperature_schedule': 'exponential', 'starting_temperature': '10.0', 'stop_tempering_iteration': '50', 'stopping_criterion_global_acc': '1.0', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
19:16 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/ET/injection_22/complete_config.json
19:16 ninjax INFO    : No seed specified. Generating a random seed: 160795
19:16 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 738996
19:16 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 879347
19:16 ninjax INFO    : Loading the priors
19:16 ninjax INFO    : Setting up the prior
19:16 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
19:16 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
19:16 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
19:16 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
19:16 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
19:16 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
19:16 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
19:16 ninjax INFO    :    dL_prior = PowerLaw(1.0, 1500.0, 2.0, naming=["d_L"])
19:16 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
19:16 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
19:16 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
19:16 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
19:16 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
19:16 ninjax INFO    : Setting up the generation prior
19:16 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_1_source"])
19:16 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_2_source"])
19:16 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
19:16 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
19:16 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
19:16 ninjax INFO    :    dL_prior = PowerLaw(10.0, 800.0, 2.0, naming=["d_L"])
19:16 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
19:16 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
19:16 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
19:16 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
19:16 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
19:16 ninjax INFO    : Finished prior setup
19:16 ninjax INFO    : Setting the transforms
19:16 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
19:16 ninjax INFO    : transforms_str_list has 3 elements
19:16 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
19:16 ninjax INFO    : Setting the likelihood
19:16 ninjax INFO    : GW likelihood provided, setting up the GW pipe
19:16 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
19:16 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
19:16 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
19:16 ninjax INFO    : self.is_BNS_run is True
19:16 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
19:16 ninjax INFO    : GW run is an injection
19:16 ninjax INFO    : Setting up GW injection . . . 
19:16 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
19:16 ninjax INFO    : Generating new injection
19:16 ninjax INFO    : Sanity check: generated parameters:
19:16 ninjax INFO    : {'mass_1_source': 1.0858690938772646, 'mass_2_source': 1.5211919523954474, 's1_z': -0.004373768821056466, 's2_z': -0.0061275130369101705, 'cos_iota': -0.8049979195665959, 'd_L': 755.9914185560916, 't_c': 0.01735114226539483, 'phase_c': 4.357049362242216, 'psi': 2.5156606707632214, 'ra': 6.043688329951075, 'sin_dec': -0.5074141247882826}
19:16 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
19:16 ninjax INFO    : Injected lambda_1: 149.6141949447238
19:16 ninjax INFO    : Injected lambda_2: 1187.8041494979611
19:16 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.3062826905707103 is 256.0
19:16 ninjax INFO    : After transforms, the injection parameters are:
19:16 ninjax INFO    : {'mass_1_source': 1.5211919523954474, 'mass_2_source': 1.0858690938772646, 's1_z': -0.004373768821056466, 's2_z': -0.0061275130369101705, 'cos_iota': -0.8049979195665959, 'd_L': 755.9914185560916, 't_c': 0.01735114226539483, 'phase_c': 4.357049362242216, 'psi': 2.5156606707632214, 'ra': 6.043688329951075, 'sin_dec': -0.5074141247882826, 'q': 0.7138277928484487, 'M_c': 1.3062826905707103, 'eta': 0.24302955424203904, 'iota': Array(2.50646829, dtype=float64, weak_type=True), 'dec': Array(-0.53218124, dtype=float64, weak_type=True), 'lambda_1': 149.6141949447238, 'lambda_2': 1187.8041494979611}
19:16 ninjax INFO    : The trial injection parameters are {'M_c': 1.3062826905707103, 'eta': 0.24302955424203904, 's1_z': -0.004373768821056466, 's2_z': -0.0061275130369101705, 'lambda_1': 149.6141949447238, 'lambda_2': 1187.8041494979611, 'd_L': 755.9914185560916, 'phase_c': 4.357049362242216, 'iota': 2.506468288320776, 't_c': 0.01735114226539483, 'psi': 2.5156606707632214, 'ra': 6.043688329951075, 'dec': -0.532181238138682}
19:16 ninjax INFO    : Injecting signals . . .
19:16 ninjax INFO    : self.ifos
19:16 ninjax INFO    : [GroundBased2G(ET1), GroundBased2G(ET2), GroundBased2G(ET3)]
19:16 ninjax INFO    : Signal injected in ifo ET1. Frequencies, data, and PSD:
19:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
19:16 ninjax INFO    : [ 3.31827990e-24+5.96959743e-25j -1.19414617e-23-8.31894744e-25j
  9.57483984e-24-4.54295515e-24j ...
 -5.31588117e-24-1.25476383e-23j -3.64593460e-24-4.86023620e-24j
 -2.70346603e-24+1.41402310e-25j]
19:16 ninjax INFO    : [8.83385322e-49 8.83135459e-49 8.82885595e-49 ... 1.23823480e-48
 1.23823937e-48 1.23824395e-48]
19:16 ninjax INFO    : Signal injected in ifo ET2. Frequencies, data, and PSD:
19:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
19:16 ninjax INFO    : [-7.32844982e-24+1.01591403e-24j  9.75007440e-24+9.80357101e-24j
 -9.85016520e-24-4.09420699e-24j ...
 -1.11633944e-24-2.65975170e-24j  3.03124499e-25+7.32736728e-24j
 -3.15540470e-24-2.45944089e-25j]
19:16 ninjax INFO    : [8.83385322e-49 8.83135459e-49 8.82885595e-49 ... 1.23823480e-48
 1.23823937e-48 1.23824395e-48]
19:16 ninjax INFO    : Signal injected in ifo ET3. Frequencies, data, and PSD:
19:16 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
19:16 ninjax INFO    : [-5.39053047e-24-8.17292349e-26j -4.97229582e-24+6.61234343e-24j
 -4.82382618e-26-5.00006352e-24j ...
 -3.53465534e-24-1.70119796e-23j  5.24393800e-24-4.04309401e-24j
 -1.07225741e-23-1.76313619e-24j]
19:16 ninjax INFO    : [8.83385322e-49 8.83135459e-49 8.82885595e-49 ... 1.23823480e-48
 1.23823937e-48 1.23824395e-48]
19:16 ninjax INFO    : SNR for ifo ET1 is 33.6407026486057
19:16 ninjax INFO    : SNR for ifo ET2 is 33.117775809383495
19:16 ninjax INFO    : SNR for ifo ET3 is 33.04367762346814
19:16 ninjax INFO    : The network SNR is 57.62263947561048
19:16 ninjax INFO    : Network SNR passes threshold
19:16 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
19:16 ninjax INFO    :    mass_1_source: 1.5211919523954474
19:16 ninjax INFO    :    mass_2_source: 1.0858690938772646
19:16 ninjax INFO    :    s1_z: -0.004373768821056466
19:16 ninjax INFO    :    s2_z: -0.0061275130369101705
19:16 ninjax INFO    :    cos_iota: -0.8049979195665959
19:16 ninjax INFO    :    d_L: 755.9914185560916
19:16 ninjax INFO    :    t_c: 0.01735114226539483
19:16 ninjax INFO    :    phase_c: 4.357049362242216
19:16 ninjax INFO    :    psi: 2.5156606707632214
19:16 ninjax INFO    :    ra: 6.043688329951075
19:16 ninjax INFO    :    sin_dec: -0.5074141247882826
19:16 ninjax INFO    :    q: 0.7138277928484487
19:16 ninjax INFO    :    M_c: 1.3062826905707103
19:16 ninjax INFO    :    eta: 0.24302955424203904
19:16 ninjax INFO    :    iota: 2.506468288320776
19:16 ninjax INFO    :    dec: -0.532181238138682
19:16 ninjax INFO    :    lambda_1: 149.6141949447238
19:16 ninjax INFO    :    lambda_2: 1187.8041494979611
19:16 ninjax INFO    :    ET1_SNR: 33.6407026486057
19:16 ninjax INFO    :    ET2_SNR: 33.117775809383495
19:16 ninjax INFO    :    ET3_SNR: 33.04367762346814
19:16 ninjax INFO    :    network_SNR: 57.62263947561048
19:16 ninjax INFO    :    epoch: 254.0
19:16 ninjax INFO    :    gmst: 2.7288901910520846
19:16 ninjax INFO    :    duration: 256.0
19:16 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
19:16 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
19:16 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
19:20 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 213.04485511779785 seconds = 3.550747585296631 minutes
19:20 ninjax INFO    : The priors are not modified after their initialization
19:20 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
19:20 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
19:20 ninjax INFO    : sample: {'M_c': Array([2.35197867, 2.26827079, 1.43030395], dtype=float64), 'q': Array([0.27449458, 0.51676902, 0.76119339], dtype=float64), 's1_z': Array([-0.01862765,  0.04065878,  0.03225244], dtype=float64), 's2_z': Array([-0.00502873,  0.01025252,  0.0455772 ], dtype=float64), 'lambda_1': Array([ 501.3175685 , 3356.40703276,  986.5192242 ], dtype=float64), 'lambda_2': Array([4563.65453398, 1678.44672586, 2650.50480976], dtype=float64), 'cos_iota': Array([ 0.21762287,  0.66418832, -0.39527775], dtype=float64), 'd_L': Array([ 242.05215798, 1459.7846504 , 1031.50703572], dtype=float64), 't_c': Array([ 0.06737964, -0.03775497, -0.02971818], dtype=float64), 'phase_c': Array([2.75440592, 5.58221477, 1.73411138], dtype=float64), 'psi': Array([1.19023057, 1.13854786, 0.41908045], dtype=float64), 'ra': Array([0.29410429, 3.54795862, 2.29642233], dtype=float64), 'sin_dec': Array([ 0.02527485,  0.37982714, -0.37115617], dtype=float64)}
19:20 ninjax INFO    : log_prob: [-3992.46103716  -553.41795317  -113.86653892]
19:20 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 1.5211919523954474, 'mass_2_source': 1.0858690938772646, 's1_z': -0.004373768821056466, 's2_z': -0.0061275130369101705, 'cos_iota': -0.8049979195665959, 'd_L': 755.9914185560916, 't_c': 0.01735114226539483, 'phase_c': 4.357049362242216, 'psi': 2.5156606707632214, 'ra': 6.043688329951075, 'sin_dec': -0.5074141247882826, 'q': 0.7138277928484487, 'M_c': 1.3062826905707103, 'eta': 0.24302955424203904, 'iota': Array(2.50646829, dtype=float64, weak_type=True), 'dec': Array(-0.53218124, dtype=float64, weak_type=True), 'lambda_1': 149.6141949447238, 'lambda_2': 1187.8041494979611, 'ET1_SNR': 33.6407026486057, 'ET2_SNR': 33.117775809383495, 'ET3_SNR': 33.04367762346814, 'network_SNR': 57.62263947561048, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
19:20 ninjax INFO    : log_prob at the injection parameters is: 1707.0001713440288
19:20 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
19:20 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
19:20 ninjax INFO    : Ninjax setup complete.
19:20 ninjax INFO    : Saving output to ./ET/injection_22/
19:20 ninjax INFO    : Using polynomial learning rate scheduler
19:20 ninjax INFO    : Using temperature scheduler
19:20 ninjax INFO    : Using exponential temperature scheduler
19:20 ninjax INFO    : The hyperparameters passed to flowMC and jim are
19:20 ninjax INFO    :    n_loop_training: 75
19:20 ninjax INFO    :    n_loop_production: 30
19:20 ninjax INFO    :    n_local_steps: 500
19:20 ninjax INFO    :    n_global_steps: 1000
19:20 ninjax INFO    :    n_epochs: 50
19:20 ninjax INFO    :    n_chains: 1000
19:20 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x14937c82f6d0>
19:20 ninjax INFO    :    max_samples: 50000
19:20 ninjax INFO    :    momentum: 0.9
19:20 ninjax INFO    :    batch_size: 50000
19:20 ninjax INFO    :    use_global: True
19:20 ninjax INFO    :    keep_quantile: 0.0
19:20 ninjax INFO    :    train_thinning: 10
19:20 ninjax INFO    :    output_thinning: 30
19:20 ninjax INFO    :    n_sample_max: 10000
19:20 ninjax INFO    :    num_layers: 10
19:20 ninjax INFO    :    hidden_size: [128, 128]
19:20 ninjax INFO    :    num_bins: 8
19:20 ninjax INFO    :    save_training_chains: False
19:20 ninjax INFO    :    eps_mass_matrix: 1e-05
19:20 ninjax INFO    :    use_scheduler: True
19:20 ninjax INFO    :    use_temperature: True
19:20 ninjax INFO    :    which_temperature_schedule: exponential
19:20 ninjax INFO    :    starting_temperature: 10.0
19:20 ninjax INFO    :    stop_tempering_iteration: 50
19:20 ninjax INFO    :    stopping_criterion_global_acc: 1.0
19:20 ninjax INFO    :    stopping_criterion_loss: -inf
19:20 ninjax INFO    :    nf_model_kwargs: {}
19:20 ninjax INFO    :    local sampler arg not shown (pretty print)
19:20 ninjax INFO    :    temperature_scheduler: <function exponential_decay.<locals>.schedule at 0x14937c82f7f0>
19:20 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[ 1.56198679e-24 -1.11724843e-23  9.92120965e-24 -4.09732375e-24
  8.23541924e-25  6.04611236e-24  3.37641647e-24 -8.30014750e-24
  2.97826522e-24  3.68198668e-24]
[-1.45230319e-24  1.75448944e-24 -7.21828783e-24 -5.37877032e-24
 -6.06283643e-24  6.24573963e-24 -8.11271589e-24 -3.62449734e-25
 -6.67046670e-24 -9.71064688e-25]
Checking the noise that was generated in inject_signal ifo:
[-4.71093467e-24  7.17440901e-24 -7.76004089e-24  8.51095944e-24
  3.80622650e-25 -4.70200533e-24  6.87240024e-24  4.65666182e-24
 -7.48886605e-25 -3.85414937e-24]
[ 5.59881879e-25  9.15390421e-24 -2.45583283e-24  1.17606692e-24
 -1.24238318e-25  4.31016972e-24  4.47842440e-24 -3.30875727e-24
 -3.52943647e-24  2.56238446e-24]
Checking the noise that was generated in inject_signal ifo:
[-6.24713250e-24 -3.16840301e-24 -2.48423545e-24  1.41198643e-24
 -2.11593672e-24 -1.59550375e-23  4.22308329e-24 -2.67124952e-24
 -1.49891926e-24 -3.26652714e-25]
[ 2.42706128e-24  4.67055295e-24 -3.95733534e-24 -3.43879916e-24
 -1.83538568e-24  3.52489662e-24  9.60215797e-24 -4.22757902e-24
 -5.72166958e-24 -7.05200777e-24]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.19485163688659668 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 1.5211919523954474, 'mass_2_source': 1.0858690938772646, 's1_z': -0.004373768821056466, 's2_z': -0.0061275130369101705, 'cos_iota': -0.8049979195665959, 'd_L': 755.9914185560916, 't_c': 0.01735114226539483, 'phase_c': 4.357049362242216, 'psi': 2.5156606707632214, 'ra': 6.043688329951075, 'sin_dec': -0.5074141247882826, 'q': 0.7138277928484487, 'M_c': 1.3062826905707103, 'eta': 0.24302955424203904, 'iota': Array(2.50646829, dtype=float64, weak_type=True), 'dec': Array(-0.53218124, dtype=float64, weak_type=True), 'lambda_1': 149.6141949447238, 'lambda_2': 1187.8041494979611, 'ET1_SNR': 33.6407026486057, 'ET2_SNR': 33.117775809383495, 'ET3_SNR': 33.04367762346814, 'network_SNR': 57.62263947561048, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5184059143066406 seconds
Time for h_sky_low and h_sky_center: 6.131621360778809 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 1.351830244064331
Going to compute coefficients . . .
Time for computing coefficients: 175.4122896194458 seconds
Time for computing coefficients: 14.289119482040405 seconds
Time for computing coefficients: 14.493164777755737 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/75 [00:00<?, ?it/s]Tuning global sampler:   1%|▏         | 1/75 [02:13<2:45:03, 133.83s/it]Tuning global sampler:   3%|▎         | 2/75 [02:28<1:17:52, 64.00s/it] Tuning global sampler:   4%|▍         | 3/75 [02:44<49:58, 41.65s/it]  Tuning global sampler:   5%|▌         | 4/75 [02:58<36:48, 31.11s/it]Tuning global sampler:   7%|▋         | 5/75 [03:14<29:33, 25.34s/it]Tuning global sampler:   8%|▊         | 6/75 [03:29<25:05, 21.82s/it]Tuning global sampler:   9%|▉         | 7/75 [03:44<22:13, 19.61s/it]Tuning global sampler:  11%|█         | 8/75 [03:59<20:18, 18.18s/it]Tuning global sampler:  12%|█▏        | 9/75 [04:15<19:15, 17.51s/it]Tuning global sampler:  13%|█▎        | 10/75 [04:30<18:09, 16.76s/it]Tuning global sampler:  15%|█▍        | 11/75 [04:45<17:16, 16.19s/it]Tuning global sampler:  16%|█▌        | 12/75 [05:00<16:33, 15.77s/it]Tuning global sampler:  17%|█▋        | 13/75 [05:14<16:00, 15.49s/it]Tuning global sampler:  19%|█▊        | 14/75 [05:29<15:33, 15.30s/it]Tuning global sampler:  20%|██        | 15/75 [05:44<15:09, 15.16s/it]Tuning global sampler:  21%|██▏       | 16/75 [05:59<14:48, 15.06s/it]Tuning global sampler:  23%|██▎       | 17/75 [06:14<14:30, 15.01s/it]Tuning global sampler:  24%|██▍       | 18/75 [06:29<14:12, 14.95s/it]Tuning global sampler:  25%|██▌       | 19/75 [06:43<13:55, 14.92s/it]Tuning global sampler:  27%|██▋       | 20/75 [06:59<13:55, 15.19s/it]Tuning global sampler:  28%|██▊       | 21/75 [07:14<13:34, 15.08s/it]Tuning global sampler:  29%|██▉       | 22/75 [07:29<13:14, 15.00s/it]Tuning global sampler:  31%|███       | 23/75 [07:44<12:57, 14.96s/it]Tuning global sampler:  32%|███▏      | 24/75 [07:59<12:41, 14.92s/it]Tuning global sampler:  33%|███▎      | 25/75 [08:13<12:24, 14.89s/it]Tuning global sampler:  35%|███▍      | 26/75 [08:28<12:09, 14.88s/it]Tuning global sampler:  36%|███▌      | 27/75 [08:43<11:53, 14.86s/it]Tuning global sampler:  37%|███▋      | 28/75 [08:58<11:37, 14.84s/it]Tuning global sampler:  39%|███▊      | 29/75 [09:13<11:22, 14.84s/it]Tuning global sampler:  40%|████      | 30/75 [09:29<11:20, 15.12s/it]Tuning global sampler:  41%|████▏     | 31/75 [09:43<11:00, 15.02s/it]Tuning global sampler:  43%|████▎     | 32/75 [09:58<10:43, 14.97s/it]Tuning global sampler:  44%|████▍     | 33/75 [10:13<10:26, 14.92s/it]Tuning global sampler:  45%|████▌     | 34/75 [10:28<10:10, 14.89s/it]Tuning global sampler:  47%|████▋     | 35/75 [10:43<09:54, 14.87s/it]Tuning global sampler:  48%|████▊     | 36/75 [10:57<09:39, 14.85s/it]Tuning global sampler:  49%|████▉     | 37/75 [11:12<09:23, 14.84s/it]Tuning global sampler:  51%|█████     | 38/75 [11:27<09:09, 14.84s/it]Tuning global sampler:  52%|█████▏    | 39/75 [11:42<08:53, 14.83s/it]Tuning global sampler:  53%|█████▎    | 40/75 [11:57<08:38, 14.82s/it]Tuning global sampler:  55%|█████▍    | 41/75 [12:12<08:34, 15.12s/it]Tuning global sampler:  56%|█████▌    | 42/75 [12:27<08:15, 15.03s/it]Tuning global sampler:  57%|█████▋    | 43/75 [12:42<07:58, 14.96s/it]Tuning global sampler:  59%|█████▊    | 44/75 [12:57<07:42, 14.93s/it]Tuning global sampler:  60%|██████    | 45/75 [13:12<07:26, 14.89s/it]Tuning global sampler:  61%|██████▏   | 46/75 [13:27<07:11, 14.86s/it]Tuning global sampler:  63%|██████▎   | 47/75 [13:41<06:56, 14.86s/it]Tuning global sampler:  64%|██████▍   | 48/75 [13:56<06:40, 14.84s/it]Tuning global sampler:  65%|██████▌   | 49/75 [14:11<06:25, 14.83s/it]Tuning global sampler:  67%|██████▋   | 50/75 [14:26<06:10, 14.84s/it]Tuning global sampler:  68%|██████▊   | 51/75 [14:41<05:55, 14.83s/it]Tuning global sampler:  69%|██████▉   | 52/75 [14:55<05:40, 14.82s/it]Tuning global sampler:  71%|███████   | 53/75 [15:11<05:33, 15.14s/it]Tuning global sampler:  72%|███████▏  | 54/75 [15:26<05:15, 15.04s/it]Tuning global sampler:  73%|███████▎  | 55/75 [15:41<04:59, 14.97s/it]Tuning global sampler:  75%|███████▍  | 56/75 [15:56<04:43, 14.94s/it]Tuning global sampler:  76%|███████▌  | 57/75 [16:11<04:28, 14.90s/it]Tuning global sampler:  77%|███████▋  | 58/75 [16:25<04:12, 14.87s/it]Tuning global sampler:  79%|███████▊  | 59/75 [16:40<03:57, 14.87s/it]Tuning global sampler:  80%|████████  | 60/75 [16:55<03:42, 14.85s/it]Tuning global sampler:  81%|████████▏ | 61/75 [17:10<03:27, 14.83s/it]Tuning global sampler:  83%|████████▎ | 62/75 [17:25<03:12, 14.84s/it]Tuning global sampler:  84%|████████▍ | 63/75 [17:40<02:58, 14.84s/it]Tuning global sampler:  85%|████████▌ | 64/75 [17:55<02:46, 15.13s/it]Tuning global sampler:  87%|████████▋ | 65/75 [18:10<02:30, 15.05s/it]Tuning global sampler:  88%|████████▊ | 66/75 [18:25<02:14, 14.98s/it]Tuning global sampler:  89%|████████▉ | 67/75 [18:40<01:59, 14.93s/it]Tuning global sampler:  91%|█████████ | 68/75 [18:55<01:44, 14.90s/it]Tuning global sampler:  92%|█████████▏| 69/75 [19:10<01:29, 14.87s/it]Tuning global sampler:  93%|█████████▎| 70/75 [19:24<01:14, 14.86s/it]Tuning global sampler:  95%|█████████▍| 71/75 [19:39<00:59, 14.85s/it]Tuning global sampler:  96%|█████████▌| 72/75 [19:54<00:44, 14.84s/it]Tuning global sampler:  97%|█████████▋| 73/75 [20:09<00:29, 14.83s/it]Tuning global sampler:  99%|█████████▊| 74/75 [20:25<00:15, 15.15s/it]Tuning global sampler: 100%|██████████| 75/75 [20:40<00:00, 15.05s/it]Tuning global sampler: 100%|██████████| 75/75 [20:40<00:00, 16.53s/it]
Compiling MALA body
Starting Production run
Production run:   0%|          | 0/30 [00:00<?, ?it/s]Production run:   3%|▎         | 1/30 [00:12<06:01, 12.45s/it]Production run:   7%|▋         | 2/30 [00:24<05:48, 12.43s/it]Production run:  10%|█         | 3/30 [00:37<05:35, 12.42s/it]Production run:  13%|█▎        | 4/30 [00:49<05:22, 12.42s/it]Production run:  17%|█▋        | 5/30 [01:02<05:10, 12.42s/it]Production run:  20%|██        | 6/30 [01:14<04:58, 12.42s/it]Production run:  23%|██▎       | 7/30 [01:26<04:45, 12.42s/it]Production run:  27%|██▋       | 8/30 [01:39<04:33, 12.42s/it]Production run:  30%|███       | 9/30 [01:51<04:20, 12.42s/it]Production run:  33%|███▎      | 10/30 [02:04<04:08, 12.42s/it]Production run:  37%|███▋      | 11/30 [02:16<03:55, 12.42s/it]Production run:  40%|████      | 12/30 [02:29<03:43, 12.42s/it]Production run:  43%|████▎     | 13/30 [02:41<03:31, 12.42s/it]Production run:  47%|████▋     | 14/30 [02:53<03:18, 12.42s/it]Production run:  50%|█████     | 15/30 [03:06<03:06, 12.41s/it]Production run:  53%|█████▎    | 16/30 [03:18<02:53, 12.41s/it]Production run:  57%|█████▋    | 17/30 [03:31<02:41, 12.41s/it]Production run:  60%|██████    | 18/30 [03:43<02:28, 12.41s/it]Production run:  63%|██████▎   | 19/30 [03:55<02:16, 12.41s/it]Production run:  67%|██████▋   | 20/30 [04:08<02:04, 12.41s/it]Production run:  70%|███████   | 21/30 [04:20<01:51, 12.41s/it]Production run:  73%|███████▎  | 22/30 [04:33<01:39, 12.41s/it]Production run:  77%|███████▋  | 23/30 [04:45<01:26, 12.41s/it]Production run:  80%|████████  | 24/30 [04:57<01:14, 12.41s/it]Production run:  83%|████████▎ | 25/30 [05:10<01:02, 12.41s/it]Production run:  87%|████████▋ | 26/30 [05:22<00:49, 12.41s/it]Production run:  90%|█████████ | 27/30 [05:35<00:37, 12.41s/it]Production run:  93%|█████████▎| 28/30 [05:47<00:24, 12.41s/it]Production run:  97%|█████████▋| 29/30 [06:00<00:12, 12.41s/it]Production run: 100%|██████████| 30/30 [06:12<00:00, 12.41s/it]Production run: 100%|██████████| 30/30 [06:12<00:00, 12.42s/it]
19:47 ninjax INFO    : Saving samples to ./ET/injection_22/results_training.npz
19:47 ninjax INFO    : Saving the NF
19:47 ninjax INFO    : Time taken: 1620.2729697227478 seconds (27.00454949537913 minutes)
19:47 ninjax INFO    : Creating the final corner plot
19:47 ninjax INFO    : Dumping the final production chains
19:47 ninjax INFO    : Chains shape is: (13, 1530000)
19:47 ninjax INFO    : Key: M_c: ESS = 102131, Rhat = 1.0106029087877928
19:47 ninjax INFO    : Key: q: ESS = 94150, Rhat = 1.0099262666239694
19:47 ninjax INFO    : Key: s1_z: ESS = 107402, Rhat = 1.0087287968784053
19:47 ninjax INFO    : Key: s2_z: ESS = 66880, Rhat = 1.0103806362531467
19:47 ninjax INFO    : Key: lambda_1: ESS = 65879, Rhat = 1.0111270432520296
19:47 ninjax INFO    : Key: lambda_2: ESS = 64209, Rhat = 1.0104358503310251
19:47 ninjax INFO    : Key: cos_iota: ESS = 18231, Rhat = 1.0311752847312659
19:47 ninjax INFO    : Key: d_L: ESS = 28235, Rhat = 1.020676998025434
19:47 ninjax INFO    : Key: t_c: ESS = 19998, Rhat = 1.0289442976218028
19:47 ninjax INFO    : Key: phase_c: ESS = 132805, Rhat = 1.0080243163337694
19:48 ninjax INFO    : Key: psi: ESS = 72467, Rhat = 1.0097591241034043
19:48 ninjax INFO    : Key: ra: ESS = 16880, Rhat = 1.0336695970058545
19:48 ninjax INFO    : Key: sin_dec: ESS = 18617, Rhat = 1.0313257403515246
19:48 ninjax INFO    : Key: eta: ESS = 94150, Rhat = 1.009103696591465
19:48 ninjax INFO    : Key: iota: ESS = 18231, Rhat = 1.0311752847312659
19:48 ninjax INFO    : Key: dec: ESS = 18617, Rhat = 1.0313257403515246
19:48 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.314 +/- 0.091
q: 0.735 +/- 0.168
s1_z: -0.004 +/- 0.026
s2_z: -0.004 +/- 0.027
lambda_1: 965.122 +/- 1209.007
lambda_2: 1315.266 +/- 1150.460
cos_iota: 0.662 +/- 0.447
d_L: 811.419 +/- 251.869
t_c: 0.050 +/- 0.021
phase_c: 3.209 +/- 1.777
psi: 1.542 +/- 0.907
ra: 2.938 +/- 0.937
sin_dec: 0.436 +/- 0.414
Log probability: 948.434 +/- 667.219
Local acceptance: 0.233 +/- 0.423
Global acceptance: 0.053 +/- 0.223
Max loss: 22.693, Min loss: 0.506
Production summary
==========
M_c: 1.306 +/- 0.000
q: 0.755 +/- 0.119
s1_z: -0.006 +/- 0.025
s2_z: -0.006 +/- 0.027
lambda_1: 325.686 +/- 230.115
lambda_2: 792.009 +/- 508.628
cos_iota: 0.858 +/- 0.143
d_L: 711.234 +/- 102.349
t_c: 0.056 +/- 0.003
phase_c: 3.227 +/- 1.799
psi: 1.558 +/- 0.897
ra: 2.935 +/- 0.588
sin_dec: 0.570 +/- 0.266
Log probability: 1705.980 +/- 2.137
Local acceptance: 0.020 +/- 0.138
Global acceptance: 0.115 +/- 0.319
DONE

JOB STATISTICS
==============
Job ID: 10885687
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:28:47
CPU Efficiency: 5.66% of 08:28:32 core-walltime
Job Wall-clock time: 00:31:47
Memory Utilized: 4.98 GB
Memory Efficiency: 49.83% of 10.00 GB
