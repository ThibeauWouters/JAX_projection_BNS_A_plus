Sat Mar 29 11:32:19 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
11:32 ninjax INFO    : Checking and setting outdir
11:32 ninjax INFO    : Found generation prior file ./ET/injection_18/generation_prior.prior
11:32 ninjax INFO    : The outdir is set to ./ET/injection_18
11:32 ninjax INFO    : Loading the given config
11:32 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
11:32 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'ET', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '2000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
11:32 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/ET/injection_18/complete_config.json
11:32 ninjax INFO    : No seed specified. Generating a random seed: 968697
11:32 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 732163
11:32 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 963497
11:32 ninjax INFO    : Loading the priors
11:32 ninjax INFO    : Setting up the prior
11:32 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
11:32 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
11:32 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
11:32 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
11:32 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
11:32 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
11:32 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
11:32 ninjax INFO    :    dL_prior = PowerLaw(1.0, 1500.0, 2.0, naming=["d_L"])
11:32 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
11:32 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
11:32 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
11:32 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
11:32 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
11:32 ninjax INFO    : Setting up the generation prior
11:32 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_1_source"])
11:32 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_2_source"])
11:32 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
11:32 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
11:32 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
11:32 ninjax INFO    :    dL_prior = PowerLaw(100.0, 1000.0, 2.0, naming=["d_L"])
11:32 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
11:32 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
11:32 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
11:32 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
11:32 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
11:32 ninjax INFO    : Finished prior setup
11:32 ninjax INFO    : Setting the transforms
11:32 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
11:32 ninjax INFO    : transforms_str_list has 3 elements
11:32 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
11:32 ninjax INFO    : Setting the likelihood
11:32 ninjax INFO    : GW likelihood provided, setting up the GW pipe
11:32 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
11:32 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
11:32 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
11:32 ninjax INFO    : self.is_BNS_run is True
11:32 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
11:32 ninjax INFO    : GW run is an injection
11:32 ninjax INFO    : Setting up GW injection . . . 
11:32 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
11:32 ninjax INFO    : Generating new injection
11:32 ninjax INFO    : Sanity check: generated parameters:
11:32 ninjax INFO    : {'mass_1_source': 1.2545620911669226, 'mass_2_source': 1.9949970192226019, 's1_z': 0.04439507643757494, 's2_z': -0.03384470886436297, 'cos_iota': 0.731127600595014, 'd_L': 488.5611413533761, 't_c': 0.07883874562879331, 'phase_c': 3.1325897091432338, 'psi': 1.192872341196369, 'ra': 3.1338091427525483, 'sin_dec': -0.09518667981161721}
11:32 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
11:32 ninjax INFO    : Injected lambda_1: 14.593642375107226
11:32 ninjax INFO    : Injected lambda_2: 507.3828855164238
11:32 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.5211521667665926 is 128.0
11:32 ninjax INFO    : After transforms, the injection parameters are:
11:32 ninjax INFO    : {'mass_1_source': 1.9949970192226019, 'mass_2_source': 1.2545620911669226, 's1_z': 0.04439507643757494, 's2_z': -0.03384470886436297, 'cos_iota': 0.731127600595014, 'd_L': 488.5611413533761, 't_c': 0.07883874562879331, 'phase_c': 3.1325897091432338, 'psi': 1.192872341196369, 'ra': 3.1338091427525483, 'sin_dec': -0.09518667981161721, 'q': 0.6288541181158219, 'M_c': 1.5211521667665926, 'eta': 0.2370202920551355, 'iota': Array(0.75082305, dtype=float64, weak_type=True), 'dec': Array(-0.09533101, dtype=float64, weak_type=True), 'lambda_1': 14.593642375107226, 'lambda_2': 507.3828855164238}
11:32 ninjax INFO    : The trial injection parameters are {'M_c': 1.5211521667665926, 'eta': 0.2370202920551355, 's1_z': 0.04439507643757494, 's2_z': -0.03384470886436297, 'lambda_1': 14.593642375107226, 'lambda_2': 507.3828855164238, 'd_L': 488.5611413533761, 'phase_c': 3.1325897091432338, 'iota': 0.7508230466779605, 't_c': 0.07883874562879331, 'psi': 1.192872341196369, 'ra': 3.1338091427525483, 'dec': -0.09533100893446535}
11:32 ninjax INFO    : Injecting signals . . .
11:32 ninjax INFO    : self.ifos
11:32 ninjax INFO    : [GroundBased2G(ET1), GroundBased2G(ET2), GroundBased2G(ET3)]
11:32 ninjax INFO    : Signal injected in ifo ET1. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [-1.07763297e-23+1.90911086e-25j  3.11896295e-24+1.19579527e-24j
  4.29103285e-24+8.37787393e-24j ...
 -1.51223530e-24+7.61253156e-24j -1.95755181e-24-2.01910819e-24j
  2.52704514e-24-2.52378178e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : Signal injected in ifo ET2. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [-3.27486322e-24+5.22269601e-25j -2.32210495e-24-2.35087011e-24j
 -8.60168602e-24+7.24120440e-26j ...
  2.40273905e-24+5.17277699e-25j -3.97781386e-24-7.65160164e-24j
  5.53385963e-24-3.06256210e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : Signal injected in ifo ET3. Frequencies, data, and PSD:
11:32 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
11:32 ninjax INFO    : [ 3.67639967e-24+5.49675703e-24j  6.21490436e-24-1.94023263e-24j
 -2.35489010e-24-1.10523350e-24j ...
  7.20574041e-24-5.18148049e-25j  5.71573994e-24-6.42761759e-24j
  1.28056775e-24-3.46471909e-24j]
11:32 ninjax INFO    : [8.83385322e-49 8.82885595e-49 8.82385867e-49 ... 1.23822108e-48
 1.23823022e-48 1.23823937e-48]
11:32 ninjax INFO    : SNR for ifo ET1 is 34.84864065771419
11:32 ninjax INFO    : SNR for ifo ET2 is 39.275825956410955
11:32 ninjax INFO    : SNR for ifo ET3 is 36.726973319986115
11:32 ninjax INFO    : The network SNR is 64.07720990723415
11:32 ninjax INFO    : Network SNR passes threshold
11:32 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
11:32 ninjax INFO    :    mass_1_source: 1.9949970192226019
11:32 ninjax INFO    :    mass_2_source: 1.2545620911669226
11:32 ninjax INFO    :    s1_z: 0.04439507643757494
11:32 ninjax INFO    :    s2_z: -0.03384470886436297
11:32 ninjax INFO    :    cos_iota: 0.731127600595014
11:32 ninjax INFO    :    d_L: 488.5611413533761
11:32 ninjax INFO    :    t_c: 0.07883874562879331
11:32 ninjax INFO    :    phase_c: 3.1325897091432338
11:32 ninjax INFO    :    psi: 1.192872341196369
11:32 ninjax INFO    :    ra: 3.1338091427525483
11:32 ninjax INFO    :    sin_dec: -0.09518667981161721
11:32 ninjax INFO    :    q: 0.6288541181158219
11:32 ninjax INFO    :    M_c: 1.5211521667665926
11:32 ninjax INFO    :    eta: 0.2370202920551355
11:32 ninjax INFO    :    iota: 0.7508230466779605
11:32 ninjax INFO    :    dec: -0.09533100893446535
11:32 ninjax INFO    :    lambda_1: 14.593642375107226
11:32 ninjax INFO    :    lambda_2: 507.3828855164238
11:32 ninjax INFO    :    ET1_SNR: 34.84864065771419
11:32 ninjax INFO    :    ET2_SNR: 39.275825956410955
11:32 ninjax INFO    :    ET3_SNR: 36.726973319986115
11:32 ninjax INFO    :    network_SNR: 64.07720990723415
11:32 ninjax INFO    :    epoch: 126.0
11:32 ninjax INFO    :    gmst: 2.7288901910520846
11:32 ninjax INFO    :    duration: 128.0
11:32 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
11:32 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
11:32 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
11:34 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 139.00815796852112 seconds = 2.3168026328086855 minutes
11:34 ninjax INFO    : The priors are not modified after their initialization
11:34 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
11:34 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
11:34 ninjax INFO    : sample: {'M_c': Array([1.32839895, 2.31895485, 2.47189345], dtype=float64), 'q': Array([0.99999279, 0.24373153, 0.74835079], dtype=float64), 's1_z': Array([ 0.02101421, -0.03887855,  0.03187107], dtype=float64), 's2_z': Array([ 0.04963308, -0.0329556 ,  0.04990776], dtype=float64), 'lambda_1': Array([4757.39331806, 4841.39409315, 2972.94569312], dtype=float64), 'lambda_2': Array([1096.32048484,  622.82622779, 2605.99911368], dtype=float64), 'cos_iota': Array([0.69382733, 0.98093378, 0.07484548], dtype=float64), 'd_L': Array([1309.60142827, 1264.20607714, 1228.6152231 ], dtype=float64), 't_c': Array([-0.04889315, -0.08233004, -0.01670365], dtype=float64), 'phase_c': Array([5.77793984, 3.84235665, 6.11724558], dtype=float64), 'psi': Array([0.03733768, 3.03638294, 2.48141391], dtype=float64), 'ra': Array([2.0262587 , 1.21478857, 3.15919754], dtype=float64), 'sin_dec': Array([0.98978933, 0.81291165, 0.67300622], dtype=float64)}
11:35 ninjax INFO    : log_prob: [-250.21400444 -646.96193631 -387.6685525 ]
11:35 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 1.9949970192226019, 'mass_2_source': 1.2545620911669226, 's1_z': 0.04439507643757494, 's2_z': -0.03384470886436297, 'cos_iota': 0.731127600595014, 'd_L': 488.5611413533761, 't_c': 0.07883874562879331, 'phase_c': 3.1325897091432338, 'psi': 1.192872341196369, 'ra': 3.1338091427525483, 'sin_dec': -0.09518667981161721, 'q': 0.6288541181158219, 'M_c': 1.5211521667665926, 'eta': 0.2370202920551355, 'iota': Array(0.75082305, dtype=float64, weak_type=True), 'dec': Array(-0.09533101, dtype=float64, weak_type=True), 'lambda_1': 14.593642375107226, 'lambda_2': 507.3828855164238, 'ET1_SNR': 34.84864065771419, 'ET2_SNR': 39.275825956410955, 'ET3_SNR': 36.726973319986115, 'network_SNR': 64.07720990723415, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
11:35 ninjax INFO    : log_prob at the injection parameters is: 2061.628660619506
11:35 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
11:35 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
11:35 ninjax INFO    : Ninjax setup complete.
11:35 ninjax INFO    : Saving output to ./ET/injection_18/
11:35 ninjax INFO    : Using polynomial learning rate scheduler
11:35 ninjax INFO    : The hyperparameters passed to flowMC and jim are
11:35 ninjax INFO    :    n_loop_training: 200
11:35 ninjax INFO    :    n_loop_production: 10
11:35 ninjax INFO    :    n_local_steps: 100
11:35 ninjax INFO    :    n_global_steps: 1000
11:35 ninjax INFO    :    n_epochs: 25
11:35 ninjax INFO    :    n_chains: 1000
11:35 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x14db45252680>
11:35 ninjax INFO    :    max_samples: 50000
11:35 ninjax INFO    :    momentum: 0.9
11:35 ninjax INFO    :    batch_size: 30000
11:35 ninjax INFO    :    use_global: True
11:35 ninjax INFO    :    keep_quantile: 0.0
11:35 ninjax INFO    :    train_thinning: 10
11:35 ninjax INFO    :    output_thinning: 50
11:35 ninjax INFO    :    n_sample_max: 10000
11:35 ninjax INFO    :    num_layers: 10
11:35 ninjax INFO    :    hidden_size: [128, 128]
11:35 ninjax INFO    :    num_bins: 8
11:35 ninjax INFO    :    save_training_chains: False
11:35 ninjax INFO    :    eps_mass_matrix: 1e-05
11:35 ninjax INFO    :    use_scheduler: True
11:35 ninjax INFO    :    use_temperature: False
11:35 ninjax INFO    :    which_temperature_schedule: exponential
11:35 ninjax INFO    :    starting_temperature: 2.0
11:35 ninjax INFO    :    stop_tempering_iteration: 75
11:35 ninjax INFO    :    stopping_criterion_global_acc: 0.1
11:35 ninjax INFO    :    stopping_criterion_loss: -inf
11:35 ninjax INFO    :    nf_model_kwargs: {}
11:35 ninjax INFO    :    local sampler arg not shown (pretty print)
11:35 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-8.99963162e-24  2.98781789e-24  2.30996922e-24 -3.92681453e-25
 -4.79783438e-25  6.32914741e-24 -1.09803562e-25  4.08894472e-24
  8.82294333e-24  1.33651991e-24]
[-1.97645511e-24 -1.60237190e-24  6.39920238e-24 -1.31494752e-24
 -4.11881937e-24 -5.66754988e-24  2.15239994e-24  5.73235222e-24
  4.41970426e-24 -1.19346823e-24]
Checking the noise that was generated in inject_signal ifo:
[-2.22299428e-24  4.51859400e-25 -5.53750709e-24  5.54477115e-24
 -5.67834238e-24  3.59618359e-24 -4.10688812e-24  1.38211968e-24
 -2.45504975e-24  5.83375059e-24]
[ 3.50053220e-24 -8.43401847e-25 -6.81922519e-25  6.48287991e-25
  1.64938317e-24  2.74643818e-24 -1.64210569e-24  2.74533406e-24
  1.37228187e-24  1.58121442e-24]
Checking the noise that was generated in inject_signal ifo:
[ 8.36579837e-25  3.56311179e-24 -3.44002490e-24 -2.72019002e-24
 -3.79158641e-24 -4.33391650e-24  1.79739364e-24 -3.28974182e-25
  2.78030387e-24  9.63457501e-25]
[ 4.68494142e-24 -6.42685959e-25  1.63887547e-24  3.64724548e-24
 -5.31074893e-24  2.11662274e-24  7.77031577e-25 -1.47098709e-24
 -2.43483536e-24 -1.66546379e-24]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.12389683723449707 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 1.9949970192226019, 'mass_2_source': 1.2545620911669226, 's1_z': 0.04439507643757494, 's2_z': -0.03384470886436297, 'cos_iota': 0.731127600595014, 'd_L': 488.5611413533761, 't_c': 0.07883874562879331, 'phase_c': 3.1325897091432338, 'psi': 1.192872341196369, 'ra': 3.1338091427525483, 'sin_dec': -0.09518667981161721, 'q': 0.6288541181158219, 'M_c': 1.5211521667665926, 'eta': 0.2370202920551355, 'iota': Array(0.75082305, dtype=float64, weak_type=True), 'dec': Array(-0.09533101, dtype=float64, weak_type=True), 'lambda_1': 14.593642375107226, 'lambda_2': 507.3828855164238, 'ET1_SNR': 34.84864065771419, 'ET2_SNR': 39.275825956410955, 'ET3_SNR': 36.726973319986115, 'network_SNR': 64.07720990723415, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5019164085388184 seconds
Time for h_sky_low and h_sky_center: 5.7667200565338135 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 1.2018957138061523
Going to compute coefficients . . .
Time for computing coefficients: 102.56431746482849 seconds
Time for computing coefficients: 14.392993450164795 seconds
Time for computing coefficients: 13.929952144622803 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:00<6:38:50, 120.25s/it]Tuning global sampler:   1%|          | 2/200 [02:06<2:55:18, 53.12s/it] Tuning global sampler:   2%|▏         | 3/200 [02:12<1:44:02, 31.69s/it]Tuning global sampler:   2%|▏         | 4/200 [02:18<1:10:36, 21.61s/it]Tuning global sampler:   2%|▎         | 5/200 [02:24<52:08, 16.04s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:31<41:01, 12.69s/it]Tuning global sampler:   4%|▎         | 7/200 [02:37<34:44, 10.80s/it]Tuning global sampler:   4%|▍         | 8/200 [02:44<29:49,  9.32s/it]Tuning global sampler:   4%|▍         | 9/200 [02:50<26:28,  8.32s/it]Tuning global sampler:   5%|▌         | 10/200 [02:56<24:03,  7.60s/it]Tuning global sampler:   6%|▌         | 11/200 [03:02<22:32,  7.16s/it]Tuning global sampler:   6%|▌         | 12/200 [03:08<21:28,  6.85s/it]Tuning global sampler:   6%|▋         | 13/200 [03:14<20:40,  6.63s/it]Tuning global sampler:   7%|▋         | 14/200 [03:20<20:09,  6.50s/it]Tuning global sampler:   8%|▊         | 15/200 [03:27<19:46,  6.41s/it]Tuning global sampler:   8%|▊         | 16/200 [03:33<19:28,  6.35s/it]Tuning global sampler:   8%|▊         | 17/200 [03:39<19:13,  6.30s/it]Tuning global sampler:   9%|▉         | 18/200 [03:45<19:02,  6.28s/it]Tuning global sampler:  10%|▉         | 19/200 [03:51<18:52,  6.25s/it]Tuning global sampler:  10%|█         | 20/200 [03:58<18:43,  6.24s/it]Tuning global sampler:  10%|█         | 21/200 [04:04<18:34,  6.23s/it]Tuning global sampler:  11%|█         | 22/200 [04:10<18:25,  6.21s/it]Tuning global sampler:  12%|█▏        | 23/200 [04:17<19:04,  6.47s/it]Tuning global sampler:  12%|█▏        | 24/200 [04:23<18:33,  6.33s/it]Tuning global sampler:  12%|█▎        | 25/200 [04:29<18:09,  6.22s/it]Tuning global sampler:  13%|█▎        | 26/200 [04:35<17:49,  6.15s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:41<17:35,  6.10s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:47<17:22,  6.06s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:53<17:12,  6.04s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:59<17:02,  6.02s/it]Tuning global sampler:  16%|█▌        | 31/200 [05:05<16:54,  6.00s/it]Tuning global sampler:  16%|█▌        | 32/200 [05:11<16:47,  5.99s/it]Tuning global sampler:  16%|█▋        | 33/200 [05:17<16:38,  5.98s/it]Tuning global sampler:  17%|█▋        | 34/200 [05:23<16:30,  5.97s/it]Tuning global sampler:  18%|█▊        | 35/200 [05:29<16:25,  5.97s/it]Tuning global sampler:  18%|█▊        | 36/200 [05:35<16:19,  5.97s/it]Tuning global sampler:  18%|█▊        | 37/200 [05:41<16:13,  5.97s/it]Tuning global sampler:  19%|█▉        | 38/200 [05:47<16:07,  5.97s/it]Tuning global sampler:  20%|█▉        | 39/200 [05:53<16:01,  5.97s/it]Tuning global sampler:  20%|██        | 40/200 [05:59<15:55,  5.97s/it]Tuning global sampler:  20%|██        | 41/200 [06:05<16:32,  6.24s/it]Tuning global sampler:  21%|██        | 42/200 [06:11<16:13,  6.16s/it]Tuning global sampler:  22%|██▏       | 43/200 [06:17<15:58,  6.10s/it]Tuning global sampler:  22%|██▏       | 44/200 [06:23<15:44,  6.05s/it]Tuning global sampler:  22%|██▎       | 45/200 [06:29<15:32,  6.02s/it]Tuning global sampler:  23%|██▎       | 46/200 [06:35<15:24,  6.00s/it]Tuning global sampler:  24%|██▎       | 47/200 [06:41<15:17,  5.99s/it]Tuning global sampler:  24%|██▍       | 48/200 [06:47<15:09,  5.99s/it]Tuning global sampler:  24%|██▍       | 49/200 [06:53<15:03,  5.98s/it]Tuning global sampler:  25%|██▌       | 50/200 [06:59<14:56,  5.98s/it]Tuning global sampler:  26%|██▌       | 51/200 [07:05<14:50,  5.98s/it]Tuning global sampler:  26%|██▌       | 52/200 [07:11<14:44,  5.98s/it]Tuning global sampler:  26%|██▋       | 53/200 [07:17<14:38,  5.97s/it]Tuning global sampler:  27%|██▋       | 54/200 [07:23<14:32,  5.97s/it]Tuning global sampler:  28%|██▊       | 55/200 [07:29<14:24,  5.96s/it]Tuning global sampler:  28%|██▊       | 56/200 [07:35<14:17,  5.95s/it]Tuning global sampler:  28%|██▊       | 57/200 [07:41<14:12,  5.96s/it]Tuning global sampler:  29%|██▉       | 58/200 [07:47<14:06,  5.96s/it]Tuning global sampler:  30%|██▉       | 59/200 [07:53<14:01,  5.97s/it]Tuning global sampler:  30%|███       | 60/200 [07:59<13:56,  5.97s/it]Tuning global sampler:  30%|███       | 61/200 [08:06<14:28,  6.25s/it]Tuning global sampler:  31%|███       | 62/200 [08:12<14:11,  6.17s/it]Tuning global sampler:  32%|███▏      | 63/200 [08:18<13:57,  6.11s/it]Tuning global sampler:  32%|███▏      | 64/200 [08:24<13:45,  6.07s/it]Tuning global sampler:  32%|███▎      | 65/200 [08:30<13:35,  6.04s/it]Tuning global sampler:  33%|███▎      | 66/200 [08:36<13:25,  6.01s/it]Tuning global sampler:  34%|███▎      | 67/200 [08:41<13:16,  5.99s/it]Tuning global sampler:  34%|███▍      | 68/200 [08:47<13:09,  5.98s/it]Tuning global sampler:  34%|███▍      | 69/200 [08:53<13:03,  5.98s/it]Tuning global sampler:  35%|███▌      | 70/200 [08:59<12:57,  5.98s/it]Tuning global sampler:  36%|███▌      | 71/200 [09:05<12:50,  5.98s/it]Tuning global sampler:  36%|███▌      | 72/200 [09:11<12:45,  5.98s/it]Tuning global sampler:  36%|███▋      | 73/200 [09:17<12:39,  5.98s/it]Tuning global sampler:  37%|███▋      | 74/200 [09:23<12:33,  5.98s/it]Tuning global sampler:  38%|███▊      | 75/200 [09:29<12:27,  5.98s/it]Tuning global sampler:  38%|███▊      | 76/200 [09:35<12:21,  5.98s/it]Tuning global sampler:  38%|███▊      | 77/200 [09:41<12:14,  5.97s/it]Tuning global sampler:  39%|███▉      | 78/200 [09:47<12:07,  5.96s/it]Tuning global sampler:  40%|███▉      | 79/200 [09:53<12:02,  5.97s/it]Tuning global sampler:  40%|████      | 80/200 [10:00<12:30,  6.25s/it]Tuning global sampler:  40%|████      | 81/200 [10:06<12:14,  6.17s/it]Tuning global sampler:  41%|████      | 82/200 [10:12<12:01,  6.11s/it]Tuning global sampler:  42%|████▏     | 83/200 [10:18<11:50,  6.07s/it]Tuning global sampler:  42%|████▏     | 84/200 [10:24<11:41,  6.04s/it]Tuning global sampler:  42%|████▎     | 85/200 [10:30<11:32,  6.03s/it]Tuning global sampler:  43%|████▎     | 86/200 [10:36<11:25,  6.01s/it]Tuning global sampler:  44%|████▎     | 87/200 [10:42<11:18,  6.00s/it]Tuning global sampler:  44%|████▍     | 88/200 [10:48<11:10,  5.98s/it]Tuning global sampler:  44%|████▍     | 89/200 [10:54<11:03,  5.97s/it]Tuning global sampler:  45%|████▌     | 90/200 [11:00<10:57,  5.97s/it]Tuning global sampler:  46%|████▌     | 91/200 [11:06<10:51,  5.98s/it]Tuning global sampler:  46%|████▌     | 92/200 [11:12<10:45,  5.98s/it]Tuning global sampler:  46%|████▋     | 93/200 [11:18<10:39,  5.98s/it]Tuning global sampler:  47%|████▋     | 94/200 [11:24<10:34,  5.99s/it]Tuning global sampler:  48%|████▊     | 95/200 [11:30<10:29,  5.99s/it]Tuning global sampler:  48%|████▊     | 96/200 [11:36<10:22,  5.99s/it]Tuning global sampler:  48%|████▊     | 97/200 [11:42<10:17,  5.99s/it]Tuning global sampler:  49%|████▉     | 98/200 [11:48<10:12,  6.00s/it]Tuning global sampler:  50%|████▉     | 99/200 [11:54<10:04,  5.99s/it]Tuning global sampler:  50%|█████     | 100/200 [12:00<09:57,  5.98s/it]Tuning global sampler:  50%|█████     | 101/200 [12:07<10:22,  6.28s/it]Tuning global sampler:  51%|█████     | 102/200 [12:13<10:06,  6.19s/it]Tuning global sampler:  52%|█████▏    | 103/200 [12:19<09:54,  6.12s/it]Tuning global sampler:  52%|█████▏    | 104/200 [12:25<09:43,  6.08s/it]Tuning global sampler:  52%|█████▎    | 105/200 [12:31<09:34,  6.05s/it]Tuning global sampler:  53%|█████▎    | 106/200 [12:36<09:26,  6.02s/it]Tuning global sampler:  54%|█████▎    | 107/200 [12:42<09:18,  6.01s/it]Tuning global sampler:  54%|█████▍    | 108/200 [12:48<09:12,  6.00s/it]Tuning global sampler:  55%|█████▍    | 109/200 [12:54<09:07,  6.02s/it]Tuning global sampler:  55%|█████▌    | 110/200 [13:00<08:59,  5.99s/it]Tuning global sampler:  56%|█████▌    | 111/200 [13:06<08:52,  5.98s/it]Tuning global sampler:  56%|█████▌    | 112/200 [13:12<08:47,  5.99s/it]Tuning global sampler:  56%|█████▋    | 113/200 [13:18<08:41,  6.00s/it]Tuning global sampler:  57%|█████▋    | 114/200 [13:24<08:35,  6.00s/it]Tuning global sampler:  57%|█████▊    | 115/200 [13:30<08:29,  6.00s/it]Tuning global sampler:  58%|█████▊    | 116/200 [13:36<08:23,  6.00s/it]Tuning global sampler:  58%|█████▊    | 117/200 [13:42<08:17,  6.00s/it]Tuning global sampler:  59%|█████▉    | 118/200 [13:48<08:12,  6.00s/it]Tuning global sampler:  60%|█████▉    | 119/200 [13:54<08:06,  6.01s/it]Tuning global sampler:  60%|██████    | 120/200 [14:00<08:00,  6.01s/it]Tuning global sampler:  60%|██████    | 121/200 [14:07<08:18,  6.31s/it]Tuning global sampler:  61%|██████    | 122/200 [14:13<08:04,  6.21s/it]Tuning global sampler:  62%|██████▏   | 123/200 [14:19<07:53,  6.15s/it]Tuning global sampler:  62%|██████▏   | 124/200 [14:25<07:44,  6.12s/it]Tuning global sampler:  62%|██████▎   | 125/200 [14:32<07:36,  6.09s/it]Tuning global sampler:  63%|██████▎   | 126/200 [14:38<07:28,  6.06s/it]Tuning global sampler:  64%|██████▎   | 127/200 [14:44<07:21,  6.05s/it]Tuning global sampler:  64%|██████▍   | 128/200 [14:50<07:14,  6.03s/it]Tuning global sampler:  64%|██████▍   | 129/200 [14:56<07:08,  6.04s/it]Tuning global sampler:  65%|██████▌   | 130/200 [15:02<07:02,  6.03s/it]Tuning global sampler:  66%|██████▌   | 131/200 [15:08<06:55,  6.02s/it]Tuning global sampler:  66%|██████▌   | 132/200 [15:14<06:48,  6.01s/it]Tuning global sampler:  66%|██████▋   | 133/200 [15:20<06:41,  6.00s/it]Tuning global sampler:  67%|██████▋   | 134/200 [15:26<06:35,  6.00s/it]Tuning global sampler:  68%|██████▊   | 135/200 [15:32<06:29,  6.00s/it]Tuning global sampler:  68%|██████▊   | 136/200 [15:38<06:24,  6.00s/it]Tuning global sampler:  68%|██████▊   | 137/200 [15:44<06:18,  6.00s/it]Tuning global sampler:  69%|██████▉   | 138/200 [15:50<06:12,  6.00s/it]Tuning global sampler:  70%|██████▉   | 139/200 [15:56<06:06,  6.00s/it]Tuning global sampler:  70%|███████   | 140/200 [16:02<06:00,  6.00s/it]Tuning global sampler:  70%|███████   | 141/200 [16:08<05:54,  6.00s/it]Tuning global sampler:  71%|███████   | 142/200 [16:15<06:06,  6.33s/it]Tuning global sampler:  72%|███████▏  | 143/200 [16:21<05:54,  6.22s/it]Tuning global sampler:  72%|███████▏  | 144/200 [16:27<05:44,  6.14s/it]Tuning global sampler:  72%|███████▎  | 145/200 [16:33<05:35,  6.10s/it]Tuning global sampler:  73%|███████▎  | 146/200 [16:39<05:27,  6.07s/it]Tuning global sampler:  74%|███████▎  | 147/200 [16:45<05:20,  6.05s/it]Tuning global sampler:  74%|███████▍  | 148/200 [16:51<05:13,  6.04s/it]Tuning global sampler:  74%|███████▍  | 149/200 [16:57<05:07,  6.03s/it]Tuning global sampler:  75%|███████▌  | 150/200 [17:03<05:01,  6.02s/it]Tuning global sampler:  76%|███████▌  | 151/200 [17:09<04:54,  6.02s/it]Tuning global sampler:  76%|███████▌  | 152/200 [17:15<04:48,  6.01s/it]Tuning global sampler:  76%|███████▋  | 153/200 [17:21<04:42,  6.01s/it]Tuning global sampler:  77%|███████▋  | 154/200 [17:27<04:35,  6.00s/it]Tuning global sampler:  78%|███████▊  | 155/200 [17:33<04:29,  5.99s/it]Tuning global sampler:  78%|███████▊  | 156/200 [17:39<04:23,  6.00s/it]Tuning global sampler:  78%|███████▊  | 157/200 [17:45<04:17,  6.00s/it]Tuning global sampler:  79%|███████▉  | 158/200 [17:51<04:12,  6.00s/it]Tuning global sampler:  80%|███████▉  | 159/200 [17:57<04:06,  6.00s/it]Tuning global sampler:  80%|████████  | 160/200 [18:03<04:00,  6.00s/it]Tuning global sampler:  80%|████████  | 161/200 [18:09<03:54,  6.00s/it]Tuning global sampler:  81%|████████  | 162/200 [18:16<04:00,  6.33s/it]Tuning global sampler:  82%|████████▏ | 163/200 [18:22<03:50,  6.23s/it]Tuning global sampler:  82%|████████▏ | 164/200 [18:28<03:41,  6.17s/it]Tuning global sampler:  82%|████████▎ | 165/200 [18:34<03:33,  6.11s/it]Tuning global sampler:  83%|████████▎ | 166/200 [18:40<03:26,  6.06s/it]Tuning global sampler:  84%|████████▎ | 167/200 [18:46<03:19,  6.05s/it]Tuning global sampler:  84%|████████▍ | 168/200 [18:52<03:13,  6.03s/it]Tuning global sampler:  84%|████████▍ | 169/200 [18:58<03:06,  6.03s/it]Tuning global sampler:  85%|████████▌ | 170/200 [19:04<03:00,  6.02s/it]Tuning global sampler:  86%|████████▌ | 171/200 [19:10<02:54,  6.02s/it]Tuning global sampler:  86%|████████▌ | 172/200 [19:16<02:48,  6.02s/it]Tuning global sampler:  86%|████████▋ | 173/200 [19:22<02:42,  6.02s/it]Tuning global sampler:  87%|████████▋ | 174/200 [19:28<02:36,  6.01s/it]Tuning global sampler:  88%|████████▊ | 175/200 [19:34<02:30,  6.01s/it]Tuning global sampler:  88%|████████▊ | 176/200 [19:40<02:24,  6.00s/it]Tuning global sampler:  88%|████████▊ | 177/200 [19:46<02:17,  5.99s/it]Tuning global sampler:  89%|████████▉ | 178/200 [19:52<02:11,  6.00s/it]Tuning global sampler:  90%|████████▉ | 179/200 [19:58<02:06,  6.00s/it]Tuning global sampler:  90%|█████████ | 180/200 [20:04<02:00,  6.00s/it]Tuning global sampler:  90%|█████████ | 181/200 [20:10<01:54,  6.00s/it]Tuning global sampler:  91%|█████████ | 182/200 [20:16<01:48,  6.01s/it]Tuning global sampler:  92%|█████████▏| 183/200 [20:23<01:47,  6.34s/it]Tuning global sampler:  92%|█████████▏| 184/200 [20:29<01:39,  6.24s/it]Tuning global sampler:  92%|█████████▎| 185/200 [20:35<01:32,  6.17s/it]Tuning global sampler:  93%|█████████▎| 186/200 [20:41<01:25,  6.12s/it]Tuning global sampler:  94%|█████████▎| 187/200 [20:47<01:19,  6.08s/it]Tuning global sampler:  94%|█████████▍| 188/200 [20:53<01:12,  6.05s/it]Tuning global sampler:  94%|█████████▍| 189/200 [20:59<01:06,  6.03s/it]Tuning global sampler:  95%|█████████▌| 190/200 [21:05<01:00,  6.02s/it]Tuning global sampler:  96%|█████████▌| 191/200 [21:11<00:54,  6.02s/it]Tuning global sampler:  96%|█████████▌| 192/200 [21:17<00:48,  6.02s/it]Tuning global sampler:  96%|█████████▋| 193/200 [21:23<00:42,  6.01s/it]Tuning global sampler:  97%|█████████▋| 194/200 [21:29<00:36,  6.01s/it]Tuning global sampler:  98%|█████████▊| 195/200 [21:35<00:30,  6.01s/it]Tuning global sampler:  98%|█████████▊| 196/200 [21:41<00:24,  6.01s/it]Tuning global sampler:  98%|█████████▊| 197/200 [21:47<00:18,  6.01s/it]Tuning global sampler:  99%|█████████▉| 198/200 [21:53<00:11,  6.00s/it]Tuning global sampler: 100%|█████████▉| 199/200 [21:59<00:05,  5.99s/it]Tuning global sampler: 100%|██████████| 200/200 [22:05<00:00,  6.00s/it]Tuning global sampler: 100%|██████████| 200/200 [22:05<00:00,  6.63s/it]
Compiling MALA body
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:04<00:43,  4.82s/it]Production run:  20%|██        | 2/10 [00:09<00:38,  4.82s/it]Production run:  30%|███       | 3/10 [00:14<00:33,  4.82s/it]Production run:  40%|████      | 4/10 [00:19<00:28,  4.82s/it]Production run:  50%|█████     | 5/10 [00:24<00:24,  4.82s/it]Production run:  60%|██████    | 6/10 [00:28<00:19,  4.82s/it]Production run:  70%|███████   | 7/10 [00:33<00:14,  4.82s/it]Production run:  80%|████████  | 8/10 [00:38<00:09,  4.82s/it]Production run:  90%|█████████ | 9/10 [00:43<00:04,  4.82s/it]Production run: 100%|██████████| 10/10 [00:48<00:00,  4.82s/it]Production run: 100%|██████████| 10/10 [00:48<00:00,  4.82s/it]
11:58 ninjax INFO    : Saving samples to ./ET/injection_18/results_training.npz
11:58 ninjax INFO    : Saving the NF
11:58 ninjax INFO    : Time taken: 1380.2846727371216 seconds (23.004744545618692 minutes)
11:58 ninjax INFO    : Creating the final corner plot
11:58 ninjax INFO    : Dumping the final production chains
11:58 ninjax INFO    : Chains shape is: (13, 220000)
11:58 ninjax INFO    : Key: M_c: ESS = 14583, Rhat = 1.041312360467816
11:58 ninjax INFO    : Key: q: ESS = 16819, Rhat = 1.0365271326386372
11:58 ninjax INFO    : Key: s1_z: ESS = 17499, Rhat = 1.0348900999462145
11:58 ninjax INFO    : Key: s2_z: ESS = 13985, Rhat = 1.043685918010919
11:58 ninjax INFO    : Key: lambda_1: ESS = 18038, Rhat = 1.0335478552368906
11:58 ninjax INFO    : Key: lambda_2: ESS = 15058, Rhat = 1.0398162277281287
11:58 ninjax INFO    : Key: cos_iota: ESS = 15360, Rhat = 1.0399647091827027
11:58 ninjax INFO    : Key: d_L: ESS = 10405, Rhat = 1.0589588457420336
11:58 ninjax INFO    : Key: t_c: ESS = 17261, Rhat = 1.0485661328283118
11:58 ninjax INFO    : Key: phase_c: ESS = 16983, Rhat = 1.0387031120599615
11:58 ninjax INFO    : Key: psi: ESS = 15935, Rhat = 1.0490766063540344
11:58 ninjax INFO    : Key: ra: ESS = 8350, Rhat = 1.07408987122779
11:58 ninjax INFO    : Key: sin_dec: ESS = 6879, Rhat = 1.09106064542187
11:58 ninjax INFO    : Key: eta: ESS = 16819, Rhat = 1.0365271326386372
11:58 ninjax INFO    : Key: iota: ESS = 15360, Rhat = 1.0399647091827027
11:58 ninjax INFO    : Key: dec: ESS = 6879, Rhat = 1.09106064542187
11:58 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.521 +/- 0.030
q: 0.745 +/- 0.140
s1_z: -0.001 +/- 0.029
s2_z: 0.005 +/- 0.026
lambda_1: 501.562 +/- 985.572
lambda_2: 716.192 +/- 1032.122
cos_iota: -0.650 +/- 0.322
d_L: 645.988 +/- 225.282
t_c: 0.050 +/- 0.010
phase_c: 3.563 +/- 1.681
psi: 1.345 +/- 0.800
ra: 5.164 +/- 0.966
sin_dec: -0.456 +/- 0.324
Log probability: 1873.830 +/- 476.921
Local acceptance: 0.081 +/- 0.273
Global acceptance: 0.018 +/- 0.134
Max loss: 49.744, Min loss: -0.645
Production summary
==========
M_c: 1.521 +/- 0.000
q: 0.691 +/- 0.109
s1_z: 0.011 +/- 0.026
s2_z: 0.005 +/- 0.028
lambda_1: 89.649 +/- 68.934
lambda_2: 282.010 +/- 180.225
cos_iota: -0.697 +/- 0.137
d_L: 556.370 +/- 71.866
t_c: 0.049 +/- 0.003
phase_c: 3.661 +/- 1.719
psi: 1.412 +/- 0.843
ra: 5.491 +/- 0.431
sin_dec: -0.512 +/- 0.287
Log probability: 2059.822 +/- 2.390
Local acceptance: 0.049 +/- 0.215
Global acceptance: 0.045 +/- 0.208
DONE

JOB STATISTICS
==============
Job ID: 10874082
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:19:33
CPU Efficiency: 4.66% of 06:59:28 core-walltime
Job Wall-clock time: 00:26:13
Memory Utilized: 4.75 GB
Memory Efficiency: 47.51% of 10.00 GB
