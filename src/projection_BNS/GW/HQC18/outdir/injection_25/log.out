Thu Mar 27 21:29:28 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
21:29 ninjax INFO    : Checking and setting outdir
21:29 ninjax INFO    : The outdir is set to ./outdir/injection_25
21:29 ninjax INFO    : Loading the given config
21:29 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
21:29 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
21:29 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/outdir/injection_25/complete_config.json
21:29 ninjax INFO    : No seed specified. Generating a random seed: 855014
21:29 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 757560
21:29 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 890688
21:29 ninjax INFO    : Loading the priors
21:29 ninjax INFO    :    Mc_prior = Uniform(1.0, 2.2, naming=["M_c"])
21:29 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
21:29 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
21:29 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
21:29 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
21:29 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
21:29 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
21:29 ninjax INFO    :    dL_prior = PowerLaw(1.0, 460.0, 2.0, naming=["d_L"])
21:29 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
21:29 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
21:29 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
21:29 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
21:29 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
21:29 ninjax INFO    : Finished prior setup
21:29 ninjax INFO    : Setting the transforms
21:29 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
21:29 ninjax INFO    : transforms_str_list has 3 elements
21:29 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
21:29 ninjax INFO    : Setting the likelihood
21:29 ninjax INFO    : GW likelihood provided, setting up the GW pipe
21:29 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
21:29 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
21:29 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
21:29 ninjax INFO    : self.is_BNS_run is True
21:29 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
21:29 ninjax INFO    : GW run is an injection
21:29 ninjax INFO    : Setting up GW injection . . . 
21:29 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
21:29 ninjax INFO    : Generating new injection
21:29 ninjax INFO    : Sanity check: generated parameters:
21:29 ninjax INFO    : {'M_c': 1.9200808333115669, 'q': 0.3660100879209919, 's1_z': -0.00895214463235907, 's2_z': 0.027857729074076937, 'lambda_1': 862.0510031306505, 'lambda_2': 2243.7141270984393, 'cos_iota': -0.6745329573863486, 'd_L': 358.00052120749825, 't_c': -0.02235603297287403, 'phase_c': 0.3067011808057092, 'psi': 2.443998721707769, 'ra': 5.0405512473175245, 'sin_dec': 0.052714267524489156}
21:29 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
21:29 ninjax INFO    : Injected lambda_1: 7.039733026387287
21:29 ninjax INFO    : Injected lambda_2: 298.88563482227505
21:29 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.9200808333115669 is 128.0
21:29 ninjax INFO    : After transforms, the injection parameters are:
21:29 ninjax INFO    : {'M_c': 1.9200808333115669, 'q': 0.3660100879209919, 's1_z': -0.00895214463235907, 's2_z': 0.027857729074076937, 'lambda_1': 7.039733026387287, 'lambda_2': 298.88563482227505, 'cos_iota': -0.6745329573863486, 'd_L': 358.00052120749825, 't_c': -0.02235603297287403, 'phase_c': 0.3067011808057092, 'psi': 2.443998721707769, 'ra': 5.0405512473175245, 'sin_dec': 0.052714267524489156, 'eta': 0.1961486133681539, 'iota': Array(2.31112821, dtype=float64, weak_type=True), 'dec': Array(0.05273871, dtype=float64, weak_type=True)}
21:29 ninjax INFO    : The trial injection parameters are {'M_c': 1.9200808333115669, 'eta': 0.1961486133681539, 's1_z': -0.00895214463235907, 's2_z': 0.027857729074076937, 'lambda_1': 7.039733026387287, 'lambda_2': 298.88563482227505, 'd_L': 358.00052120749825, 'phase_c': 0.3067011808057092, 'iota': 2.311128206729779, 't_c': -0.02235603297287403, 'psi': 2.443998721707769, 'ra': 5.0405512473175245, 'dec': 0.05273871178507071}
21:29 ninjax INFO    : Injecting signals . . .
21:29 ninjax INFO    : self.ifos
21:29 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
21:29 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [-8.09589825e-24+9.62328146e-24j -3.98225681e-24+1.61340084e-23j
 -3.31843355e-23-5.68289744e-24j ...
  2.14870869e-23-1.69169112e-23j -1.99972492e-23-1.55879936e-23j
 -1.06823155e-23-1.84293845e-23j]
21:29 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
21:29 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [-6.17381389e-23+7.53496664e-23j  8.18794678e-25+1.23539629e-24j
 -5.38927326e-23+1.27543278e-23j ...
  6.51797071e-24-3.35831054e-24j  3.16463613e-23+1.85340149e-23j
  3.06786127e-23-7.24189420e-24j]
21:29 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
21:29 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [ 2.71090096e-23+5.04537116e-23j -8.80597893e-23-5.57481234e-23j
  7.72397657e-24+2.09905535e-23j ...
  2.43220089e-23-1.50297747e-23j  4.75096071e-23+2.18466649e-24j
  2.99938026e-23-1.52884007e-23j]
21:29 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
21:29 ninjax INFO    : SNR for ifo H1 is 3.3498548400706514
21:29 ninjax INFO    : SNR for ifo L1 is 9.717055166991228
21:29 ninjax INFO    : SNR for ifo V1 is 4.417737495946112
21:29 ninjax INFO    : The network SNR is 11.18745248709392
21:29 ninjax INFO    : The network SNR does not pass the threshold, trying again
21:29 ninjax INFO    : Generating new injection
21:29 ninjax INFO    : Sanity check: generated parameters:
21:29 ninjax INFO    : {'M_c': 1.5243306475582958, 'q': 0.16567191015131583, 's1_z': -0.03672964022081848, 's2_z': 0.04600308391561002, 'lambda_1': 2922.287043128716, 'lambda_2': 1798.83477223308, 'cos_iota': -0.6695255357343535, 'd_L': 443.11003856476964, 't_c': -0.07287050355922582, 'phase_c': 0.9568780411748228, 'psi': 0.9302986967565791, 'ra': 1.288624910261625, 'sin_dec': 0.7041507854798761}
21:29 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
21:29 ninjax INFO    : Injected lambda_1: 7.039733026387287
21:29 ninjax INFO    : Injected lambda_2: 8203.844587946827
21:29 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.5243306475582958 is 128.0
21:29 ninjax INFO    : After transforms, the injection parameters are:
21:29 ninjax INFO    : {'M_c': 1.5243306475582958, 'q': 0.16567191015131583, 's1_z': -0.03672964022081848, 's2_z': 0.04600308391561002, 'lambda_1': 7.039733026387287, 'lambda_2': 8203.844587946827, 'cos_iota': -0.6695255357343535, 'd_L': 443.11003856476964, 't_c': -0.07287050355922582, 'phase_c': 0.9568780411748228, 'psi': 0.9302986967565791, 'ra': 1.288624910261625, 'sin_dec': 0.7041507854798761, 'eta': 0.12192596940467133, 'iota': Array(2.30436617, dtype=float64, weak_type=True), 'dec': Array(0.78122644, dtype=float64, weak_type=True)}
21:29 ninjax INFO    : The trial injection parameters are {'M_c': 1.5243306475582958, 'eta': 0.12192596940467133, 's1_z': -0.03672964022081848, 's2_z': 0.04600308391561002, 'lambda_1': 7.039733026387287, 'lambda_2': 8203.844587946827, 'd_L': 443.11003856476964, 'phase_c': 0.9568780411748228, 'iota': 2.304366169757015, 't_c': -0.07287050355922582, 'psi': 0.9302986967565791, 'ra': 1.288624910261625, 'dec': 0.7812264436885689}
21:29 ninjax INFO    : Injecting signals . . .
21:29 ninjax INFO    : self.ifos
21:29 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
21:29 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [-9.47639290e-24+1.24217606e-23j -3.19097794e-24+2.14630063e-23j
 -2.72893706e-23-4.23754289e-24j ...
  2.14870869e-23-1.69169112e-23j -1.99972492e-23-1.55879936e-23j
 -1.06823155e-23-1.84293845e-23j]
21:29 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
21:29 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [-5.55121327e-23+7.22249597e-23j -3.57628748e-24-7.19605930e-24j
 -5.87720984e-23+1.53472185e-23j ...
  6.51797071e-24-3.35831054e-24j  3.16463613e-23+1.85340149e-23j
  3.06786127e-23-7.24189420e-24j]
21:29 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
21:29 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [ 2.79500975e-23+4.66626863e-23j -8.75018939e-23-5.60640411e-23j
  7.60404054e-24+1.64270349e-23j ...
  2.43220089e-23-1.50297747e-23j  4.75096071e-23+2.18466649e-24j
  2.99938026e-23-1.52884007e-23j]
21:29 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
21:29 ninjax INFO    : SNR for ifo H1 is 9.75186339276046
21:29 ninjax INFO    : SNR for ifo L1 is 10.496869647229975
21:29 ninjax INFO    : SNR for ifo V1 is 4.982280356138643
21:29 ninjax INFO    : The network SNR is 15.169252768978586
21:29 ninjax INFO    : Network SNR passes threshold
21:29 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
21:29 ninjax INFO    :    M_c: 1.5243306475582958
21:29 ninjax INFO    :    q: 0.16567191015131583
21:29 ninjax INFO    :    s1_z: -0.03672964022081848
21:29 ninjax INFO    :    s2_z: 0.04600308391561002
21:29 ninjax INFO    :    lambda_1: 7.039733026387287
21:29 ninjax INFO    :    lambda_2: 8203.844587946827
21:29 ninjax INFO    :    cos_iota: -0.6695255357343535
21:29 ninjax INFO    :    d_L: 443.11003856476964
21:29 ninjax INFO    :    t_c: -0.07287050355922582
21:29 ninjax INFO    :    phase_c: 0.9568780411748228
21:29 ninjax INFO    :    psi: 0.9302986967565791
21:29 ninjax INFO    :    ra: 1.288624910261625
21:29 ninjax INFO    :    sin_dec: 0.7041507854798761
21:29 ninjax INFO    :    eta: 0.12192596940467133
21:29 ninjax INFO    :    iota: 2.304366169757015
21:29 ninjax INFO    :    dec: 0.7812264436885689
21:29 ninjax INFO    :    H1_SNR: 9.75186339276046
21:29 ninjax INFO    :    L1_SNR: 10.496869647229975
21:29 ninjax INFO    :    V1_SNR: 4.982280356138643
21:29 ninjax INFO    :    network_SNR: 15.169252768978586
21:29 ninjax INFO    :    epoch: 126.0
21:29 ninjax INFO    :    gmst: 2.7288901910520846
21:29 ninjax INFO    :    duration: 128.0
21:29 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
21:29 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
21:29 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
21:32 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 147.09491157531738 seconds = 2.451581859588623 minutes
21:32 ninjax INFO    : The priors are not modified after their initialization
21:32 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
21:32 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
21:32 ninjax INFO    : sample: {'M_c': Array([1.69404632, 1.91775386, 2.19842646], dtype=float64), 'q': Array([0.50121643, 0.3342374 , 0.47441149], dtype=float64), 's1_z': Array([0.04560601, 0.02601168, 0.02164977], dtype=float64), 's2_z': Array([0.04763613, 0.04761114, 0.00421565], dtype=float64), 'lambda_1': Array([3893.68745663, 4534.88388531, 1995.88952796], dtype=float64), 'lambda_2': Array([ 702.05622172, 4995.72066846, 4294.46062653], dtype=float64), 'cos_iota': Array([-0.17156789, -0.67934126,  0.72321349], dtype=float64), 'd_L': Array([159.80341299, 342.9034515 , 285.60347632], dtype=float64), 't_c': Array([-0.01588808, -0.03982303, -0.05991094], dtype=float64), 'phase_c': Array([0.42018245, 4.33703271, 0.6057469 ], dtype=float64), 'psi': Array([1.03050923, 0.76833828, 0.32164979], dtype=float64), 'ra': Array([2.68066383, 5.1450523 , 4.71965344], dtype=float64), 'sin_dec': Array([0.77990575, 0.00721509, 0.827758  ], dtype=float64)}
21:32 ninjax INFO    : log_prob: [-152.70297375  -60.96549942 -242.59973823]
21:32 ninjax INFO    : Checking log_prob at injection parameters: {'M_c': 1.5243306475582958, 'q': 0.16567191015131583, 's1_z': -0.03672964022081848, 's2_z': 0.04600308391561002, 'lambda_1': 7.039733026387287, 'lambda_2': 8203.844587946827, 'cos_iota': -0.6695255357343535, 'd_L': 443.11003856476964, 't_c': -0.07287050355922582, 'phase_c': 0.9568780411748228, 'psi': 0.9302986967565791, 'ra': 1.288624910261625, 'sin_dec': 0.7041507854798761, 'eta': 0.12192596940467133, 'iota': Array(2.30436617, dtype=float64, weak_type=True), 'dec': Array(0.78122644, dtype=float64, weak_type=True), 'H1_SNR': 9.75186339276046, 'L1_SNR': 10.496869647229975, 'V1_SNR': 4.982280356138643, 'network_SNR': 15.169252768978586, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
21:32 ninjax INFO    : log_prob at the injection parameters is: -inf
21:32 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
21:32 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
21:32 ninjax INFO    : Ninjax setup complete.
21:32 ninjax INFO    : Saving output to ./outdir/injection_25/
21:32 ninjax INFO    : Using polynomial learning rate scheduler
21:32 ninjax INFO    : The hyperparameters passed to flowMC and jim are
21:32 ninjax INFO    :    n_loop_training: 200
21:32 ninjax INFO    :    n_loop_production: 10
21:32 ninjax INFO    :    n_local_steps: 100
21:32 ninjax INFO    :    n_global_steps: 1000
21:32 ninjax INFO    :    n_epochs: 25
21:32 ninjax INFO    :    n_chains: 1000
21:32 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x14e450790d30>
21:32 ninjax INFO    :    max_samples: 50000
21:32 ninjax INFO    :    momentum: 0.9
21:32 ninjax INFO    :    batch_size: 30000
21:32 ninjax INFO    :    use_global: True
21:32 ninjax INFO    :    keep_quantile: 0.0
21:32 ninjax INFO    :    train_thinning: 10
21:32 ninjax INFO    :    output_thinning: 50
21:32 ninjax INFO    :    n_sample_max: 10000
21:32 ninjax INFO    :    num_layers: 10
21:32 ninjax INFO    :    hidden_size: [128, 128]
21:32 ninjax INFO    :    num_bins: 8
21:32 ninjax INFO    :    save_training_chains: False
21:32 ninjax INFO    :    eps_mass_matrix: 1e-05
21:32 ninjax INFO    :    use_scheduler: True
21:32 ninjax INFO    :    use_temperature: False
21:32 ninjax INFO    :    which_temperature_schedule: exponential
21:32 ninjax INFO    :    starting_temperature: 2.0
21:32 ninjax INFO    :    stop_tempering_iteration: 75
21:32 ninjax INFO    :    stopping_criterion_global_acc: 0.1
21:32 ninjax INFO    :    stopping_criterion_loss: -inf
21:32 ninjax INFO    :    nf_model_kwargs: {}
21:32 ninjax INFO    :    local sampler arg not shown (pretty print)
21:32 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-7.87445847e-24 -5.10411475e-24 -3.16249895e-23  3.61386758e-23
 -1.80770738e-25  3.50856543e-23 -4.14556716e-23  1.16001917e-23
 -4.01518341e-23 -1.72472683e-23]
[ 8.06538372e-24  1.72363886e-23 -5.88283942e-24 -2.45345322e-23
  3.75348550e-23  8.37837293e-24 -8.48069332e-23 -3.69919752e-23
 -8.81509289e-23 -4.91151627e-23]
Checking the noise that was generated in inject_signal ifo:
[-5.74241002e-23 -1.70238881e-24 -5.41807019e-23 -5.61266914e-24
 -7.17037673e-23  2.28353819e-23  6.31942263e-25 -2.23605092e-24
 -1.93388357e-23 -4.76382581e-23]
[ 7.68408161e-23 -2.56709772e-24  1.73055139e-23 -7.93907679e-23
 -1.47760231e-23  1.66646784e-23  2.76882611e-23  7.93336968e-23
 -8.57607225e-24 -1.10494263e-23]
Checking the noise that was generated in inject_signal ifo:
[ 2.55005824e-23 -8.80424647e-23  9.29535042e-24 -3.03163657e-23
 -1.06609230e-22 -3.03435982e-23  3.34036575e-24  3.44681513e-23
 -2.14696245e-23 -1.05395612e-22]
[ 4.83786414e-23 -5.31239426e-23  1.88902943e-23  3.16191005e-23
 -1.05265836e-22  7.63135554e-23  5.02270759e-23  1.26930866e-24
  1.94137974e-23  8.34561791e-24]
Checking the noise that was generated in inject_signal ifo:
[-7.87445847e-24 -5.10411475e-24 -3.16249895e-23  3.61386758e-23
 -1.80770738e-25  3.50856543e-23 -4.14556716e-23  1.16001917e-23
 -4.01518341e-23 -1.72472683e-23]
[ 8.06538372e-24  1.72363886e-23 -5.88283942e-24 -2.45345322e-23
  3.75348550e-23  8.37837293e-24 -8.48069332e-23 -3.69919752e-23
 -8.81509289e-23 -4.91151627e-23]
Checking the noise that was generated in inject_signal ifo:
[-5.74241002e-23 -1.70238881e-24 -5.41807019e-23 -5.61266914e-24
 -7.17037673e-23  2.28353819e-23  6.31942263e-25 -2.23605092e-24
 -1.93388357e-23 -4.76382581e-23]
[ 7.68408161e-23 -2.56709772e-24  1.73055139e-23 -7.93907679e-23
 -1.47760231e-23  1.66646784e-23  2.76882611e-23  7.93336968e-23
 -8.57607225e-24 -1.10494263e-23]
Checking the noise that was generated in inject_signal ifo:
[ 2.55005824e-23 -8.80424647e-23  9.29535042e-24 -3.03163657e-23
 -1.06609230e-22 -3.03435982e-23  3.34036575e-24  3.44681513e-23
 -2.14696245e-23 -1.05395612e-22]
[ 4.83786414e-23 -5.31239426e-23  1.88902943e-23  3.16191005e-23
 -1.05265836e-22  7.63135554e-23  5.02270759e-23  1.26930866e-24
  1.94137974e-23  8.34561791e-24]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.10877871513366699 seconds
Using provided reference parameters:
ref_params for relative binning:
{'M_c': 1.5243306475582958, 'q': 0.16567191015131583, 's1_z': -0.03672964022081848, 's2_z': 0.04600308391561002, 'lambda_1': 7.039733026387287, 'lambda_2': 8203.844587946827, 'cos_iota': -0.6695255357343535, 'd_L': 443.11003856476964, 't_c': -0.07287050355922582, 'phase_c': 0.9568780411748228, 'psi': 0.9302986967565791, 'ra': 1.288624910261625, 'sin_dec': 0.7041507854798761, 'eta': 0.12192596940467133, 'iota': Array(2.30436617, dtype=float64, weak_type=True), 'dec': Array(0.78122644, dtype=float64, weak_type=True), 'H1_SNR': 9.75186339276046, 'L1_SNR': 10.496869647229975, 'V1_SNR': 4.982280356138643, 'network_SNR': 15.169252768978586, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5116317272186279 seconds
Time for h_sky_low and h_sky_center: 5.375723600387573 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.6529510021209717
Going to compute coefficients . . .
Time for computing coefficients: 126.14704728126526 seconds
Time for computing coefficients: 6.881876707077026 seconds
Time for computing coefficients: 6.870739221572876 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:01<6:42:57, 121.50s/it]Tuning global sampler:   1%|          | 2/200 [02:06<2:54:00, 52.73s/it] Tuning global sampler:   2%|▏         | 3/200 [02:10<1:41:00, 30.76s/it]Tuning global sampler:   2%|▏         | 4/200 [02:16<1:07:52, 20.78s/it]Tuning global sampler:   2%|▎         | 5/200 [02:20<48:35, 14.95s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:25<37:01, 11.45s/it]Tuning global sampler:   4%|▎         | 7/200 [02:30<29:35,  9.20s/it]Tuning global sampler:   4%|▍         | 8/200 [02:34<24:47,  7.75s/it]Tuning global sampler:   4%|▍         | 9/200 [02:39<21:29,  6.75s/it]Tuning global sampler:   5%|▌         | 10/200 [02:43<19:08,  6.04s/it]Tuning global sampler:   6%|▌         | 11/200 [02:48<17:40,  5.61s/it]Tuning global sampler:   6%|▌         | 12/200 [02:52<16:38,  5.31s/it]Tuning global sampler:   6%|▋         | 13/200 [02:57<15:51,  5.09s/it]Tuning global sampler:   7%|▋         | 14/200 [03:02<15:22,  4.96s/it]Tuning global sampler:   8%|▊         | 15/200 [03:06<15:00,  4.87s/it]Tuning global sampler:   8%|▊         | 16/200 [03:11<14:44,  4.81s/it]Tuning global sampler:   8%|▊         | 17/200 [03:16<14:32,  4.77s/it]Tuning global sampler:   9%|▉         | 18/200 [03:20<14:21,  4.73s/it]Tuning global sampler:  10%|▉         | 19/200 [03:25<14:12,  4.71s/it]Tuning global sampler:  10%|█         | 20/200 [03:30<14:04,  4.69s/it]Tuning global sampler:  10%|█         | 21/200 [03:34<13:58,  4.68s/it]Tuning global sampler:  11%|█         | 22/200 [03:40<14:38,  4.93s/it]Tuning global sampler:  12%|█▏        | 23/200 [03:44<14:16,  4.84s/it]Tuning global sampler:  12%|█▏        | 24/200 [03:49<13:51,  4.72s/it]Tuning global sampler:  12%|█▎        | 25/200 [03:53<13:30,  4.63s/it]Tuning global sampler:  13%|█▎        | 26/200 [03:58<13:13,  4.56s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:02<13:01,  4.52s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:07<12:52,  4.49s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:11<12:44,  4.47s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:15<12:36,  4.45s/it]Tuning global sampler:  16%|█▌        | 31/200 [04:20<12:30,  4.44s/it]Tuning global sampler:  16%|█▌        | 32/200 [04:24<12:23,  4.43s/it]Tuning global sampler:  16%|█▋        | 33/200 [04:29<12:16,  4.41s/it]Tuning global sampler:  17%|█▋        | 34/200 [04:33<12:09,  4.40s/it]Tuning global sampler:  18%|█▊        | 35/200 [04:37<12:05,  4.40s/it]Tuning global sampler:  18%|█▊        | 36/200 [04:42<12:01,  4.40s/it]Tuning global sampler:  18%|█▊        | 37/200 [04:46<11:57,  4.40s/it]Tuning global sampler:  19%|█▉        | 38/200 [04:51<11:53,  4.40s/it]Tuning global sampler:  20%|█▉        | 39/200 [04:55<11:49,  4.41s/it]Tuning global sampler:  20%|██        | 40/200 [04:59<11:45,  4.41s/it]Tuning global sampler:  20%|██        | 41/200 [05:04<11:41,  4.41s/it]Tuning global sampler:  21%|██        | 42/200 [05:09<12:21,  4.69s/it]Tuning global sampler:  22%|██▏       | 43/200 [05:14<12:04,  4.61s/it]Tuning global sampler:  22%|██▏       | 44/200 [05:18<11:48,  4.54s/it]Tuning global sampler:  22%|██▎       | 45/200 [05:22<11:36,  4.49s/it]Tuning global sampler:  23%|██▎       | 46/200 [05:27<11:28,  4.47s/it]Tuning global sampler:  24%|██▎       | 47/200 [05:31<11:21,  4.45s/it]Tuning global sampler:  24%|██▍       | 48/200 [05:36<11:14,  4.44s/it]Tuning global sampler:  24%|██▍       | 49/200 [05:40<11:09,  4.43s/it]Tuning global sampler:  25%|██▌       | 50/200 [05:44<11:04,  4.43s/it]Tuning global sampler:  26%|██▌       | 51/200 [05:49<10:58,  4.42s/it]Tuning global sampler:  26%|██▌       | 52/200 [05:53<10:53,  4.41s/it]Tuning global sampler:  26%|██▋       | 53/200 [05:58<10:48,  4.41s/it]Tuning global sampler:  27%|██▋       | 54/200 [06:02<10:44,  4.42s/it]Tuning global sampler:  28%|██▊       | 55/200 [06:06<10:38,  4.40s/it]Tuning global sampler:  28%|██▊       | 56/200 [06:11<10:32,  4.39s/it]Tuning global sampler:  28%|██▊       | 57/200 [06:15<10:29,  4.40s/it]Tuning global sampler:  29%|██▉       | 58/200 [06:20<10:26,  4.41s/it]Tuning global sampler:  30%|██▉       | 59/200 [06:24<10:21,  4.41s/it]Tuning global sampler:  30%|███       | 60/200 [06:28<10:17,  4.41s/it]Tuning global sampler:  30%|███       | 61/200 [06:33<10:12,  4.41s/it]Tuning global sampler:  31%|███       | 62/200 [06:38<10:49,  4.70s/it]Tuning global sampler:  32%|███▏      | 63/200 [06:43<10:32,  4.62s/it]Tuning global sampler:  32%|███▏      | 64/200 [06:47<10:19,  4.55s/it]Tuning global sampler:  32%|███▎      | 65/200 [06:51<10:09,  4.51s/it]Tuning global sampler:  33%|███▎      | 66/200 [06:56<09:58,  4.47s/it]Tuning global sampler:  34%|███▎      | 67/200 [07:00<09:50,  4.44s/it]Tuning global sampler:  34%|███▍      | 68/200 [07:05<09:44,  4.43s/it]Tuning global sampler:  34%|███▍      | 69/200 [07:09<09:39,  4.42s/it]Tuning global sampler:  35%|███▌      | 70/200 [07:13<09:34,  4.42s/it]Tuning global sampler:  36%|███▌      | 71/200 [07:18<09:30,  4.42s/it]Tuning global sampler:  36%|███▌      | 72/200 [07:22<09:26,  4.42s/it]Tuning global sampler:  36%|███▋      | 73/200 [07:27<09:21,  4.42s/it]Tuning global sampler:  37%|███▋      | 74/200 [07:31<09:15,  4.41s/it]Tuning global sampler:  38%|███▊      | 75/200 [07:36<09:12,  4.42s/it]Tuning global sampler:  38%|███▊      | 76/200 [07:40<09:07,  4.42s/it]Tuning global sampler:  38%|███▊      | 77/200 [07:44<09:02,  4.41s/it]Tuning global sampler:  39%|███▉      | 78/200 [07:49<08:56,  4.40s/it]Tuning global sampler:  40%|███▉      | 79/200 [07:53<08:52,  4.40s/it]Tuning global sampler:  40%|████      | 80/200 [07:57<08:48,  4.41s/it]Tuning global sampler:  40%|████      | 81/200 [08:02<08:45,  4.42s/it]Tuning global sampler:  41%|████      | 82/200 [08:07<09:16,  4.71s/it]Tuning global sampler:  42%|████▏     | 83/200 [08:12<09:00,  4.62s/it]Tuning global sampler:  42%|████▏     | 84/200 [08:16<08:50,  4.57s/it]Tuning global sampler:  42%|████▎     | 85/200 [08:21<08:40,  4.53s/it]Tuning global sampler:  43%|████▎     | 86/200 [08:25<08:32,  4.50s/it]Tuning global sampler:  44%|████▎     | 87/200 [08:30<08:26,  4.48s/it]Tuning global sampler:  44%|████▍     | 88/200 [08:34<08:18,  4.45s/it]Tuning global sampler:  44%|████▍     | 89/200 [08:38<08:11,  4.43s/it]Tuning global sampler:  45%|████▌     | 90/200 [08:43<08:06,  4.43s/it]Tuning global sampler:  46%|████▌     | 91/200 [08:47<08:01,  4.42s/it]Tuning global sampler:  46%|████▌     | 92/200 [08:52<07:58,  4.43s/it]Tuning global sampler:  46%|████▋     | 93/200 [08:56<07:54,  4.44s/it]Tuning global sampler:  47%|████▋     | 94/200 [09:00<07:50,  4.44s/it]Tuning global sampler:  48%|████▊     | 95/200 [09:05<07:45,  4.44s/it]Tuning global sampler:  48%|████▊     | 96/200 [09:09<07:42,  4.45s/it]Tuning global sampler:  48%|████▊     | 97/200 [09:14<07:38,  4.45s/it]Tuning global sampler:  49%|████▉     | 98/200 [09:18<07:33,  4.45s/it]Tuning global sampler:  50%|████▉     | 99/200 [09:23<07:27,  4.43s/it]Tuning global sampler:  50%|█████     | 100/200 [09:27<07:21,  4.41s/it]Tuning global sampler:  50%|█████     | 101/200 [09:33<07:52,  4.77s/it]Tuning global sampler:  51%|█████     | 102/200 [09:37<07:37,  4.67s/it]Tuning global sampler:  52%|█████▏    | 103/200 [09:41<07:25,  4.59s/it]Tuning global sampler:  52%|█████▏    | 104/200 [09:46<07:15,  4.54s/it]Tuning global sampler:  52%|█████▎    | 105/200 [09:50<07:07,  4.50s/it]Tuning global sampler:  53%|█████▎    | 106/200 [09:55<07:00,  4.48s/it]Tuning global sampler:  54%|█████▎    | 107/200 [09:59<06:54,  4.45s/it]Tuning global sampler:  54%|█████▍    | 108/200 [10:03<06:48,  4.44s/it]Tuning global sampler:  55%|█████▍    | 109/200 [10:08<06:42,  4.43s/it]Tuning global sampler:  55%|█████▌    | 110/200 [10:12<06:37,  4.41s/it]Tuning global sampler:  56%|█████▌    | 111/200 [10:17<06:31,  4.40s/it]Tuning global sampler:  56%|█████▌    | 112/200 [10:21<06:27,  4.41s/it]Tuning global sampler:  56%|█████▋    | 113/200 [10:25<06:23,  4.41s/it]Tuning global sampler:  57%|█████▋    | 114/200 [10:30<06:19,  4.41s/it]Tuning global sampler:  57%|█████▋    | 114/200 [10:34<07:58,  5.57s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.22s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.22s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.22s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.22s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.22s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.22s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.22s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.22s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]
21:43 ninjax INFO    : Saving samples to ./outdir/injection_25/results_training.npz
21:43 ninjax INFO    : Saving the NF
21:43 ninjax INFO    : Time taken: 676.6215336322784 seconds (11.277025560537973 minutes)
21:43 ninjax INFO    : Creating the final corner plot
21:43 ninjax INFO    : Dumping the final production chains
21:43 ninjax INFO    : Chains shape is: (13, 220000)
21:43 ninjax INFO    : Key: M_c: ESS = 19823, Rhat = 1.030562183354549
21:43 ninjax INFO    : Key: q: ESS = 25803, Rhat = 1.0260399468922177
21:43 ninjax INFO    : Key: s1_z: ESS = 22571, Rhat = 1.0270446959749302
21:43 ninjax INFO    : Key: s2_z: ESS = 24544, Rhat = 1.0250747673093232
21:43 ninjax INFO    : Key: lambda_1: ESS = 16429, Rhat = 1.0374859457134933
21:43 ninjax INFO    : Key: lambda_2: ESS = 28195, Rhat = 1.0234648288406265
21:43 ninjax INFO    : Key: cos_iota: ESS = 19368, Rhat = 1.0311917708386746
21:43 ninjax INFO    : Key: d_L: ESS = 15278, Rhat = 1.0395213370742655
21:43 ninjax INFO    : Key: t_c: ESS = 17537, Rhat = 1.0353941931938129
21:43 ninjax INFO    : Key: phase_c: ESS = 19471, Rhat = 1.032558464183769
21:43 ninjax INFO    : Key: psi: ESS = 19360, Rhat = 1.032015657257996
21:43 ninjax INFO    : Key: ra: ESS = 14961, Rhat = 1.0395322847286734
21:43 ninjax INFO    : Key: sin_dec: ESS = 14794, Rhat = 1.0401479478475588
21:43 ninjax INFO    : Key: eta: ESS = 25803, Rhat = 1.0260037647899864
21:43 ninjax INFO    : Key: iota: ESS = 19368, Rhat = 1.0311917708386746
21:43 ninjax INFO    : Key: dec: ESS = 14794, Rhat = 1.0401479478475588
21:43 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.507 +/- 0.146
q: 0.284 +/- 0.212
s1_z: -0.006 +/- 0.028
s2_z: 0.000 +/- 0.028
lambda_1: 1989.149 +/- 1455.140
lambda_2: 2492.006 +/- 1400.887
cos_iota: -0.147 +/- 0.334
d_L: 389.484 +/- 50.610
t_c: -0.058 +/- 0.041
phase_c: 3.022 +/- 1.720
psi: 1.563 +/- 0.859
ra: 2.841 +/- 1.490
sin_dec: -0.027 +/- 0.617
Log probability: 46.567 +/- 49.362
Local acceptance: 0.939 +/- 0.239
Global acceptance: 0.010 +/- 0.097
Max loss: 22.782, Min loss: 1.431
Production summary
==========
M_c: 1.525 +/- 0.000
q: 0.163 +/- 0.010
s1_z: -0.011 +/- 0.027
s2_z: -0.002 +/- 0.029
lambda_1: 313.563 +/- 166.294
lambda_2: 2498.340 +/- 1438.607
cos_iota: -0.605 +/- 0.124
d_L: 393.665 +/- 48.574
t_c: -0.069 +/- 0.002
phase_c: 3.166 +/- 1.795
psi: 1.648 +/- 0.880
ra: 1.280 +/- 0.020
sin_dec: 0.700 +/- 0.014
Log probability: 103.891 +/- 2.141
Local acceptance: 0.866 +/- 0.341
Global acceptance: 0.106 +/- 0.308
DONE

JOB STATISTICS
==============
Job ID: 10848217
Cluster: snellius
User/Group: twouters2/twouters2
State: RUNNING
Nodes: 1
Cores per node: 16
CPU Utilized: 00:00:00
CPU Efficiency: 0.00% of 03:55:28 core-walltime
Job Wall-clock time: 00:14:43
Memory Utilized: 0.00 MB (estimated maximum)
Memory Efficiency: 0.00% of 10.00 GB (10.00 GB/node)
WARNING: Efficiency statistics may be misleading for RUNNING jobs.
