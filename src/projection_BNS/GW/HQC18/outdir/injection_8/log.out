Wed Mar 26 17:50:23 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
17:50 ninjax INFO    : Checking and setting outdir
17:50 ninjax INFO    : The outdir is set to ./outdir/injection_8
17:50 ninjax INFO    : Loading the given config
17:50 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
17:50 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
17:50 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/outdir/injection_8/complete_config.json
17:50 ninjax INFO    : No seed specified. Generating a random seed: 348756
17:50 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 985843
17:50 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 39459
17:50 ninjax INFO    : Loading the priors
17:50 ninjax INFO    :    Mc_prior = Uniform(1.0, 2.2, naming=["M_c"])
17:50 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
17:50 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
17:50 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
17:50 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
17:50 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
17:50 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
17:50 ninjax INFO    :    dL_prior = PowerLaw(1.0, 460.0, 2.0, naming=["d_L"])
17:50 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
17:50 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
17:50 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
17:50 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
17:50 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
17:50 ninjax INFO    : Finished prior setup
17:50 ninjax INFO    : Setting the transforms
17:50 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
17:50 ninjax INFO    : transforms_str_list has 3 elements
17:50 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
17:50 ninjax INFO    : Setting the likelihood
17:50 ninjax INFO    : GW likelihood provided, setting up the GW pipe
17:50 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
17:50 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
17:50 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
17:50 ninjax INFO    : self.is_BNS_run is True
17:50 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
17:50 ninjax INFO    : GW run is an injection
17:50 ninjax INFO    : Setting up GW injection . . . 
17:50 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
17:50 ninjax INFO    : Generating new injection
17:50 ninjax INFO    : Sanity check: generated parameters:
17:50 ninjax INFO    : {'M_c': 1.6932314749129733, 'q': 0.4237477050802898, 's1_z': 0.02529923294465035, 's2_z': -0.0480255201436344, 'lambda_1': 3922.656036861617, 'lambda_2': 1031.964932832282, 'cos_iota': -0.23747964359878182, 'd_L': 443.8964780840592, 't_c': 0.03058427749874787, 'phase_c': 4.100619305626065, 'psi': 0.7606976019651889, 'ra': 4.530347209556846, 'sin_dec': -0.6518879628958665}
17:50 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
17:50 ninjax INFO    : Injected lambda_1: 7.039733026387287
17:50 ninjax INFO    : Injected lambda_2: 430.4129611637446
17:50 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.6932314749129733 is 128.0
17:50 ninjax INFO    : After transforms, the injection parameters are:
17:50 ninjax INFO    : {'M_c': 1.6932314749129733, 'q': 0.4237477050802898, 's1_z': 0.02529923294465035, 's2_z': -0.0480255201436344, 'lambda_1': 7.039733026387287, 'lambda_2': 430.4129611637446, 'cos_iota': -0.23747964359878182, 'd_L': 443.8964780840592, 't_c': 0.03058427749874787, 'phase_c': 4.100619305626065, 'psi': 0.7606976019651889, 'ra': 4.530347209556846, 'sin_dec': -0.6518879628958665, 'eta': 0.20904572232669838, 'iota': Array(1.81056677, dtype=float64, weak_type=True), 'dec': Array(-0.71007146, dtype=float64, weak_type=True)}
17:50 ninjax INFO    : The trial injection parameters are {'M_c': 1.6932314749129733, 'eta': 0.20904572232669838, 's1_z': 0.02529923294465035, 's2_z': -0.0480255201436344, 'lambda_1': 7.039733026387287, 'lambda_2': 430.4129611637446, 'd_L': 443.8964780840592, 'phase_c': 4.100619305626065, 'iota': 1.810566770684568, 't_c': 0.03058427749874787, 'psi': 0.7606976019651889, 'ra': 4.530347209556846, 'dec': -0.7100714613174238}
17:50 ninjax INFO    : Injecting signals . . .
17:50 ninjax INFO    : self.ifos
17:50 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
17:50 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [-3.52102460e-23+1.84286383e-23j  4.06410592e-23-6.94949969e-23j
 -6.82525459e-23-5.49388278e-24j ...
 -2.07103735e-23+1.65435610e-23j -1.45039552e-23+4.63924487e-23j
  7.55111115e-24+2.05597662e-24j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [ 7.41606325e-23-5.48718377e-23j  1.49793939e-23+3.27530191e-23j
 -3.60217383e-23-5.32917012e-23j ...
  2.33308440e-24-1.17730258e-23j  4.68338578e-24+6.83641033e-24j
 -9.89404539e-24+1.17571630e-23j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [ 4.63551884e-23+2.60575588e-23j  7.14646630e-24-4.56976738e-23j
 -1.16072714e-23+8.71094452e-23j ...
 -1.19459664e-23+2.19002021e-23j  5.09967579e-24-6.13074353e-23j
 -5.97370911e-23+6.83189772e-24j]
17:50 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
17:50 ninjax INFO    : SNR for ifo H1 is 3.98299936206568
17:50 ninjax INFO    : SNR for ifo L1 is 5.001141170900297
17:50 ninjax INFO    : SNR for ifo V1 is 4.354066508039257
17:50 ninjax INFO    : The network SNR is 7.735217649550579
17:50 ninjax INFO    : The network SNR does not pass the threshold, trying again
17:50 ninjax INFO    : Generating new injection
17:50 ninjax INFO    : Sanity check: generated parameters:
17:50 ninjax INFO    : {'M_c': 1.3258645525103274, 'q': 0.7533522533100492, 's1_z': -0.03658510134924638, 's2_z': -0.02163992583360528, 'lambda_1': 3732.2493394846533, 'lambda_2': 4809.792292747682, 'cos_iota': 0.033874228772290405, 'd_L': 368.3691795383341, 't_c': -0.0025142135114687714, 'phase_c': 4.71165710437747, 'psi': 0.5083174984121915, 'ra': 3.345577817576348, 'sin_dec': -0.9175515476406018}
17:50 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
17:50 ninjax INFO    : Injected lambda_1: 52.63732401215318
17:50 ninjax INFO    : Injected lambda_2: 364.0373071674058
17:50 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.3258645525103274 is 256.0
17:50 ninjax INFO    : After transforms, the injection parameters are:
17:50 ninjax INFO    : {'M_c': 1.3258645525103274, 'q': 0.7533522533100492, 's1_z': -0.03658510134924638, 's2_z': -0.02163992583360528, 'lambda_1': 52.63732401215318, 'lambda_2': 364.0373071674058, 'cos_iota': 0.033874228772290405, 'd_L': 368.3691795383341, 't_c': -0.0025142135114687714, 'phase_c': 4.71165710437747, 'psi': 0.5083174984121915, 'ra': 3.345577817576348, 'sin_dec': -0.9175515476406018, 'eta': 0.24505283994294777, 'iota': Array(1.53691562, dtype=float64, weak_type=True), 'dec': Array(-1.16187824, dtype=float64, weak_type=True)}
17:50 ninjax INFO    : The trial injection parameters are {'M_c': 1.3258645525103274, 'eta': 0.24505283994294777, 's1_z': -0.03658510134924638, 's2_z': -0.02163992583360528, 'lambda_1': 52.63732401215318, 'lambda_2': 364.0373071674058, 'd_L': 368.3691795383341, 'phase_c': 4.71165710437747, 'iota': 1.5369156164357471, 't_c': -0.0025142135114687714, 'psi': 0.5083174984121915, 'ra': 3.345577817576348, 'dec': -1.1618782424496163}
17:50 ninjax INFO    : Injecting signals . . .
17:50 ninjax INFO    : self.ifos
17:50 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
17:50 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
17:50 ninjax INFO    : [2.99805284e-23-3.12076588e-23j 4.86905139e-23-1.51536286e-22j
 1.51789637e-23+1.15960810e-23j ...
 8.66679802e-24-1.23037151e-23j 3.25814026e-23-1.18658235e-23j
 4.07731518e-23+4.75798279e-24j]
17:50 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
17:50 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
17:50 ninjax INFO    : [-5.79068325e-23+2.19864181e-23j -2.57860648e-23-6.81757183e-23j
  1.60441973e-22+6.58029199e-23j ...
 -3.15448373e-24+1.53827038e-23j -1.64832757e-23+1.05827236e-23j
 -3.16465970e-23+6.41029343e-23j]
17:50 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
17:50 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
17:50 ninjax INFO    : [-8.10975866e-23+8.10210908e-23j -1.09679552e-22+5.49595321e-23j
  1.11990611e-22-7.05462367e-23j ...
  8.70348359e-24+4.31124748e-23j  8.72620244e-24-1.86755423e-23j
  4.65701059e-23+1.70159005e-23j]
17:50 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
17:50 ninjax INFO    : SNR for ifo H1 is 4.427156276096828
17:50 ninjax INFO    : SNR for ifo L1 is 2.619131560806462
17:50 ninjax INFO    : SNR for ifo V1 is 2.4215409777160235
17:50 ninjax INFO    : The network SNR is 5.685369252085031
17:50 ninjax INFO    : The network SNR does not pass the threshold, trying again
17:50 ninjax INFO    : Generating new injection
17:50 ninjax INFO    : Sanity check: generated parameters:
17:50 ninjax INFO    : {'M_c': 2.0677971972680225, 'q': 0.9672091993933949, 's1_z': -0.01593946655875924, 's2_z': 0.033112393528361914, 'lambda_1': 2936.925917471882, 'lambda_2': 2342.3488641030444, 'cos_iota': 0.7173951264832041, 'd_L': 402.6961598409205, 't_c': 0.005795199290676983, 'phase_c': 4.739604217831606, 'psi': 1.808375921169891, 'ra': 6.029539834293233, 'sin_dec': 0.5717039252801035}
17:50 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
17:50 ninjax INFO    : Injected lambda_1: 7.039733026387287
17:50 ninjax INFO    : Injected lambda_2: 7.039733026387287
17:50 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 2.0677971972680225 is 128.0
17:50 ninjax INFO    : After transforms, the injection parameters are:
17:50 ninjax INFO    : {'M_c': 2.0677971972680225, 'q': 0.9672091993933949, 's1_z': -0.01593946655875924, 's2_z': 0.033112393528361914, 'lambda_1': 7.039733026387287, 'lambda_2': 7.039733026387287, 'cos_iota': 0.7173951264832041, 'd_L': 402.6961598409205, 't_c': 0.005795199290676983, 'phase_c': 4.739604217831606, 'psi': 1.808375921169891, 'ra': 6.029539834293233, 'sin_dec': 0.5717039252801035, 'eta': 0.2499305386921637, 'iota': Array(0.7707403, dtype=float64, weak_type=True), 'dec': Array(0.60858115, dtype=float64, weak_type=True)}
17:50 ninjax INFO    : The trial injection parameters are {'M_c': 2.0677971972680225, 'eta': 0.2499305386921637, 's1_z': -0.01593946655875924, 's2_z': 0.033112393528361914, 'lambda_1': 7.039733026387287, 'lambda_2': 7.039733026387287, 'd_L': 402.6961598409205, 'phase_c': 4.739604217831606, 'iota': 0.7707402964607382, 't_c': 0.005795199290676983, 'psi': 1.808375921169891, 'ra': 6.029539834293233, 'dec': 0.6085811487925147}
17:50 ninjax INFO    : Injecting signals . . .
17:50 ninjax INFO    : self.ifos
17:50 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
17:50 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [-3.20432086e-23+2.58173471e-23j  4.13320842e-23-7.66084764e-23j
 -6.98664609e-23-8.38964744e-25j ...
 -2.06858886e-23+1.65472867e-23j -1.44799567e-23+4.63985693e-23j
  7.57438953e-24+2.06443257e-24j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [ 6.95959514e-23-5.71900242e-23j  1.62179302e-23+3.52493314e-23j
 -3.73034584e-23-5.32927125e-23j ...
  2.34560145e-24-1.17687319e-23j  4.69542072e-24+6.84191246e-24j
 -9.88260887e-24+1.17638202e-23j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [ 4.06999880e-23+2.75240177e-23j  1.06228836e-23-4.38539958e-23j
 -1.24642268e-23+8.67627980e-23j ...
 -1.19593069e-23+2.18972756e-23j  5.08668439e-24-6.13116492e-23j
 -5.97496094e-23+6.82643662e-24j]
17:50 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
17:50 ninjax INFO    : SNR for ifo H1 is 13.289349065016799
17:50 ninjax INFO    : SNR for ifo L1 is 7.100603799926278
17:50 ninjax INFO    : SNR for ifo V1 is 5.782004337009197
17:50 ninjax INFO    : The network SNR is 16.1386786029273
17:50 ninjax INFO    : Network SNR passes threshold
17:50 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
17:50 ninjax INFO    :    M_c: 2.0677971972680225
17:50 ninjax INFO    :    q: 0.9672091993933949
17:50 ninjax INFO    :    s1_z: -0.01593946655875924
17:50 ninjax INFO    :    s2_z: 0.033112393528361914
17:50 ninjax INFO    :    lambda_1: 7.039733026387287
17:50 ninjax INFO    :    lambda_2: 7.039733026387287
17:50 ninjax INFO    :    cos_iota: 0.7173951264832041
17:50 ninjax INFO    :    d_L: 402.6961598409205
17:50 ninjax INFO    :    t_c: 0.005795199290676983
17:50 ninjax INFO    :    phase_c: 4.739604217831606
17:50 ninjax INFO    :    psi: 1.808375921169891
17:50 ninjax INFO    :    ra: 6.029539834293233
17:50 ninjax INFO    :    sin_dec: 0.5717039252801035
17:50 ninjax INFO    :    eta: 0.2499305386921637
17:50 ninjax INFO    :    iota: 0.7707402964607382
17:50 ninjax INFO    :    dec: 0.6085811487925147
17:50 ninjax INFO    :    H1_SNR: 13.289349065016799
17:50 ninjax INFO    :    L1_SNR: 7.100603799926278
17:50 ninjax INFO    :    V1_SNR: 5.782004337009197
17:50 ninjax INFO    :    network_SNR: 16.1386786029273
17:50 ninjax INFO    :    epoch: 126.0
17:50 ninjax INFO    :    gmst: 2.7288901910520846
17:50 ninjax INFO    :    duration: 128.0
17:50 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
17:50 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
17:50 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
17:53 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 143.57408833503723 seconds = 2.3929014722506206 minutes
17:53 ninjax INFO    : The priors are not modified after their initialization
17:53 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
17:53 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
17:53 ninjax INFO    : sample: {'M_c': Array([1.39214193, 1.25744686, 1.24976745], dtype=float64), 'q': Array([0.40709942, 0.7221405 , 0.13565238], dtype=float64), 's1_z': Array([-0.01343617, -0.00179098, -0.02173036], dtype=float64), 's2_z': Array([-0.01131566,  0.0409562 ,  0.01730137], dtype=float64), 'lambda_1': Array([ 733.16602586, 1751.8611663 , 4648.48741168], dtype=float64), 'lambda_2': Array([4875.71671397, 4513.69378375,  825.08941726], dtype=float64), 'cos_iota': Array([ 0.60218525, -0.56438086, -0.87447645], dtype=float64), 'd_L': Array([448.54865934, 357.41884969, 403.99355367], dtype=float64), 't_c': Array([0.03072306, 0.0826303 , 0.0346214 ], dtype=float64), 'phase_c': Array([1.24419357, 1.47481996, 1.96659813], dtype=float64), 'psi': Array([1.23910709, 0.77327332, 0.10435139], dtype=float64), 'ra': Array([4.1653679 , 5.91914009, 0.70907836], dtype=float64), 'sin_dec': Array([ 0.69431072, -0.80167961, -0.19038485], dtype=float64)}
17:53 ninjax INFO    : log_prob: [-26.90975433 -49.79552367 -81.6928864 ]
17:53 ninjax INFO    : Checking log_prob at injection parameters: {'M_c': 2.0677971972680225, 'q': 0.9672091993933949, 's1_z': -0.01593946655875924, 's2_z': 0.033112393528361914, 'lambda_1': 7.039733026387287, 'lambda_2': 7.039733026387287, 'cos_iota': 0.7173951264832041, 'd_L': 402.6961598409205, 't_c': 0.005795199290676983, 'phase_c': 4.739604217831606, 'psi': 1.808375921169891, 'ra': 6.029539834293233, 'sin_dec': 0.5717039252801035, 'eta': 0.2499305386921637, 'iota': Array(0.7707403, dtype=float64, weak_type=True), 'dec': Array(0.60858115, dtype=float64, weak_type=True), 'H1_SNR': 13.289349065016799, 'L1_SNR': 7.100603799926278, 'V1_SNR': 5.782004337009197, 'network_SNR': 16.1386786029273, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
17:53 ninjax INFO    : log_prob at the injection parameters is: 99.92805776728082
17:53 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
17:53 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
17:53 ninjax INFO    : Ninjax setup complete.
17:53 ninjax INFO    : Saving output to ./outdir/injection_8/
17:53 ninjax INFO    : Using polynomial learning rate scheduler
17:53 ninjax INFO    : The hyperparameters passed to flowMC and jim are
17:53 ninjax INFO    :    n_loop_training: 200
17:53 ninjax INFO    :    n_loop_production: 10
17:53 ninjax INFO    :    n_local_steps: 100
17:53 ninjax INFO    :    n_global_steps: 1000
17:53 ninjax INFO    :    n_epochs: 25
17:53 ninjax INFO    :    n_chains: 1000
17:53 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x14962bf1d3f0>
17:53 ninjax INFO    :    max_samples: 50000
17:53 ninjax INFO    :    momentum: 0.9
17:53 ninjax INFO    :    batch_size: 30000
17:53 ninjax INFO    :    use_global: True
17:53 ninjax INFO    :    keep_quantile: 0.0
17:53 ninjax INFO    :    train_thinning: 10
17:53 ninjax INFO    :    output_thinning: 50
17:53 ninjax INFO    :    n_sample_max: 10000
17:53 ninjax INFO    :    num_layers: 10
17:53 ninjax INFO    :    hidden_size: [128, 128]
17:53 ninjax INFO    :    num_bins: 8
17:53 ninjax INFO    :    save_training_chains: False
17:53 ninjax INFO    :    eps_mass_matrix: 1e-05
17:53 ninjax INFO    :    use_scheduler: True
17:53 ninjax INFO    :    use_temperature: False
17:53 ninjax INFO    :    which_temperature_schedule: exponential
17:53 ninjax INFO    :    starting_temperature: 2.0
17:53 ninjax INFO    :    stop_tempering_iteration: 75
17:53 ninjax INFO    :    stopping_criterion_global_acc: 0.1
17:53 ninjax INFO    :    stopping_criterion_loss: -inf
17:53 ninjax INFO    :    nf_model_kwargs: {}
17:53 ninjax INFO    :    local sampler arg not shown (pretty print)
17:53 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-3.43139665e-23  4.22145168e-23 -6.93353852e-23 -1.36677278e-23
  1.73037975e-23  3.40935564e-23 -7.99452904e-24 -5.89606589e-23
  3.82862174e-25  1.45077166e-23]
[ 2.00568448e-23 -7.04826386e-23 -7.00235893e-24  1.93500079e-23
  3.48193194e-23 -4.76447862e-23  7.53962934e-23  4.36782639e-24
 -3.23456503e-23 -3.92935256e-23]
Checking the noise that was generated in inject_signal ifo:
[ 7.28841941e-23  1.31030854e-23 -3.45226583e-23 -6.09588636e-23
  8.85349498e-24  3.26102023e-24  2.63391802e-23  1.68403713e-23
  1.19935346e-22  9.23238631e-24]
[-5.68255067e-23  3.41388722e-23 -5.15059538e-23 -1.90746944e-23
 -5.61184613e-23  2.61349836e-23 -1.00843009e-23 -5.17410368e-23
  1.99181800e-25  1.21056029e-22]
Checking the noise that was generated in inject_signal ifo:
[ 4.37812132e-23  7.28783239e-24 -9.05312549e-24  6.90477935e-23
  1.83705293e-23  7.95738917e-24  7.78486642e-24  1.20259552e-23
  3.19763104e-23 -3.20012978e-23]
[ 2.60525308e-23 -4.31287609e-23  8.68101669e-23  4.95917216e-23
 -1.10279023e-23 -5.36936331e-24 -9.98326518e-23 -5.85009352e-23
  1.70315651e-24 -8.67759105e-25]
Checking the noise that was generated in inject_signal ifo:
[ 3.11282566e-23  4.81601654e-23  1.50374669e-23  5.83363236e-23
  4.10591883e-23  9.88720540e-23 -9.72590739e-23  2.66390418e-23
  1.31608204e-23  5.65865735e-23]
[-2.95143752e-23 -1.53511458e-22  1.36358452e-23 -3.61734573e-23
  3.33295889e-23 -1.05131505e-23 -5.31489582e-23 -4.94536217e-24
 -4.61101079e-23 -5.36516525e-23]
Checking the noise that was generated in inject_signal ifo:
[-5.78934851e-23 -2.61947020e-23  1.61199025e-22 -2.48129225e-23
 -4.48241748e-23 -2.48527159e-23  4.46100420e-23  1.08256635e-22
  3.91847051e-23 -1.24427339e-24]
[ 2.07763013e-23 -6.70369006e-23  6.48594726e-23  5.07126885e-23
 -8.72694652e-23  7.22618562e-23  2.61870994e-23 -8.11925743e-23
  5.97251945e-23 -1.09463792e-23]
Checking the noise that was generated in inject_signal ifo:
[-7.99790050e-23 -1.11022772e-22  1.13410264e-22 -9.50145342e-23
  6.40062718e-23 -2.04534477e-23  3.44895271e-23 -1.00498833e-23
 -2.34213870e-24  3.35262377e-23]
[ 8.01458516e-23  5.54200819e-23 -7.05440328e-23  6.49046074e-23
 -7.25289408e-23 -8.55549185e-24 -6.86779558e-23  4.87161944e-23
 -1.42136034e-22  4.58191518e-23]
Checking the noise that was generated in inject_signal ifo:
[-3.43139665e-23  4.22145168e-23 -6.93353852e-23 -1.36677278e-23
  1.73037975e-23  3.40935564e-23 -7.99452904e-24 -5.89606589e-23
  3.82862174e-25  1.45077166e-23]
[ 2.00568448e-23 -7.04826386e-23 -7.00235893e-24  1.93500079e-23
  3.48193194e-23 -4.76447862e-23  7.53962934e-23  4.36782639e-24
 -3.23456503e-23 -3.92935256e-23]
Checking the noise that was generated in inject_signal ifo:
[ 7.28841941e-23  1.31030854e-23 -3.45226583e-23 -6.09588636e-23
  8.85349498e-24  3.26102023e-24  2.63391802e-23  1.68403713e-23
  1.19935346e-22  9.23238631e-24]
[-5.68255067e-23  3.41388722e-23 -5.15059538e-23 -1.90746944e-23
 -5.61184613e-23  2.61349836e-23 -1.00843009e-23 -5.17410368e-23
  1.99181800e-25  1.21056029e-22]
Checking the noise that was generated in inject_signal ifo:
[ 4.37812132e-23  7.28783239e-24 -9.05312549e-24  6.90477935e-23
  1.83705293e-23  7.95738917e-24  7.78486642e-24  1.20259552e-23
  3.19763104e-23 -3.20012978e-23]
[ 2.60525308e-23 -4.31287609e-23  8.68101669e-23  4.95917216e-23
 -1.10279023e-23 -5.36936331e-24 -9.98326518e-23 -5.85009352e-23
  1.70315651e-24 -8.67759105e-25]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.1082158088684082 seconds
Using provided reference parameters:
ref_params for relative binning:
{'M_c': 2.0677971972680225, 'q': 0.9672091993933949, 's1_z': -0.01593946655875924, 's2_z': 0.033112393528361914, 'lambda_1': 7.039733026387287, 'lambda_2': 7.039733026387287, 'cos_iota': 0.7173951264832041, 'd_L': 402.6961598409205, 't_c': 0.005795199290676983, 'phase_c': 4.739604217831606, 'psi': 1.808375921169891, 'ra': 6.029539834293233, 'sin_dec': 0.5717039252801035, 'eta': 0.2499305386921637, 'iota': Array(0.7707403, dtype=float64, weak_type=True), 'dec': Array(0.60858115, dtype=float64, weak_type=True), 'H1_SNR': 13.289349065016799, 'L1_SNR': 7.100603799926278, 'V1_SNR': 5.782004337009197, 'network_SNR': 16.1386786029273, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5069427490234375 seconds
Time for h_sky_low and h_sky_center: 5.2596540451049805 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.6883463859558105
Going to compute coefficients . . .
Time for computing coefficients: 122.87596487998962 seconds
Time for computing coefficients: 6.932274341583252 seconds
Time for computing coefficients: 6.6766979694366455 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:01<6:42:15, 121.28s/it]Tuning global sampler:   1%|          | 2/200 [02:05<2:53:37, 52.61s/it] Tuning global sampler:   2%|▏         | 3/200 [02:10<1:40:44, 30.68s/it]Tuning global sampler:   2%|▏         | 4/200 [02:15<1:06:36, 20.39s/it]Tuning global sampler:   2%|▎         | 5/200 [02:19<47:45, 14.69s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:25<37:23, 11.56s/it]Tuning global sampler:   4%|▎         | 7/200 [02:29<29:47,  9.26s/it]Tuning global sampler:   4%|▍         | 8/200 [02:34<24:52,  7.77s/it]Tuning global sampler:   4%|▍         | 9/200 [02:38<21:30,  6.76s/it]Tuning global sampler:   5%|▌         | 10/200 [02:43<19:06,  6.04s/it]Tuning global sampler:   6%|▌         | 11/200 [02:47<17:35,  5.59s/it]Tuning global sampler:   6%|▌         | 12/200 [02:52<16:32,  5.28s/it]Tuning global sampler:   6%|▋         | 13/200 [02:56<15:46,  5.06s/it]Tuning global sampler:   7%|▋         | 14/200 [03:01<15:17,  4.93s/it]Tuning global sampler:   8%|▊         | 15/200 [03:06<14:55,  4.84s/it]Tuning global sampler:   8%|▊         | 16/200 [03:10<14:39,  4.78s/it]Tuning global sampler:   8%|▊         | 17/200 [03:15<14:27,  4.74s/it]Tuning global sampler:   9%|▉         | 18/200 [03:20<14:17,  4.71s/it]Tuning global sampler:  10%|▉         | 19/200 [03:24<14:08,  4.69s/it]Tuning global sampler:  10%|█         | 20/200 [03:29<13:59,  4.67s/it]Tuning global sampler:  10%|█         | 21/200 [03:33<13:53,  4.65s/it]Tuning global sampler:  11%|█         | 22/200 [03:38<13:44,  4.63s/it]Tuning global sampler:  12%|█▏        | 23/200 [03:43<13:38,  4.62s/it]Tuning global sampler:  12%|█▏        | 24/200 [03:47<13:21,  4.56s/it]Tuning global sampler:  12%|█▎        | 25/200 [03:51<13:07,  4.50s/it]Tuning global sampler:  13%|█▎        | 26/200 [03:57<13:43,  4.74s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:01<13:20,  4.63s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:05<13:02,  4.55s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:10<12:48,  4.50s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:14<12:38,  4.46s/it]Tuning global sampler:  16%|█▌        | 31/200 [04:19<12:29,  4.43s/it]Tuning global sampler:  16%|█▌        | 32/200 [04:23<12:21,  4.41s/it]Tuning global sampler:  16%|█▋        | 33/200 [04:27<12:13,  4.39s/it]Tuning global sampler:  17%|█▋        | 34/200 [04:32<12:05,  4.37s/it]Tuning global sampler:  18%|█▊        | 35/200 [04:36<12:01,  4.37s/it]Tuning global sampler:  18%|█▊        | 36/200 [04:40<11:56,  4.37s/it]Tuning global sampler:  18%|█▊        | 37/200 [04:45<11:52,  4.37s/it]Tuning global sampler:  19%|█▉        | 38/200 [04:49<11:47,  4.37s/it]Tuning global sampler:  20%|█▉        | 39/200 [04:53<11:43,  4.37s/it]Tuning global sampler:  20%|██        | 40/200 [04:58<11:38,  4.37s/it]Tuning global sampler:  20%|██        | 41/200 [05:02<11:34,  4.37s/it]Tuning global sampler:  21%|██        | 42/200 [05:07<11:29,  4.37s/it]Tuning global sampler:  22%|██▏       | 43/200 [05:11<11:26,  4.37s/it]Tuning global sampler:  22%|██▏       | 44/200 [05:15<11:20,  4.36s/it]Tuning global sampler:  22%|██▎       | 45/200 [05:20<11:15,  4.36s/it]Tuning global sampler:  23%|██▎       | 46/200 [05:25<11:55,  4.65s/it]Tuning global sampler:  24%|██▎       | 47/200 [05:29<11:38,  4.57s/it]Tuning global sampler:  24%|██▍       | 48/200 [05:34<11:24,  4.51s/it]Tuning global sampler:  24%|██▍       | 49/200 [05:38<11:14,  4.47s/it]Tuning global sampler:  25%|██▌       | 50/200 [05:42<11:05,  4.44s/it]Tuning global sampler:  26%|██▌       | 51/200 [05:47<10:58,  4.42s/it]Tuning global sampler:  26%|██▌       | 52/200 [05:51<10:51,  4.40s/it]Tuning global sampler:  26%|██▋       | 53/200 [05:55<10:45,  4.39s/it]Tuning global sampler:  27%|██▋       | 54/200 [06:00<10:40,  4.39s/it]Tuning global sampler:  28%|██▊       | 55/200 [06:04<10:34,  4.38s/it]Tuning global sampler:  28%|██▊       | 56/200 [06:09<10:28,  4.36s/it]Tuning global sampler:  28%|██▊       | 57/200 [06:13<10:24,  4.37s/it]Tuning global sampler:  28%|██▊       | 57/200 [06:17<15:47,  6.63s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.21s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.21s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.21s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.21s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.21s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.21s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.21s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.21s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.21s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.21s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.21s/it]
18:00 ninjax INFO    : Saving samples to ./outdir/injection_8/results_training.npz
18:00 ninjax INFO    : Saving the NF
18:00 ninjax INFO    : Time taken: 416.72662687301636 seconds (6.945443781216939 minutes)
18:00 ninjax INFO    : Creating the final corner plot
18:00 ninjax INFO    : Dumping the final production chains
18:00 ninjax INFO    : Chains shape is: (13, 220000)
18:00 ninjax INFO    : Key: M_c: ESS = 38567, Rhat = 1.0172389052168478
18:00 ninjax INFO    : Key: q: ESS = 27710, Rhat = 1.0232351796123043
18:00 ninjax INFO    : Key: s1_z: ESS = 31225, Rhat = 1.0211584068044808
18:00 ninjax INFO    : Key: s2_z: ESS = 39871, Rhat = 1.017771584663577
18:00 ninjax INFO    : Key: lambda_1: ESS = 31247, Rhat = 1.0207842428656064
18:00 ninjax INFO    : Key: lambda_2: ESS = 38273, Rhat = 1.018572582016201
18:00 ninjax INFO    : Key: cos_iota: ESS = 52008, Rhat = 1.0146275647244374
18:00 ninjax INFO    : Key: d_L: ESS = 48758, Rhat = 1.0151059862243614
18:00 ninjax INFO    : Key: t_c: ESS = 38044, Rhat = 1.0189616622265651
18:00 ninjax INFO    : Key: phase_c: ESS = 27548, Rhat = 1.0237356092784853
18:00 ninjax INFO    : Key: psi: ESS = 32562, Rhat = 1.0213366174270517
18:00 ninjax INFO    : Key: ra: ESS = 45705, Rhat = 1.015805448284475
18:00 ninjax INFO    : Key: sin_dec: ESS = 45674, Rhat = 1.014992757609709
18:00 ninjax INFO    : Key: eta: ESS = 27710, Rhat = 1.0232351796123043
18:00 ninjax INFO    : Key: iota: ESS = 52008, Rhat = 1.0149668116975064
18:00 ninjax INFO    : Key: dec: ESS = 45674, Rhat = 1.014992757609709
18:00 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.988 +/- 0.242
q: 0.764 +/- 0.212
s1_z: 0.016 +/- 0.026
s2_z: 0.012 +/- 0.026
lambda_1: 1548.306 +/- 1444.897
lambda_2: 1588.081 +/- 1450.688
cos_iota: 0.253 +/- 0.327
d_L: 396.235 +/- 49.879
t_c: 0.003 +/- 0.022
phase_c: 3.311 +/- 1.744
psi: 1.444 +/- 0.837
ra: 5.479 +/- 1.169
sin_dec: 0.503 +/- 0.327
Log probability: 48.588 +/- 297.059
Local acceptance: 0.992 +/- 0.088
Global acceptance: 0.012 +/- 0.109
Max loss: 22.829, Min loss: 8.612
Production summary
==========
M_c: 2.068 +/- 0.000
q: 0.877 +/- 0.081
s1_z: 0.028 +/- 0.016
s2_z: 0.025 +/- 0.018
lambda_1: 237.566 +/- 242.371
lambda_2: 353.259 +/- 346.673
cos_iota: 0.624 +/- 0.141
d_L: 381.905 +/- 56.094
t_c: 0.007 +/- 0.001
phase_c: 3.226 +/- 1.820
psi: 1.522 +/- 0.879
ra: 6.057 +/- 0.030
sin_dec: 0.584 +/- 0.024
Log probability: 96.664 +/- 2.454
Local acceptance: 0.988 +/- 0.108
Global acceptance: 0.126 +/- 0.332
DONE

JOB STATISTICS
==============
Job ID: 10815234
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:09:26
CPU Efficiency: 5.74% of 02:44:16 core-walltime
Job Wall-clock time: 00:10:16
Memory Utilized: 4.41 GB
Memory Efficiency: 44.14% of 10.00 GB
