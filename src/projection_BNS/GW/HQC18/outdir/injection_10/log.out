Wed Mar 26 17:50:23 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
17:50 ninjax INFO    : Checking and setting outdir
17:50 ninjax INFO    : The outdir is set to ./outdir/injection_10
17:50 ninjax INFO    : Loading the given config
17:50 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
17:50 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
17:50 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/outdir/injection_10/complete_config.json
17:50 ninjax INFO    : No seed specified. Generating a random seed: 18871
17:50 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 774656
17:50 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 914258
17:50 ninjax INFO    : Loading the priors
17:50 ninjax INFO    :    Mc_prior = Uniform(1.0, 2.2, naming=["M_c"])
17:50 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
17:50 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
17:50 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
17:50 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
17:50 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
17:50 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
17:50 ninjax INFO    :    dL_prior = PowerLaw(1.0, 460.0, 2.0, naming=["d_L"])
17:50 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
17:50 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
17:50 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
17:50 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
17:50 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
17:50 ninjax INFO    : Finished prior setup
17:50 ninjax INFO    : Setting the transforms
17:50 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
17:50 ninjax INFO    : transforms_str_list has 3 elements
17:50 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
17:50 ninjax INFO    : Setting the likelihood
17:50 ninjax INFO    : GW likelihood provided, setting up the GW pipe
17:50 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
17:50 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
17:50 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
17:50 ninjax INFO    : self.is_BNS_run is True
17:50 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
17:50 ninjax INFO    : GW run is an injection
17:50 ninjax INFO    : Setting up GW injection . . . 
17:50 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
17:50 ninjax INFO    : Generating new injection
17:50 ninjax INFO    : Sanity check: generated parameters:
17:50 ninjax INFO    : {'M_c': 1.5845901933813957, 'q': 0.7924304792339422, 's1_z': 0.03801753589826509, 's2_z': -0.02364784115090346, 'lambda_1': 189.82327037153414, 'lambda_2': 393.868105225188, 'cos_iota': -0.570190200531179, 'd_L': 445.7082383071793, 't_c': 0.07288143994274585, 'phase_c': 0.21786761977391753, 'psi': 2.4195566235262778, 'ra': 2.8001208802393163, 'sin_dec': -0.22477906807274062}
17:50 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
17:50 ninjax INFO    : Injected lambda_1: 7.039733026387287
17:50 ninjax INFO    : Injected lambda_2: 95.93300772566775
17:50 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.5845901933813957 is 128.0
17:50 ninjax INFO    : After transforms, the injection parameters are:
17:50 ninjax INFO    : {'M_c': 1.5845901933813957, 'q': 0.7924304792339422, 's1_z': 0.03801753589826509, 's2_z': -0.02364784115090346, 'lambda_1': 7.039733026387287, 'lambda_2': 95.93300772566775, 'cos_iota': -0.570190200531179, 'd_L': 445.7082383071793, 't_c': 0.07288143994274585, 'phase_c': 0.21786761977391753, 'psi': 2.4195566235262778, 'ra': 2.8001208802393163, 'sin_dec': -0.22477906807274062, 'eta': 0.24664739387985882, 'iota': Array(2.17753369, dtype=float64, weak_type=True), 'dec': Array(-0.2267163, dtype=float64, weak_type=True)}
17:50 ninjax INFO    : The trial injection parameters are {'M_c': 1.5845901933813957, 'eta': 0.24664739387985882, 's1_z': 0.03801753589826509, 's2_z': -0.02364784115090346, 'lambda_1': 7.039733026387287, 'lambda_2': 95.93300772566775, 'd_L': 445.7082383071793, 'phase_c': 0.21786761977391753, 'iota': 2.1775336881679075, 't_c': 0.07288143994274585, 'psi': 2.4195566235262778, 'ra': 2.8001208802393163, 'dec': -0.22671629613810892}
17:50 ninjax INFO    : Injecting signals . . .
17:50 ninjax INFO    : self.ifos
17:50 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
17:50 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [ 2.28809250e-23+4.30486455e-23j -1.04596334e-22+9.14189918e-23j
 -5.92477375e-23-6.18442352e-23j ...
 -7.27326089e-24-1.19514660e-23j -4.38822829e-24+1.11480669e-23j
 -2.72245877e-23-3.02378944e-23j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [ 2.74959956e-23+3.33035783e-23j -2.65903888e-25-5.17849769e-23j
  4.44512055e-23+5.13153216e-23j ...
 -2.15147651e-24+3.73530288e-23j -6.57004357e-24+2.65937930e-23j
  2.98213838e-24+1.31216547e-23j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [-3.85001765e-23+1.71803778e-23j  4.05042574e-23+3.96331536e-23j
  5.53636991e-23+9.47199617e-23j ...
  3.98384919e-23-9.51259744e-24j -6.35228577e-23+3.88584712e-23j
 -2.82301146e-23-9.05748355e-25j]
17:50 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
17:50 ninjax INFO    : SNR for ifo H1 is 6.393780462924015
17:50 ninjax INFO    : SNR for ifo L1 is 3.773427845473239
17:50 ninjax INFO    : SNR for ifo V1 is 4.887241687273757
17:50 ninjax INFO    : The network SNR is 8.888437299260657
17:50 ninjax INFO    : The network SNR does not pass the threshold, trying again
17:50 ninjax INFO    : Generating new injection
17:50 ninjax INFO    : Sanity check: generated parameters:
17:50 ninjax INFO    : {'M_c': 1.6572241451613465, 'q': 0.19067924550682602, 's1_z': 0.024539470197845192, 's2_z': -0.029787675702728045, 'lambda_1': 4266.872719659546, 'lambda_2': 3086.7464018228575, 'cos_iota': 0.40626913226559846, 'd_L': 339.2863944916016, 't_c': 0.08291715906085009, 'phase_c': 5.950816957647759, 'psi': 1.7035140228289942, 'ra': 5.316142100154897, 'sin_dec': -0.6353513165640998}
17:50 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
17:50 ninjax INFO    : Injected lambda_1: 7.039733026387287
17:50 ninjax INFO    : Injected lambda_2: 3754.2054155743203
17:50 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.6572241451613465 is 128.0
17:50 ninjax INFO    : After transforms, the injection parameters are:
17:50 ninjax INFO    : {'M_c': 1.6572241451613465, 'q': 0.19067924550682602, 's1_z': 0.024539470197845192, 's2_z': -0.029787675702728045, 'lambda_1': 7.039733026387287, 'lambda_2': 3754.2054155743203, 'cos_iota': 0.40626913226559846, 'd_L': 339.2863944916016, 't_c': 0.08291715906085009, 'phase_c': 5.950816957647759, 'psi': 1.7035140228289942, 'ra': 5.316142100154897, 'sin_dec': -0.6353513165640998, 'eta': 0.13449739029223934, 'iota': Array(1.152429, dtype=float64, weak_type=True), 'dec': Array(-0.68846338, dtype=float64, weak_type=True)}
17:50 ninjax INFO    : The trial injection parameters are {'M_c': 1.6572241451613465, 'eta': 0.13449739029223934, 's1_z': 0.024539470197845192, 's2_z': -0.029787675702728045, 'lambda_1': 7.039733026387287, 'lambda_2': 3754.2054155743203, 'd_L': 339.2863944916016, 'phase_c': 5.950816957647759, 'iota': 1.1524290023442871, 't_c': 0.08291715906085009, 'psi': 1.7035140228289942, 'ra': 5.316142100154897, 'dec': -0.6884633766632589}
17:50 ninjax INFO    : Injecting signals . . .
17:50 ninjax INFO    : self.ifos
17:50 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
17:50 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [ 2.58524106e-23+4.50637329e-23j -1.01181339e-22+8.87296511e-23j
 -6.10371596e-23-6.64484698e-23j ...
 -7.28142716e-24-1.19571749e-23j -4.39582208e-24+1.11416161e-23j
 -2.72315419e-23-3.02450301e-23j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [ 2.24685333e-23+3.16880259e-23j -2.96903223e-24-4.71355185e-23j
  4.83718408e-23+5.48777637e-23j ...
 -2.14866365e-24+3.73581928e-23j -6.56773027e-24+2.65991993e-23j
  2.98393150e-24+1.31272550e-23j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [-3.35589994e-23+1.59718036e-23j  3.99475772e-23+3.57016386e-23j
  5.24668332e-23+9.52613411e-23j ...
  3.98295172e-23-9.50901350e-24j -6.35321324e-23+3.88611856e-23j
 -2.82396053e-23-9.03927947e-25j]
17:50 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
17:50 ninjax INFO    : SNR for ifo H1 is 5.538417096324549
17:50 ninjax INFO    : SNR for ifo L1 is 7.653353982006257
17:50 ninjax INFO    : SNR for ifo V1 is 8.752686370064017
17:50 ninjax INFO    : The network SNR is 12.8785639649557
17:50 ninjax INFO    : Network SNR passes threshold
17:50 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
17:50 ninjax INFO    :    M_c: 1.6572241451613465
17:50 ninjax INFO    :    q: 0.19067924550682602
17:50 ninjax INFO    :    s1_z: 0.024539470197845192
17:50 ninjax INFO    :    s2_z: -0.029787675702728045
17:50 ninjax INFO    :    lambda_1: 7.039733026387287
17:50 ninjax INFO    :    lambda_2: 3754.2054155743203
17:50 ninjax INFO    :    cos_iota: 0.40626913226559846
17:50 ninjax INFO    :    d_L: 339.2863944916016
17:50 ninjax INFO    :    t_c: 0.08291715906085009
17:50 ninjax INFO    :    phase_c: 5.950816957647759
17:50 ninjax INFO    :    psi: 1.7035140228289942
17:50 ninjax INFO    :    ra: 5.316142100154897
17:50 ninjax INFO    :    sin_dec: -0.6353513165640998
17:50 ninjax INFO    :    eta: 0.13449739029223934
17:50 ninjax INFO    :    iota: 1.1524290023442871
17:50 ninjax INFO    :    dec: -0.6884633766632589
17:50 ninjax INFO    :    H1_SNR: 5.538417096324549
17:50 ninjax INFO    :    L1_SNR: 7.653353982006257
17:50 ninjax INFO    :    V1_SNR: 8.752686370064017
17:50 ninjax INFO    :    network_SNR: 12.8785639649557
17:50 ninjax INFO    :    epoch: 126.0
17:50 ninjax INFO    :    gmst: 2.7288901910520846
17:50 ninjax INFO    :    duration: 128.0
17:50 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
17:50 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
17:50 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
17:53 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 141.90581798553467 seconds = 2.3650969664255777 minutes
17:53 ninjax INFO    : The priors are not modified after their initialization
17:53 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
17:53 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
17:53 ninjax INFO    : sample: {'M_c': Array([1.12231064, 2.08690486, 1.50729741], dtype=float64), 'q': Array([0.72230319, 0.5826982 , 0.79931616], dtype=float64), 's1_z': Array([-0.02192694, -0.02932923,  0.04863904], dtype=float64), 's2_z': Array([-0.02435153,  0.0253    ,  0.03887452], dtype=float64), 'lambda_1': Array([3869.277092  , 4225.34774344, 2928.57613204], dtype=float64), 'lambda_2': Array([3833.41425409, 3738.94776769, 4658.42386821], dtype=float64), 'cos_iota': Array([ 0.30853328,  0.29410024, -0.75939894], dtype=float64), 'd_L': Array([333.08665267, 448.48910473, 376.77093646], dtype=float64), 't_c': Array([-0.00996739, -0.08473208,  0.01924097], dtype=float64), 'phase_c': Array([3.89027726, 2.92551357, 0.73519702], dtype=float64), 'psi': Array([2.28215824, 0.81719686, 2.6353795 ], dtype=float64), 'ra': Array([2.42671966, 0.81989275, 0.97219729], dtype=float64), 'sin_dec': Array([ 0.25203987, -0.81886646, -0.70059425], dtype=float64)}
17:53 ninjax INFO    : log_prob: [-25.43928812 -18.07898284 -40.81654915]
17:53 ninjax INFO    : Checking log_prob at injection parameters: {'M_c': 1.6572241451613465, 'q': 0.19067924550682602, 's1_z': 0.024539470197845192, 's2_z': -0.029787675702728045, 'lambda_1': 7.039733026387287, 'lambda_2': 3754.2054155743203, 'cos_iota': 0.40626913226559846, 'd_L': 339.2863944916016, 't_c': 0.08291715906085009, 'phase_c': 5.950816957647759, 'psi': 1.7035140228289942, 'ra': 5.316142100154897, 'sin_dec': -0.6353513165640998, 'eta': 0.13449739029223934, 'iota': Array(1.152429, dtype=float64, weak_type=True), 'dec': Array(-0.68846338, dtype=float64, weak_type=True), 'H1_SNR': 5.538417096324549, 'L1_SNR': 7.653353982006257, 'V1_SNR': 8.752686370064017, 'network_SNR': 12.8785639649557, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
17:53 ninjax INFO    : log_prob at the injection parameters is: 56.171094200731574
17:53 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
17:53 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
17:53 ninjax INFO    : Ninjax setup complete.
17:53 ninjax INFO    : Saving output to ./outdir/injection_10/
17:53 ninjax INFO    : Using polynomial learning rate scheduler
17:53 ninjax INFO    : The hyperparameters passed to flowMC and jim are
17:53 ninjax INFO    :    n_loop_training: 200
17:53 ninjax INFO    :    n_loop_production: 10
17:53 ninjax INFO    :    n_local_steps: 100
17:53 ninjax INFO    :    n_global_steps: 1000
17:53 ninjax INFO    :    n_epochs: 25
17:53 ninjax INFO    :    n_chains: 1000
17:53 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x145ce4c68d30>
17:53 ninjax INFO    :    max_samples: 50000
17:53 ninjax INFO    :    momentum: 0.9
17:53 ninjax INFO    :    batch_size: 30000
17:53 ninjax INFO    :    use_global: True
17:53 ninjax INFO    :    keep_quantile: 0.0
17:53 ninjax INFO    :    train_thinning: 10
17:53 ninjax INFO    :    output_thinning: 50
17:53 ninjax INFO    :    n_sample_max: 10000
17:53 ninjax INFO    :    num_layers: 10
17:53 ninjax INFO    :    hidden_size: [128, 128]
17:53 ninjax INFO    :    num_bins: 8
17:53 ninjax INFO    :    save_training_chains: False
17:53 ninjax INFO    :    eps_mass_matrix: 1e-05
17:53 ninjax INFO    :    use_scheduler: True
17:53 ninjax INFO    :    use_temperature: False
17:53 ninjax INFO    :    which_temperature_schedule: exponential
17:53 ninjax INFO    :    starting_temperature: 2.0
17:53 ninjax INFO    :    stop_tempering_iteration: 75
17:53 ninjax INFO    :    stopping_criterion_global_acc: 0.1
17:53 ninjax INFO    :    stopping_criterion_loss: -inf
17:53 ninjax INFO    :    nf_model_kwargs: {}
17:53 ninjax INFO    :    local sampler arg not shown (pretty print)
17:53 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[ 2.57781797e-23 -1.03804279e-22 -6.14226512e-23 -7.53843043e-24
 -2.44872430e-23 -3.54190104e-23 -9.80067158e-23  5.84417537e-23
  1.51145721e-24 -5.17227435e-23]
[ 4.24355855e-23  8.85668795e-23 -6.38501327e-23  1.22598629e-23
  1.43490746e-23  2.73967329e-23 -9.58012493e-25 -2.67223415e-23
 -2.32091609e-23 -4.47247772e-23]
Checking the noise that was generated in inject_signal ifo:
[ 2.57490962e-23 -1.11985986e-24  4.54162552e-23  2.61151910e-23
 -1.61161909e-24  2.47838307e-23 -1.56685434e-23  3.84425705e-23
 -2.37758439e-23 -2.09115599e-23]
[ 3.32494457e-23 -5.02609855e-23  5.27705453e-23  1.77418529e-23
 -2.05016847e-23  5.83940037e-23  7.69398446e-24  6.83352240e-23
 -1.19679887e-22 -5.50540341e-24]
Checking the noise that was generated in inject_signal ifo:
[-3.72026907e-23  4.33749634e-23  5.67067676e-23 -3.41983690e-23
  6.07122535e-24 -6.26332467e-24 -3.34579572e-23  3.73691289e-23
 -9.28857992e-24  2.57362055e-23]
[ 1.97428359e-23  3.96671022e-23  9.21840738e-23  2.06371129e-23
 -3.15082527e-23 -4.50817778e-23 -1.55206595e-23 -8.89039291e-23
 -1.30372262e-23 -5.57960733e-23]
Checking the noise that was generated in inject_signal ifo:
[ 2.57781797e-23 -1.03804279e-22 -6.14226512e-23 -7.53843043e-24
 -2.44872430e-23 -3.54190104e-23 -9.80067158e-23  5.84417537e-23
  1.51145721e-24 -5.17227435e-23]
[ 4.24355855e-23  8.85668795e-23 -6.38501327e-23  1.22598629e-23
  1.43490746e-23  2.73967329e-23 -9.58012493e-25 -2.67223415e-23
 -2.32091609e-23 -4.47247772e-23]
Checking the noise that was generated in inject_signal ifo:
[ 2.57490962e-23 -1.11985986e-24  4.54162552e-23  2.61151910e-23
 -1.61161909e-24  2.47838307e-23 -1.56685434e-23  3.84425705e-23
 -2.37758439e-23 -2.09115599e-23]
[ 3.32494457e-23 -5.02609855e-23  5.27705453e-23  1.77418529e-23
 -2.05016847e-23  5.83940037e-23  7.69398446e-24  6.83352240e-23
 -1.19679887e-22 -5.50540341e-24]
Checking the noise that was generated in inject_signal ifo:
[-3.72026907e-23  4.33749634e-23  5.67067676e-23 -3.41983690e-23
  6.07122535e-24 -6.26332467e-24 -3.34579572e-23  3.73691289e-23
 -9.28857992e-24  2.57362055e-23]
[ 1.97428359e-23  3.96671022e-23  9.21840738e-23  2.06371129e-23
 -3.15082527e-23 -4.50817778e-23 -1.55206595e-23 -8.89039291e-23
 -1.30372262e-23 -5.57960733e-23]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.10882186889648438 seconds
Using provided reference parameters:
ref_params for relative binning:
{'M_c': 1.6572241451613465, 'q': 0.19067924550682602, 's1_z': 0.024539470197845192, 's2_z': -0.029787675702728045, 'lambda_1': 7.039733026387287, 'lambda_2': 3754.2054155743203, 'cos_iota': 0.40626913226559846, 'd_L': 339.2863944916016, 't_c': 0.08291715906085009, 'phase_c': 5.950816957647759, 'psi': 1.7035140228289942, 'ra': 5.316142100154897, 'sin_dec': -0.6353513165640998, 'eta': 0.13449739029223934, 'iota': Array(1.152429, dtype=float64, weak_type=True), 'dec': Array(-0.68846338, dtype=float64, weak_type=True), 'H1_SNR': 5.538417096324549, 'L1_SNR': 7.653353982006257, 'V1_SNR': 8.752686370064017, 'network_SNR': 12.8785639649557, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.504669189453125 seconds
Time for h_sky_low and h_sky_center: 5.325909614562988 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.6820294857025146
Going to compute coefficients . . .
Time for computing coefficients: 120.98461151123047 seconds
Time for computing coefficients: 6.900005578994751 seconds
Time for computing coefficients: 6.868793964385986 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:02<6:47:52, 122.98s/it]Tuning global sampler:   1%|          | 2/200 [02:07<2:55:58, 53.32s/it] Tuning global sampler:   2%|▏         | 3/200 [02:12<1:42:01, 31.08s/it]Tuning global sampler:   2%|▏         | 4/200 [02:17<1:08:27, 20.95s/it]Tuning global sampler:   2%|▎         | 5/200 [02:22<48:56, 15.06s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:26<37:22, 11.56s/it]Tuning global sampler:   4%|▎         | 7/200 [02:31<29:46,  9.26s/it]Tuning global sampler:   4%|▍         | 8/200 [02:36<24:52,  7.77s/it]Tuning global sampler:   4%|▍         | 9/200 [02:40<21:33,  6.77s/it]Tuning global sampler:   5%|▌         | 10/200 [02:45<19:09,  6.05s/it]Tuning global sampler:   6%|▌         | 11/200 [02:49<17:38,  5.60s/it]Tuning global sampler:   6%|▌         | 12/200 [02:54<16:36,  5.30s/it]Tuning global sampler:   6%|▋         | 13/200 [02:58<15:48,  5.07s/it]Tuning global sampler:   7%|▋         | 14/200 [03:03<15:18,  4.94s/it]Tuning global sampler:   8%|▊         | 15/200 [03:08<14:56,  4.85s/it]Tuning global sampler:   8%|▊         | 16/200 [03:12<14:39,  4.78s/it]Tuning global sampler:   8%|▊         | 17/200 [03:17<14:26,  4.73s/it]Tuning global sampler:   9%|▉         | 18/200 [03:21<14:15,  4.70s/it]Tuning global sampler:  10%|▉         | 19/200 [03:26<14:15,  4.73s/it]Tuning global sampler:  10%|█         | 20/200 [03:31<14:05,  4.70s/it]Tuning global sampler:  10%|█         | 21/200 [03:35<13:56,  4.68s/it]Tuning global sampler:  11%|█         | 22/200 [03:41<14:35,  4.92s/it]Tuning global sampler:  12%|█▏        | 23/200 [03:46<14:13,  4.82s/it]Tuning global sampler:  12%|█▏        | 24/200 [03:50<13:49,  4.71s/it]Tuning global sampler:  12%|█▎        | 25/200 [03:54<13:27,  4.61s/it]Tuning global sampler:  13%|█▎        | 26/200 [03:59<13:10,  4.54s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:03<12:57,  4.49s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:08<12:47,  4.46s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:12<12:38,  4.44s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:16<12:31,  4.42s/it]Tuning global sampler:  16%|█▌        | 31/200 [04:21<12:25,  4.41s/it]Tuning global sampler:  16%|█▌        | 32/200 [04:25<12:19,  4.40s/it]Tuning global sampler:  16%|█▋        | 33/200 [04:29<12:11,  4.38s/it]Tuning global sampler:  17%|█▋        | 34/200 [04:34<12:05,  4.37s/it]Tuning global sampler:  18%|█▊        | 35/200 [04:38<12:01,  4.38s/it]Tuning global sampler:  18%|█▊        | 36/200 [04:43<11:57,  4.38s/it]Tuning global sampler:  18%|█▊        | 37/200 [04:47<11:53,  4.38s/it]Tuning global sampler:  19%|█▉        | 38/200 [04:51<11:49,  4.38s/it]Tuning global sampler:  20%|█▉        | 39/200 [04:56<11:44,  4.38s/it]Tuning global sampler:  20%|██        | 40/200 [05:00<11:40,  4.38s/it]Tuning global sampler:  20%|██        | 41/200 [05:04<11:36,  4.38s/it]Tuning global sampler:  21%|██        | 42/200 [05:10<12:16,  4.66s/it]Tuning global sampler:  22%|██▏       | 43/200 [05:14<11:59,  4.58s/it]Tuning global sampler:  22%|██▏       | 44/200 [05:18<11:44,  4.51s/it]Tuning global sampler:  22%|██▎       | 45/200 [05:23<11:32,  4.47s/it]Tuning global sampler:  23%|██▎       | 46/200 [05:27<11:23,  4.44s/it]Tuning global sampler:  24%|██▎       | 47/200 [05:32<11:16,  4.42s/it]Tuning global sampler:  24%|██▍       | 48/200 [05:36<11:10,  4.41s/it]Tuning global sampler:  24%|██▍       | 49/200 [05:40<11:05,  4.41s/it]Tuning global sampler:  25%|██▌       | 50/200 [05:45<10:59,  4.40s/it]Tuning global sampler:  26%|██▌       | 51/200 [05:49<10:54,  4.39s/it]Tuning global sampler:  26%|██▌       | 52/200 [05:54<10:49,  4.39s/it]Tuning global sampler:  26%|██▋       | 53/200 [05:58<10:45,  4.39s/it]Tuning global sampler:  27%|██▋       | 54/200 [06:02<10:41,  4.39s/it]Tuning global sampler:  28%|██▊       | 55/200 [06:07<10:34,  4.38s/it]Tuning global sampler:  28%|██▊       | 56/200 [06:11<10:28,  4.37s/it]Tuning global sampler:  28%|██▊       | 57/200 [06:15<10:25,  4.38s/it]Tuning global sampler:  29%|██▉       | 58/200 [06:20<10:22,  4.38s/it]Tuning global sampler:  30%|██▉       | 59/200 [06:24<10:17,  4.38s/it]Tuning global sampler:  30%|███       | 60/200 [06:29<10:14,  4.39s/it]Tuning global sampler:  30%|███       | 61/200 [06:33<10:09,  4.39s/it]Tuning global sampler:  31%|███       | 62/200 [06:38<10:45,  4.67s/it]Tuning global sampler:  32%|███▏      | 63/200 [06:43<10:29,  4.59s/it]Tuning global sampler:  32%|███▏      | 64/200 [06:47<10:16,  4.53s/it]Tuning global sampler:  32%|███▎      | 65/200 [06:51<10:06,  4.49s/it]Tuning global sampler:  33%|███▎      | 66/200 [06:56<09:56,  4.45s/it]Tuning global sampler:  34%|███▎      | 67/200 [07:00<09:48,  4.42s/it]Tuning global sampler:  34%|███▍      | 68/200 [07:05<09:42,  4.41s/it]Tuning global sampler:  34%|███▍      | 69/200 [07:09<09:36,  4.40s/it]Tuning global sampler:  35%|███▌      | 70/200 [07:13<09:32,  4.40s/it]Tuning global sampler:  36%|███▌      | 71/200 [07:18<09:28,  4.40s/it]Tuning global sampler:  36%|███▌      | 72/200 [07:22<09:23,  4.40s/it]Tuning global sampler:  36%|███▋      | 73/200 [07:27<09:18,  4.40s/it]Tuning global sampler:  37%|███▋      | 74/200 [07:31<09:13,  4.39s/it]Tuning global sampler:  38%|███▊      | 75/200 [07:35<09:09,  4.40s/it]Tuning global sampler:  38%|███▊      | 76/200 [07:40<09:05,  4.40s/it]Tuning global sampler:  38%|███▊      | 77/200 [07:44<08:59,  4.39s/it]Tuning global sampler:  39%|███▉      | 78/200 [07:48<08:54,  4.38s/it]Tuning global sampler:  40%|███▉      | 79/200 [07:53<08:50,  4.38s/it]Tuning global sampler:  40%|████      | 80/200 [07:57<08:46,  4.39s/it]Tuning global sampler:  40%|████      | 81/200 [08:02<08:42,  4.39s/it]Tuning global sampler:  41%|████      | 82/200 [08:06<08:38,  4.40s/it]Tuning global sampler:  42%|████▏     | 83/200 [08:11<09:10,  4.70s/it]Tuning global sampler:  42%|████▏     | 84/200 [08:16<08:55,  4.62s/it]Tuning global sampler:  42%|████▎     | 85/200 [08:20<08:43,  4.55s/it]Tuning global sampler:  43%|████▎     | 86/200 [08:25<08:33,  4.51s/it]Tuning global sampler:  44%|████▎     | 87/200 [08:29<08:25,  4.48s/it]Tuning global sampler:  44%|████▍     | 88/200 [08:33<08:17,  4.44s/it]Tuning global sampler:  44%|████▍     | 89/200 [08:38<08:10,  4.42s/it]Tuning global sampler:  45%|████▌     | 90/200 [08:42<08:05,  4.41s/it]Tuning global sampler:  46%|████▌     | 91/200 [08:47<08:00,  4.40s/it]Tuning global sampler:  46%|████▌     | 92/200 [08:51<07:55,  4.41s/it]Tuning global sampler:  46%|████▋     | 93/200 [08:55<07:52,  4.41s/it]Tuning global sampler:  47%|████▋     | 94/200 [09:00<07:47,  4.41s/it]Tuning global sampler:  48%|████▊     | 95/200 [09:04<07:43,  4.41s/it]Tuning global sampler:  48%|████▊     | 96/200 [09:09<07:40,  4.43s/it]Tuning global sampler:  48%|████▊     | 97/200 [09:13<07:36,  4.43s/it]Tuning global sampler:  49%|████▉     | 98/200 [09:18<07:31,  4.42s/it]Tuning global sampler:  50%|████▉     | 99/200 [09:22<07:24,  4.41s/it]Tuning global sampler:  50%|█████     | 100/200 [09:26<07:18,  4.39s/it]Tuning global sampler:  50%|█████     | 101/200 [09:31<07:14,  4.39s/it]Tuning global sampler:  51%|█████     | 102/200 [09:35<07:10,  4.40s/it]Tuning global sampler:  52%|█████▏    | 103/200 [09:40<07:06,  4.39s/it]Tuning global sampler:  52%|█████▏    | 104/200 [09:45<07:32,  4.71s/it]Tuning global sampler:  52%|█████▎    | 105/200 [09:49<07:18,  4.62s/it]Tuning global sampler:  53%|█████▎    | 106/200 [09:54<07:07,  4.55s/it]Tuning global sampler:  54%|█████▎    | 107/200 [09:58<06:58,  4.50s/it]Tuning global sampler:  54%|█████▍    | 108/200 [10:03<06:51,  4.47s/it]Tuning global sampler:  55%|█████▍    | 109/200 [10:07<06:44,  4.44s/it]Tuning global sampler:  55%|█████▌    | 110/200 [10:11<06:37,  4.42s/it]Tuning global sampler:  56%|█████▌    | 111/200 [10:16<06:31,  4.40s/it]Tuning global sampler:  56%|█████▌    | 112/200 [10:20<06:27,  4.40s/it]Tuning global sampler:  56%|█████▋    | 113/200 [10:24<06:23,  4.40s/it]Tuning global sampler:  57%|█████▋    | 114/200 [10:29<06:18,  4.40s/it]Tuning global sampler:  57%|█████▊    | 115/200 [10:33<06:14,  4.41s/it]Tuning global sampler:  58%|█████▊    | 116/200 [10:38<06:10,  4.42s/it]Tuning global sampler:  58%|█████▊    | 117/200 [10:42<06:06,  4.41s/it]Tuning global sampler:  59%|█████▉    | 118/200 [10:47<06:01,  4.40s/it]Tuning global sampler:  60%|█████▉    | 119/200 [10:51<05:56,  4.40s/it]Tuning global sampler:  60%|██████    | 120/200 [10:55<05:51,  4.40s/it]Tuning global sampler:  60%|██████    | 121/200 [11:00<05:46,  4.38s/it]Tuning global sampler:  61%|██████    | 122/200 [11:04<05:41,  4.37s/it]Tuning global sampler:  62%|██████▏   | 123/200 [11:08<05:37,  4.39s/it]Tuning global sampler:  62%|██████▏   | 124/200 [11:14<06:00,  4.75s/it]Tuning global sampler:  62%|██████▎   | 125/200 [11:18<05:49,  4.65s/it]Tuning global sampler:  63%|██████▎   | 126/200 [11:23<05:39,  4.58s/it]Tuning global sampler:  64%|██████▎   | 127/200 [11:27<05:31,  4.54s/it]Tuning global sampler:  64%|██████▍   | 128/200 [11:32<05:23,  4.50s/it]Tuning global sampler:  64%|██████▍   | 129/200 [11:36<05:17,  4.47s/it]Tuning global sampler:  65%|██████▌   | 130/200 [11:40<05:11,  4.45s/it]Tuning global sampler:  66%|██████▌   | 131/200 [11:45<05:06,  4.44s/it]Tuning global sampler:  66%|██████▌   | 132/200 [11:49<05:00,  4.42s/it]Tuning global sampler:  66%|██████▋   | 133/200 [11:54<04:54,  4.40s/it]Tuning global sampler:  67%|██████▋   | 134/200 [11:58<04:50,  4.40s/it]Tuning global sampler:  68%|██████▊   | 135/200 [12:02<04:46,  4.41s/it]Tuning global sampler:  68%|██████▊   | 136/200 [12:07<04:42,  4.41s/it]Tuning global sampler:  68%|██████▊   | 137/200 [12:11<04:37,  4.41s/it]Tuning global sampler:  69%|██████▉   | 138/200 [12:16<04:33,  4.41s/it]Tuning global sampler:  70%|██████▉   | 139/200 [12:20<04:28,  4.41s/it]Tuning global sampler:  70%|███████   | 140/200 [12:25<04:24,  4.41s/it]Tuning global sampler:  70%|███████   | 141/200 [12:29<04:19,  4.41s/it]Tuning global sampler:  71%|███████   | 142/200 [12:33<04:15,  4.41s/it]Tuning global sampler:  72%|███████▏  | 143/200 [12:38<04:10,  4.40s/it]Tuning global sampler:  72%|███████▏  | 144/200 [12:42<04:05,  4.39s/it]Tuning global sampler:  72%|███████▎  | 145/200 [12:46<04:01,  4.40s/it]Tuning global sampler:  73%|███████▎  | 146/200 [12:52<04:15,  4.73s/it]Tuning global sampler:  74%|███████▎  | 147/200 [12:56<04:05,  4.63s/it]Tuning global sampler:  74%|███████▍  | 148/200 [13:01<03:57,  4.57s/it]Tuning global sampler:  74%|███████▍  | 149/200 [13:06<04:03,  4.77s/it]Tuning global sampler:  75%|███████▌  | 150/200 [13:10<03:53,  4.67s/it]Tuning global sampler:  76%|███████▌  | 151/200 [13:15<03:45,  4.59s/it]Tuning global sampler:  76%|███████▌  | 152/200 [13:19<03:37,  4.54s/it]Tuning global sampler:  76%|███████▋  | 153/200 [13:24<03:31,  4.50s/it]Tuning global sampler:  77%|███████▋  | 154/200 [13:28<03:25,  4.46s/it]Tuning global sampler:  78%|███████▊  | 155/200 [13:32<03:19,  4.44s/it]Tuning global sampler:  78%|███████▊  | 156/200 [13:37<03:14,  4.43s/it]Tuning global sampler:  78%|███████▊  | 157/200 [13:41<03:10,  4.42s/it]Tuning global sampler:  79%|███████▉  | 158/200 [13:46<03:05,  4.41s/it]Tuning global sampler:  80%|███████▉  | 159/200 [13:50<03:00,  4.41s/it]Tuning global sampler:  80%|███████▉  | 159/200 [13:54<03:35,  5.25s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.21s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.22s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.22s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.22s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.22s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.22s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.22s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.22s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]
18:07 ninjax INFO    : Saving samples to ./outdir/injection_10/results_training.npz
18:07 ninjax INFO    : Saving the NF
18:07 ninjax INFO    : Time taken: 874.1237568855286 seconds (14.568729281425476 minutes)
18:07 ninjax INFO    : Creating the final corner plot
18:07 ninjax INFO    : Dumping the final production chains
18:07 ninjax INFO    : Chains shape is: (13, 220000)
18:07 ninjax INFO    : Key: M_c: ESS = 19971, Rhat = 1.0301884428520782
18:07 ninjax INFO    : Key: q: ESS = 23406, Rhat = 1.026612365688587
18:07 ninjax INFO    : Key: s1_z: ESS = 24719, Rhat = 1.0249351456437896
18:07 ninjax INFO    : Key: s2_z: ESS = 23491, Rhat = 1.0262716260975573
18:07 ninjax INFO    : Key: lambda_1: ESS = 16488, Rhat = 1.0365058947742503
18:07 ninjax INFO    : Key: lambda_2: ESS = 21339, Rhat = 1.028572174700775
18:07 ninjax INFO    : Key: cos_iota: ESS = 22953, Rhat = 1.0266991768456883
18:07 ninjax INFO    : Key: d_L: ESS = 22978, Rhat = 1.0272012986499444
18:07 ninjax INFO    : Key: t_c: ESS = 16849, Rhat = 1.0355772234412601
18:07 ninjax INFO    : Key: phase_c: ESS = 22385, Rhat = 1.027463830329171
18:07 ninjax INFO    : Key: psi: ESS = 18113, Rhat = 1.0350497970764743
18:07 ninjax INFO    : Key: ra: ESS = 23912, Rhat = 1.026277834191009
18:07 ninjax INFO    : Key: sin_dec: ESS = 28520, Rhat = 1.0219541123913376
18:07 ninjax INFO    : Key: eta: ESS = 23406, Rhat = 1.026612365688587
18:07 ninjax INFO    : Key: iota: ESS = 22953, Rhat = 1.0266991768456883
18:07 ninjax INFO    : Key: dec: ESS = 28520, Rhat = 1.022012128742217
18:07 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.455 +/- 0.274
q: 0.406 +/- 0.258
s1_z: -0.002 +/- 0.028
s2_z: -0.002 +/- 0.028
lambda_1: 1911.276 +/- 1477.653
lambda_2: 2479.011 +/- 1417.564
cos_iota: 0.066 +/- 0.241
d_L: 402.200 +/- 47.972
t_c: 0.033 +/- 0.064
phase_c: 3.315 +/- 1.721
psi: 1.539 +/- 0.823
ra: 3.996 +/- 1.766
sin_dec: -0.207 +/- 0.513
Log probability: 1.024 +/- 29.246
Local acceptance: 0.987 +/- 0.115
Global acceptance: 0.016 +/- 0.125
Max loss: 22.827, Min loss: 6.373
Production summary
==========
M_c: 1.657 +/- 0.000
q: 0.206 +/- 0.013
s1_z: -0.008 +/- 0.028
s2_z: -0.002 +/- 0.029
lambda_1: 129.815 +/- 162.020
lambda_2: 2439.165 +/- 1443.387
cos_iota: 0.454 +/- 0.112
d_L: 387.417 +/- 46.002
t_c: 0.084 +/- 0.002
phase_c: 3.292 +/- 1.824
psi: 1.469 +/- 1.006
ra: 5.317 +/- 0.013
sin_dec: -0.664 +/- 0.021
Log probability: 53.941 +/- 2.702
Local acceptance: 0.966 +/- 0.182
Global acceptance: 0.113 +/- 0.317
DONE

JOB STATISTICS
==============
Job ID: 10815236
Cluster: snellius
User/Group: twouters2/twouters2
State: RUNNING
Nodes: 1
Cores per node: 16
CPU Utilized: 00:00:00
CPU Efficiency: 0.00% of 04:45:52 core-walltime
Job Wall-clock time: 00:17:52
Memory Utilized: 0.00 MB (estimated maximum)
Memory Efficiency: 0.00% of 10.00 GB (10.00 GB/node)
WARNING: Efficiency statistics may be misleading for RUNNING jobs.
