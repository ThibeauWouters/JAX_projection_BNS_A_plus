Wed Mar 26 17:50:20 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
17:50 ninjax INFO    : Checking and setting outdir
17:50 ninjax INFO    : The outdir is set to ./outdir/injection_1
17:50 ninjax INFO    : Loading the given config
17:50 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
17:50 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
17:50 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/outdir/injection_1/complete_config.json
17:50 ninjax INFO    : No seed specified. Generating a random seed: 561972
17:50 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 509158
17:50 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 967120
17:50 ninjax INFO    : Loading the priors
17:50 ninjax INFO    :    Mc_prior = Uniform(1.0, 2.2, naming=["M_c"])
17:50 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
17:50 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
17:50 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
17:50 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
17:50 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
17:50 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
17:50 ninjax INFO    :    dL_prior = PowerLaw(1.0, 460.0, 2.0, naming=["d_L"])
17:50 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
17:50 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
17:50 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
17:50 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
17:50 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
17:50 ninjax INFO    : Finished prior setup
17:50 ninjax INFO    : Setting the transforms
17:50 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
17:50 ninjax INFO    : transforms_str_list has 3 elements
17:50 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
17:50 ninjax INFO    : Setting the likelihood
17:50 ninjax INFO    : GW likelihood provided, setting up the GW pipe
17:50 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
17:50 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
17:50 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
17:50 ninjax INFO    : self.is_BNS_run is True
17:50 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
17:50 ninjax INFO    : GW run is an injection
17:50 ninjax INFO    : Setting up GW injection . . . 
17:50 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
17:50 ninjax INFO    : Generating new injection
17:50 ninjax INFO    : Sanity check: generated parameters:
17:50 ninjax INFO    : {'M_c': 1.5793195544288934, 'q': 0.7833151146799442, 's1_z': 0.01248627242994984, 's2_z': 0.024037586967916552, 'lambda_1': 1835.4964147650965, 'lambda_2': 797.2392848270937, 'cos_iota': -0.25060678140769177, 'd_L': 398.277222922937, 't_c': 0.03759596814085872, 'phase_c': 2.7197275472810625, 'psi': 0.49949390653594733, 'ra': 0.13150484675350022, 'sin_dec': 0.6197714501310885}
17:50 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
17:50 ninjax INFO    : Injected lambda_1: 7.039733026387287
17:50 ninjax INFO    : Injected lambda_2: 102.21851331668694
17:50 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.5793195544288934 is 128.0
17:50 ninjax INFO    : After transforms, the injection parameters are:
17:50 ninjax INFO    : {'M_c': 1.5793195544288934, 'q': 0.7833151146799442, 's1_z': 0.01248627242994984, 's2_z': 0.024037586967916552, 'lambda_1': 7.039733026387287, 'lambda_2': 102.21851331668694, 'cos_iota': -0.25060678140769177, 'd_L': 398.277222922937, 't_c': 0.03759596814085872, 'phase_c': 2.7197275472810625, 'psi': 0.49949390653594733, 'ra': 0.13150484675350022, 'sin_dec': 0.6197714501310885, 'eta': 0.24630902533062704, 'iota': Array(1.82410331, dtype=float64, weak_type=True), 'dec': Array(0.66845144, dtype=float64, weak_type=True)}
17:50 ninjax INFO    : The trial injection parameters are {'M_c': 1.5793195544288934, 'eta': 0.24630902533062704, 's1_z': 0.01248627242994984, 's2_z': 0.024037586967916552, 'lambda_1': 7.039733026387287, 'lambda_2': 102.21851331668694, 'd_L': 398.277222922937, 'phase_c': 2.7197275472810625, 'iota': 1.8241033138304847, 't_c': 0.03759596814085872, 'psi': 0.49949390653594733, 'ra': 0.13150484675350022, 'dec': 0.6684514426277292}
17:50 ninjax INFO    : Injecting signals . . .
17:50 ninjax INFO    : self.ifos
17:50 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
17:50 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [ 3.09827477e-24+2.95525236e-23j  2.27634608e-23-4.11114472e-23j
  1.47307314e-22-1.94906658e-23j ...
 -5.69431647e-24-6.79119231e-25j -1.82444668e-23+1.69612309e-23j
  1.19863508e-23-2.58508389e-23j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [-1.83981896e-23-7.65790391e-24j -3.02398532e-23-8.38742550e-23j
 -6.78391155e-23+2.41510364e-23j ...
 -3.91865619e-24-2.12278022e-23j -7.95226410e-24-8.21230553e-24j
 -4.11411838e-23+7.37911164e-24j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [-1.47171382e-23-2.23533826e-23j  3.47591948e-24+6.71260407e-23j
  1.78923911e-24+1.86570353e-24j ...
 -1.79417233e-23-5.63326025e-23j -5.48935426e-24+1.23439632e-23j
  2.32961544e-23-3.22374304e-23j]
17:50 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
17:50 ninjax INFO    : SNR for ifo H1 is 9.001950055368855
17:50 ninjax INFO    : SNR for ifo L1 is 6.41706778956637
17:50 ninjax INFO    : SNR for ifo V1 is 0.9765980330234294
17:50 ninjax INFO    : The network SNR is 11.098090265147007
17:50 ninjax INFO    : The network SNR does not pass the threshold, trying again
17:50 ninjax INFO    : Generating new injection
17:50 ninjax INFO    : Sanity check: generated parameters:
17:50 ninjax INFO    : {'M_c': 1.655962415754161, 'q': 0.46926660109797846, 's1_z': 0.008387573806009054, 's2_z': -0.04706180071020003, 'lambda_1': 4795.141151727586, 'lambda_2': 2230.8293719339736, 'cos_iota': 0.05140852080392566, 'd_L': 382.8115815399002, 't_c': -0.09964675729381699, 'phase_c': 4.2994907774264, 'psi': 1.2621954080412363, 'ra': 2.987322894764762, 'sin_dec': -0.19584831966999738}
17:50 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
17:50 ninjax INFO    : Injected lambda_1: 7.039733026387287
17:50 ninjax INFO    : Injected lambda_2: 369.43597903275617
17:50 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.655962415754161 is 128.0
17:50 ninjax INFO    : After transforms, the injection parameters are:
17:50 ninjax INFO    : {'M_c': 1.655962415754161, 'q': 0.46926660109797846, 's1_z': 0.008387573806009054, 's2_z': -0.04706180071020003, 'lambda_1': 7.039733026387287, 'lambda_2': 369.43597903275617, 'cos_iota': 0.05140852080392566, 'd_L': 382.8115815399002, 't_c': -0.09964675729381699, 'phase_c': 4.2994907774264, 'psi': 1.2621954080412363, 'ra': 2.987322894764762, 'sin_dec': -0.19584831966999738, 'eta': 0.21737942344247552, 'iota': Array(1.51936513, dtype=float64, weak_type=True), 'dec': Array(-0.19712245, dtype=float64, weak_type=True)}
17:50 ninjax INFO    : The trial injection parameters are {'M_c': 1.655962415754161, 'eta': 0.21737942344247552, 's1_z': 0.008387573806009054, 's2_z': -0.04706180071020003, 'lambda_1': 7.039733026387287, 'lambda_2': 369.43597903275617, 'd_L': 382.8115815399002, 'phase_c': 4.2994907774264, 'iota': 1.5193651349701582, 't_c': -0.09964675729381699, 'psi': 1.2621954080412363, 'ra': 2.987322894764762, 'dec': -0.1971224480458261}
17:50 ninjax INFO    : Injecting signals . . .
17:50 ninjax INFO    : self.ifos
17:50 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
17:50 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [ 5.09275956e-24+2.81969949e-23j  2.31146932e-23-4.25552511e-23j
  1.47229779e-22-2.09386946e-23j ...
 -5.68056349e-24-6.76511601e-25j -1.82310324e-23+1.69651627e-23j
  1.19993395e-23-2.58456202e-23j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [-2.11136838e-23-5.23423515e-24j -2.93008872e-23-8.07115394e-23j
 -6.49874681e-23+2.46638862e-23j ...
 -3.91849805e-24-2.12377794e-23j -7.95113969e-24-8.22222046e-24j
 -4.11391038e-23+7.36935241e-24j]
17:50 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
17:50 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
17:50 ninjax INFO    : [-1.49851579e-23-2.28187411e-23j  3.20113366e-24+6.73574255e-23j
  2.11242657e-24+1.98459635e-24j ...
 -1.79420551e-23-5.63345007e-23j -5.48950202e-24+1.23420420e-23j
  2.32961920e-23-3.22393569e-23j]
17:50 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
17:50 ninjax INFO    : SNR for ifo H1 is 6.144856678265348
17:50 ninjax INFO    : SNR for ifo L1 is 2.32600079932253
17:50 ninjax INFO    : SNR for ifo V1 is 1.5193704335660982
17:50 ninjax INFO    : The network SNR is 6.743740047574946
17:50 ninjax INFO    : The network SNR does not pass the threshold, trying again
17:50 ninjax INFO    : Generating new injection
17:50 ninjax INFO    : Sanity check: generated parameters:
17:50 ninjax INFO    : {'M_c': 2.187330960137529, 'q': 0.3629984189169462, 's1_z': 0.021359330773032023, 's2_z': -0.011027044848872493, 'lambda_1': 906.1374532695032, 'lambda_2': 959.3266450774463, 'cos_iota': 0.6252310655698974, 'd_L': 189.2026666284581, 't_c': 0.001752586024717978, 'phase_c': 1.676776314177889, 'psi': 1.7145455330901773, 'ra': 2.9259967556800612, 'sin_dec': 0.7643509011066087}
17:50 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
17:50 ninjax INFO    : Injected lambda_1: 7.039733026387287
17:50 ninjax INFO    : Injected lambda_2: 130.88675758435755
17:50 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 2.187330960137529 is 64.0
17:50 ninjax INFO    : After transforms, the injection parameters are:
17:50 ninjax INFO    : {'M_c': 2.187330960137529, 'q': 0.3629984189169462, 's1_z': 0.021359330773032023, 's2_z': -0.011027044848872493, 'lambda_1': 7.039733026387287, 'lambda_2': 130.88675758435755, 'cos_iota': 0.6252310655698974, 'd_L': 189.2026666284581, 't_c': 0.001752586024717978, 'phase_c': 1.676776314177889, 'psi': 1.7145455330901773, 'ra': 2.9259967556800612, 'sin_dec': 0.7643509011066087, 'eta': 0.195395262315374, 'iota': Array(0.89536876, dtype=float64, weak_type=True), 'dec': Array(0.87003406, dtype=float64, weak_type=True)}
17:50 ninjax INFO    : The trial injection parameters are {'M_c': 2.187330960137529, 'eta': 0.195395262315374, 's1_z': 0.021359330773032023, 's2_z': -0.011027044848872493, 'lambda_1': 7.039733026387287, 'lambda_2': 130.88675758435755, 'd_L': 189.2026666284581, 'phase_c': 1.676776314177889, 'iota': 0.8953687579456344, 't_c': 0.001752586024717978, 'psi': 1.7145455330901773, 'ra': 2.9259967556800612, 'dec': 0.8700340626864924}
17:50 ninjax INFO    : Injecting signals . . .
17:50 ninjax INFO    : self.ifos
17:50 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
17:50 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.         20.015625   20.03125  ... 2047.953125 2047.96875
 2047.984375]
17:50 ninjax INFO    : [-7.47394972e-24-2.18497556e-24j -6.72068260e-23-1.04138073e-23j
  3.95268217e-23-6.95412625e-24j ...
 -7.47237614e-25+1.40508107e-23j  3.28046763e-23-7.28336065e-24j
 -1.68963008e-23+5.03359325e-24j]
17:50 ninjax INFO    : [1.44906511e-46 1.44435812e-46 1.43973008e-46 ... 2.17771234e-47
 2.17774337e-47 2.17777440e-47]
17:50 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.         20.015625   20.03125  ... 2047.953125 2047.96875
 2047.984375]
17:50 ninjax INFO    : [ 7.74720935e-23+1.78102341e-24j -5.83227754e-24+3.41749598e-23j
 -3.32488263e-24+2.54652708e-24j ...
  1.02926996e-23-3.54839487e-24j  4.51736987e-24-6.73006697e-25j
 -2.18637324e-24+4.77119957e-24j]
17:50 ninjax INFO    : [1.44906511e-46 1.44435812e-46 1.43973008e-46 ... 2.17771234e-47
 2.17774337e-47 2.17777440e-47]
17:50 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
17:50 ninjax INFO    : [  20.         20.015625   20.03125  ... 2047.953125 2047.96875
 2047.984375]
17:50 ninjax INFO    : [ 3.48420917e-23+5.32971054e-23j -3.97932063e-23-3.23497866e-23j
 -5.47546163e-24-1.96575947e-23j ...
 -1.07325789e-24-9.16192508e-24j  4.15111509e-24+1.65820830e-23j
 -1.23862479e-23+2.81597683e-24j]
17:50 ninjax INFO    : [1.43183556e-46 1.42688205e-46 1.42194425e-46 ... 6.39772204e-47
 6.39781464e-47 6.39790724e-47]
17:50 ninjax INFO    : SNR for ifo H1 is 13.47735101209319
17:50 ninjax INFO    : SNR for ifo L1 is 10.857550382528796
17:50 ninjax INFO    : SNR for ifo V1 is 27.040235450383303
17:50 ninjax INFO    : The network SNR is 32.104512514979675
17:50 ninjax INFO    : Network SNR passes threshold
17:50 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
17:50 ninjax INFO    :    M_c: 2.187330960137529
17:50 ninjax INFO    :    q: 0.3629984189169462
17:50 ninjax INFO    :    s1_z: 0.021359330773032023
17:50 ninjax INFO    :    s2_z: -0.011027044848872493
17:50 ninjax INFO    :    lambda_1: 7.039733026387287
17:50 ninjax INFO    :    lambda_2: 130.88675758435755
17:50 ninjax INFO    :    cos_iota: 0.6252310655698974
17:50 ninjax INFO    :    d_L: 189.2026666284581
17:50 ninjax INFO    :    t_c: 0.001752586024717978
17:50 ninjax INFO    :    phase_c: 1.676776314177889
17:50 ninjax INFO    :    psi: 1.7145455330901773
17:50 ninjax INFO    :    ra: 2.9259967556800612
17:50 ninjax INFO    :    sin_dec: 0.7643509011066087
17:50 ninjax INFO    :    eta: 0.195395262315374
17:50 ninjax INFO    :    iota: 0.8953687579456344
17:50 ninjax INFO    :    dec: 0.8700340626864924
17:50 ninjax INFO    :    H1_SNR: 13.47735101209319
17:50 ninjax INFO    :    L1_SNR: 10.857550382528796
17:50 ninjax INFO    :    V1_SNR: 27.040235450383303
17:50 ninjax INFO    :    network_SNR: 32.104512514979675
17:50 ninjax INFO    :    epoch: 62.0
17:50 ninjax INFO    :    gmst: 2.7288901910520846
17:50 ninjax INFO    :    duration: 64.0
17:50 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
17:50 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
17:50 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
17:52 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 102.394855260849 seconds = 1.70658092101415 minutes
17:52 ninjax INFO    : The priors are not modified after their initialization
17:52 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
17:52 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
17:52 ninjax INFO    : sample: {'M_c': Array([2.09494537, 1.03376107, 1.29142915], dtype=float64), 'q': Array([0.91992596, 0.31784626, 0.88487733], dtype=float64), 's1_z': Array([-0.02404605, -0.04425536, -0.01680962], dtype=float64), 's2_z': Array([ 0.04405076, -0.00261215,  0.04718616], dtype=float64), 'lambda_1': Array([4304.7880129 , 4123.78269451,   57.43188889], dtype=float64), 'lambda_2': Array([2803.24768788, 4233.80123992, 1985.54535123], dtype=float64), 'cos_iota': Array([ 0.30934269, -0.40753323, -0.15751434], dtype=float64), 'd_L': Array([334.91753139, 402.38641354, 206.43145364], dtype=float64), 't_c': Array([-0.04058924,  0.05435087, -0.04104779], dtype=float64), 'phase_c': Array([4.29097154, 4.03044578, 3.21977646], dtype=float64), 'psi': Array([0.90632899, 0.25230466, 2.16116129], dtype=float64), 'ra': Array([1.56590062, 3.73384783, 1.30773458], dtype=float64), 'sin_dec': Array([0.00122477, 0.42799655, 0.35246091], dtype=float64)}
17:52 ninjax INFO    : log_prob: [-54.80606912 -17.05458264 -42.51872362]
17:52 ninjax INFO    : Checking log_prob at injection parameters: {'M_c': 2.187330960137529, 'q': 0.3629984189169462, 's1_z': 0.021359330773032023, 's2_z': -0.011027044848872493, 'lambda_1': 7.039733026387287, 'lambda_2': 130.88675758435755, 'cos_iota': 0.6252310655698974, 'd_L': 189.2026666284581, 't_c': 0.001752586024717978, 'phase_c': 1.676776314177889, 'psi': 1.7145455330901773, 'ra': 2.9259967556800612, 'sin_dec': 0.7643509011066087, 'eta': 0.195395262315374, 'iota': Array(0.89536876, dtype=float64, weak_type=True), 'dec': Array(0.87003406, dtype=float64, weak_type=True), 'H1_SNR': 13.47735101209319, 'L1_SNR': 10.857550382528796, 'V1_SNR': 27.040235450383303, 'network_SNR': 32.104512514979675, 'epoch': 62.0, 'gmst': 2.7288901910520846, 'duration': 64.0}
17:52 ninjax INFO    : log_prob at the injection parameters is: 455.77144631825547
17:52 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
17:52 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
17:52 ninjax INFO    : Ninjax setup complete.
17:52 ninjax INFO    : Saving output to ./outdir/injection_1/
17:52 ninjax INFO    : Using polynomial learning rate scheduler
17:52 ninjax INFO    : The hyperparameters passed to flowMC and jim are
17:52 ninjax INFO    :    n_loop_training: 200
17:52 ninjax INFO    :    n_loop_production: 10
17:52 ninjax INFO    :    n_local_steps: 100
17:52 ninjax INFO    :    n_global_steps: 1000
17:52 ninjax INFO    :    n_epochs: 25
17:52 ninjax INFO    :    n_chains: 1000
17:52 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x146dbd5ad510>
17:52 ninjax INFO    :    max_samples: 50000
17:52 ninjax INFO    :    momentum: 0.9
17:52 ninjax INFO    :    batch_size: 30000
17:52 ninjax INFO    :    use_global: True
17:52 ninjax INFO    :    keep_quantile: 0.0
17:52 ninjax INFO    :    train_thinning: 10
17:52 ninjax INFO    :    output_thinning: 50
17:52 ninjax INFO    :    n_sample_max: 10000
17:52 ninjax INFO    :    num_layers: 10
17:52 ninjax INFO    :    hidden_size: [128, 128]
17:52 ninjax INFO    :    num_bins: 8
17:52 ninjax INFO    :    save_training_chains: False
17:52 ninjax INFO    :    eps_mass_matrix: 1e-05
17:52 ninjax INFO    :    use_scheduler: True
17:52 ninjax INFO    :    use_temperature: False
17:52 ninjax INFO    :    which_temperature_schedule: exponential
17:52 ninjax INFO    :    starting_temperature: 2.0
17:52 ninjax INFO    :    stop_tempering_iteration: 75
17:52 ninjax INFO    :    stopping_criterion_global_acc: 0.1
17:52 ninjax INFO    :    stopping_criterion_loss: -inf
17:52 ninjax INFO    :    nf_model_kwargs: {}
17:52 ninjax INFO    :    local sampler arg not shown (pretty print)
17:52 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[ 7.23089584e-24  2.52624885e-23  1.45602997e-22 -3.31348618e-23
  3.61638246e-23 -3.19867816e-23  2.73249187e-23 -1.29544565e-23
  3.54652282e-23  1.15062203e-23]
[ 3.01004001e-23 -4.44457643e-23 -2.32909580e-23  2.25497879e-23
 -4.03998343e-23 -2.30084726e-23  3.39312284e-23 -2.62255579e-23
 -1.10265683e-23 -2.60664635e-23]
Checking the noise that was generated in inject_signal ifo:
[-2.10496516e-23 -3.03662653e-23 -6.53054151e-23  2.66082634e-23
 -3.29880992e-23 -3.90887786e-23 -2.04579855e-23 -1.90722761e-23
 -9.56081944e-24  2.05497639e-23]
[-6.31592259e-24 -8.09065797e-23  2.56987321e-23 -4.26024871e-23
 -5.00721657e-23 -4.65765163e-23  6.95111381e-23 -8.43545372e-23
  8.21185080e-23 -4.55843898e-23]
Checking the noise that was generated in inject_signal ifo:
[-1.41564081e-23  3.64316598e-24  1.39012853e-24  2.41064906e-23
 -6.84118706e-23 -8.11323354e-25 -3.11216771e-23 -8.79575173e-24
 -3.65738111e-24 -7.03762320e-23]
[-2.24754979e-23  6.65773537e-23  1.45407465e-24  7.68931422e-23
 -1.50807475e-23  8.93564938e-23  2.79004264e-23 -1.43594138e-23
 -6.69401005e-23 -1.66112696e-23]
Checking the noise that was generated in inject_signal ifo:
[ 7.23089584e-24  2.52624885e-23  1.45602997e-22 -3.31348618e-23
  3.61638246e-23 -3.19867816e-23  2.73249187e-23 -1.29544565e-23
  3.54652282e-23  1.15062203e-23]
[ 3.01004001e-23 -4.44457643e-23 -2.32909580e-23  2.25497879e-23
 -4.03998343e-23 -2.30084726e-23  3.39312284e-23 -2.62255579e-23
 -1.10265683e-23 -2.60664635e-23]
Checking the noise that was generated in inject_signal ifo:
[-2.10496516e-23 -3.03662653e-23 -6.53054151e-23  2.66082634e-23
 -3.29880992e-23 -3.90887786e-23 -2.04579855e-23 -1.90722761e-23
 -9.56081944e-24  2.05497639e-23]
[-6.31592259e-24 -8.09065797e-23  2.56987321e-23 -4.26024871e-23
 -5.00721657e-23 -4.65765163e-23  6.95111381e-23 -8.43545372e-23
  8.21185080e-23 -4.55843898e-23]
Checking the noise that was generated in inject_signal ifo:
[-1.41564081e-23  3.64316598e-24  1.39012853e-24  2.41064906e-23
 -6.84118706e-23 -8.11323354e-25 -3.11216771e-23 -8.79575173e-24
 -3.65738111e-24 -7.03762320e-23]
[-2.24754979e-23  6.65773537e-23  1.45407465e-24  7.68931422e-23
 -1.50807475e-23  8.93564938e-23  2.79004264e-23 -1.43594138e-23
 -6.69401005e-23 -1.66112696e-23]
Checking the noise that was generated in inject_signal ifo:
[-7.35565640e-24 -6.79743817e-23  3.78142547e-23 -6.02467726e-23
  8.11337093e-23 -2.44420638e-23  4.41441934e-24  2.45643105e-23
  7.21236894e-23  3.44652198e-23]
[-8.54281051e-24 -1.67203632e-23 -1.30659860e-23  3.07905404e-23
  2.61508885e-23  4.25200492e-23  2.27735290e-24 -2.25319642e-23
 -3.72441469e-23  1.83811724e-23]
Checking the noise that was generated in inject_signal ifo:
[ 7.37864759e-23 -8.98365808e-24 -5.82668973e-24 -2.76451225e-23
  3.62321443e-24 -1.87195537e-23 -6.05633724e-24  2.47590878e-23
 -9.76672238e-24  3.42645991e-23]
[ 5.33908820e-24  3.82078497e-23  7.00615558e-24  4.40254755e-23
 -4.16882505e-24 -3.04187629e-23 -5.36569195e-23 -4.59011993e-25
 -4.29134780e-23  3.11755382e-23]
Checking the noise that was generated in inject_signal ifo:
[ 2.43439689e-23 -4.84969014e-23 -1.20409271e-23 -4.41703425e-23
  1.71944524e-23 -4.46215509e-23 -4.88254315e-24 -4.11316826e-23
  3.00654503e-23 -2.70251325e-23]
[ 6.55392336e-23 -1.87907200e-23 -4.95994799e-24 -7.91950768e-24
 -5.07652279e-23 -9.93269640e-24 -2.27206423e-23  9.70925808e-24
 -4.02675548e-23 -3.76608506e-23]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.07519888877868652 seconds
Using provided reference parameters:
ref_params for relative binning:
{'M_c': 2.187330960137529, 'q': 0.3629984189169462, 's1_z': 0.021359330773032023, 's2_z': -0.011027044848872493, 'lambda_1': 7.039733026387287, 'lambda_2': 130.88675758435755, 'cos_iota': 0.6252310655698974, 'd_L': 189.2026666284581, 't_c': 0.001752586024717978, 'phase_c': 1.676776314177889, 'psi': 1.7145455330901773, 'ra': 2.9259967556800612, 'sin_dec': 0.7643509011066087, 'eta': 0.195395262315374, 'iota': Array(0.89536876, dtype=float64, weak_type=True), 'dec': Array(0.87003406, dtype=float64, weak_type=True), 'H1_SNR': 13.47735101209319, 'L1_SNR': 10.857550382528796, 'V1_SNR': 27.040235450383303, 'network_SNR': 32.104512514979675, 'epoch': 62.0, 'gmst': 2.7288901910520846, 'duration': 64.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.49187660217285156 seconds
Time for h_sky_low and h_sky_center: 5.498102188110352 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.643310546875
Going to compute coefficients . . .
Time for computing coefficients: 80.9702377319336 seconds
Time for computing coefficients: 7.254403352737427 seconds
Time for computing coefficients: 6.930794715881348 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:00<6:40:18, 120.70s/it]Tuning global sampler:   1%|          | 2/200 [02:05<2:52:49, 52.37s/it] Tuning global sampler:   2%|▏         | 3/200 [02:09<1:40:17, 30.55s/it]Tuning global sampler:   2%|▏         | 4/200 [02:14<1:06:17, 20.29s/it]Tuning global sampler:   2%|▎         | 5/200 [02:18<47:31, 14.62s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:23<36:14, 11.21s/it]Tuning global sampler:   4%|▎         | 7/200 [02:28<29:47,  9.26s/it]Tuning global sampler:   4%|▍         | 8/200 [02:33<24:52,  7.77s/it]Tuning global sampler:   4%|▍         | 9/200 [02:37<21:33,  6.77s/it]Tuning global sampler:   5%|▌         | 10/200 [02:42<19:08,  6.04s/it]Tuning global sampler:   6%|▌         | 11/200 [02:46<17:36,  5.59s/it]Tuning global sampler:   6%|▌         | 12/200 [02:51<16:32,  5.28s/it]Tuning global sampler:   6%|▋         | 13/200 [02:56<15:44,  5.05s/it]Tuning global sampler:   7%|▋         | 14/200 [03:00<15:14,  4.92s/it]Tuning global sampler:   8%|▊         | 15/200 [03:05<14:52,  4.82s/it]Tuning global sampler:   8%|▊         | 16/200 [03:09<14:35,  4.76s/it]Tuning global sampler:   8%|▊         | 17/200 [03:14<14:21,  4.71s/it]Tuning global sampler:   9%|▉         | 18/200 [03:19<14:11,  4.68s/it]Tuning global sampler:  10%|▉         | 19/200 [03:23<14:03,  4.66s/it]Tuning global sampler:  10%|█         | 20/200 [03:28<13:56,  4.65s/it]Tuning global sampler:  10%|█         | 21/200 [03:32<13:48,  4.63s/it]Tuning global sampler:  11%|█         | 22/200 [03:37<13:45,  4.64s/it]Tuning global sampler:  12%|█▏        | 23/200 [03:42<14:21,  4.87s/it]Tuning global sampler:  12%|█▏        | 24/200 [03:47<13:51,  4.72s/it]Tuning global sampler:  12%|█▎        | 25/200 [03:51<13:27,  4.61s/it]Tuning global sampler:  13%|█▎        | 26/200 [03:56<13:09,  4.54s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:00<12:56,  4.49s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:05<13:12,  4.61s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:09<12:56,  4.54s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:14<12:42,  4.49s/it]Tuning global sampler:  16%|█▌        | 31/200 [04:18<12:31,  4.45s/it]Tuning global sampler:  16%|█▌        | 32/200 [04:22<12:22,  4.42s/it]Tuning global sampler:  16%|█▋        | 33/200 [04:27<12:13,  4.39s/it]Tuning global sampler:  17%|█▋        | 34/200 [04:31<12:05,  4.37s/it]Tuning global sampler:  18%|█▊        | 35/200 [04:35<12:00,  4.37s/it]Tuning global sampler:  18%|█▊        | 36/200 [04:40<11:56,  4.37s/it]Tuning global sampler:  18%|█▊        | 37/200 [04:44<11:51,  4.36s/it]Tuning global sampler:  19%|█▉        | 38/200 [04:48<11:48,  4.37s/it]Tuning global sampler:  20%|█▉        | 39/200 [04:53<11:43,  4.37s/it]Tuning global sampler:  20%|██        | 40/200 [04:58<12:18,  4.62s/it]Tuning global sampler:  20%|██        | 41/200 [05:02<12:01,  4.54s/it]Tuning global sampler:  21%|██        | 42/200 [05:07<11:48,  4.49s/it]Tuning global sampler:  22%|██▏       | 43/200 [05:11<11:38,  4.45s/it]Tuning global sampler:  22%|██▏       | 44/200 [05:15<11:29,  4.42s/it]Tuning global sampler:  22%|██▎       | 45/200 [05:20<11:21,  4.39s/it]Tuning global sampler:  23%|██▎       | 46/200 [05:24<11:15,  4.39s/it]Tuning global sampler:  24%|██▎       | 47/200 [05:28<11:10,  4.38s/it]Tuning global sampler:  24%|██▍       | 48/200 [05:33<11:04,  4.37s/it]Tuning global sampler:  24%|██▍       | 49/200 [05:37<11:08,  4.43s/it]Tuning global sampler:  25%|██▌       | 50/200 [05:42<11:01,  4.41s/it]Tuning global sampler:  26%|██▌       | 51/200 [05:46<10:55,  4.40s/it]Tuning global sampler:  26%|██▌       | 52/200 [05:50<10:49,  4.39s/it]Tuning global sampler:  26%|██▋       | 53/200 [05:55<10:44,  4.38s/it]Tuning global sampler:  27%|██▋       | 54/200 [05:59<10:39,  4.38s/it]Tuning global sampler:  28%|██▊       | 55/200 [06:04<10:32,  4.36s/it]Tuning global sampler:  28%|██▊       | 56/200 [06:08<10:27,  4.36s/it]Tuning global sampler:  28%|██▊       | 57/200 [06:12<10:23,  4.36s/it]Tuning global sampler:  29%|██▉       | 58/200 [06:17<10:20,  4.37s/it]Tuning global sampler:  30%|██▉       | 59/200 [06:22<10:52,  4.63s/it]Tuning global sampler:  30%|███       | 60/200 [06:26<10:37,  4.56s/it]Tuning global sampler:  30%|███       | 61/200 [06:31<10:25,  4.50s/it]Tuning global sampler:  31%|███       | 62/200 [06:35<10:15,  4.46s/it]Tuning global sampler:  32%|███▏      | 63/200 [06:39<10:07,  4.44s/it]Tuning global sampler:  32%|███▏      | 64/200 [06:44<10:01,  4.42s/it]Tuning global sampler:  32%|███▎      | 65/200 [06:48<09:54,  4.40s/it]Tuning global sampler:  33%|███▎      | 66/200 [06:52<09:47,  4.38s/it]Tuning global sampler:  34%|███▎      | 67/200 [06:57<09:41,  4.37s/it]Tuning global sampler:  34%|███▍      | 68/200 [07:01<09:36,  4.37s/it]Tuning global sampler:  34%|███▍      | 69/200 [07:06<09:32,  4.37s/it]Tuning global sampler:  34%|███▍      | 69/200 [07:10<13:37,  6.24s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.21s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.21s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.21s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.21s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.21s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.21s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.21s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.21s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.21s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.21s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.21s/it]
18:00 ninjax INFO    : Saving samples to ./outdir/injection_1/results_training.npz
18:00 ninjax INFO    : Saving the NF
18:00 ninjax INFO    : Time taken: 469.73282504081726 seconds (7.828880417346954 minutes)
18:00 ninjax INFO    : Creating the final corner plot
18:00 ninjax INFO    : Dumping the final production chains
18:00 ninjax INFO    : Chains shape is: (13, 220000)
18:00 ninjax INFO    : Key: M_c: ESS = 37194, Rhat = 1.0168843005284725
18:00 ninjax INFO    : Key: q: ESS = 28963, Rhat = 1.0210428406959118
18:00 ninjax INFO    : Key: s1_z: ESS = 31901, Rhat = 1.0197682970946251
18:00 ninjax INFO    : Key: s2_z: ESS = 61800, Rhat = 1.0126769283977703
18:00 ninjax INFO    : Key: lambda_1: ESS = 95783, Rhat = 1.0086173288219857
18:00 ninjax INFO    : Key: lambda_2: ESS = 56793, Rhat = 1.012671716248986
18:00 ninjax INFO    : Key: cos_iota: ESS = 69504, Rhat = 1.0109953683905797
18:00 ninjax INFO    : Key: d_L: ESS = 76290, Rhat = 1.0101930373986663
18:00 ninjax INFO    : Key: t_c: ESS = 61384, Rhat = 1.012490897488238
18:00 ninjax INFO    : Key: phase_c: ESS = 61431, Rhat = 1.0121536766100874
18:00 ninjax INFO    : Key: psi: ESS = 70580, Rhat = 1.0118247061917414
18:00 ninjax INFO    : Key: ra: ESS = 81514, Rhat = 1.009569186759512
18:00 ninjax INFO    : Key: sin_dec: ESS = 85812, Rhat = 1.0094623135341396
18:00 ninjax INFO    : Key: eta: ESS = 28963, Rhat = 1.0210428406959118
18:00 ninjax INFO    : Key: iota: ESS = 69504, Rhat = 1.0109953683905797
18:00 ninjax INFO    : Key: dec: ESS = 85812, Rhat = 1.0094623135341396
18:00 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 2.158 +/- 0.160
q: 0.458 +/- 0.139
s1_z: -0.012 +/- 0.027
s2_z: -0.008 +/- 0.027
lambda_1: 1520.007 +/- 1569.824
lambda_2: 2161.983 +/- 1563.167
cos_iota: 0.574 +/- 0.403
d_L: 315.357 +/- 78.641
t_c: 0.007 +/- 0.017
phase_c: 3.436 +/- 1.686
psi: 1.632 +/- 0.842
ra: 2.936 +/- 0.718
sin_dec: 0.620 +/- 0.372
Log probability: 287.843 +/- 171.560
Local acceptance: 0.970 +/- 0.171
Global acceptance: 0.010 +/- 0.100
Max loss: 22.784, Min loss: 5.568
Production summary
==========
M_c: 2.187 +/- 0.000
q: 0.394 +/- 0.029
s1_z: -0.007 +/- 0.028
s2_z: -0.004 +/- 0.029
lambda_1: 31.772 +/- 28.951
lambda_2: 594.781 +/- 514.508
cos_iota: 0.847 +/- 0.112
d_L: 252.062 +/- 30.423
t_c: 0.002 +/- 0.000
phase_c: 3.142 +/- 1.818
psi: 1.519 +/- 0.911
ra: 2.934 +/- 0.016
sin_dec: 0.763 +/- 0.006
Log probability: 452.425 +/- 2.425
Local acceptance: 0.943 +/- 0.233
Global acceptance: 0.116 +/- 0.320
DONE

JOB STATISTICS
==============
Job ID: 10815226
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:09:22
CPU Efficiency: 5.60% of 02:47:12 core-walltime
Job Wall-clock time: 00:10:27
Memory Utilized: 3.96 GB
Memory Efficiency: 39.60% of 10.00 GB
