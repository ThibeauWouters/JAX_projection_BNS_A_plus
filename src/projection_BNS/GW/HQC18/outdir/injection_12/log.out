Thu Mar 27 21:29:22 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
21:29 ninjax INFO    : Checking and setting outdir
21:29 ninjax INFO    : The outdir is set to ./outdir/injection_12
21:29 ninjax INFO    : Loading the given config
21:29 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
21:29 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
21:29 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/outdir/injection_12/complete_config.json
21:29 ninjax INFO    : No seed specified. Generating a random seed: 600671
21:29 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 738615
21:29 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 963470
21:29 ninjax INFO    : Loading the priors
21:29 ninjax INFO    :    Mc_prior = Uniform(1.0, 2.2, naming=["M_c"])
21:29 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
21:29 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
21:29 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
21:29 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
21:29 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
21:29 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
21:29 ninjax INFO    :    dL_prior = PowerLaw(1.0, 460.0, 2.0, naming=["d_L"])
21:29 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
21:29 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
21:29 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
21:29 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
21:29 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
21:29 ninjax INFO    : Finished prior setup
21:29 ninjax INFO    : Setting the transforms
21:29 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
21:29 ninjax INFO    : transforms_str_list has 3 elements
21:29 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
21:29 ninjax INFO    : Setting the likelihood
21:29 ninjax INFO    : GW likelihood provided, setting up the GW pipe
21:29 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
21:29 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
21:29 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
21:29 ninjax INFO    : self.is_BNS_run is True
21:29 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
21:29 ninjax INFO    : GW run is an injection
21:29 ninjax INFO    : Setting up GW injection . . . 
21:29 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
21:29 ninjax INFO    : Generating new injection
21:29 ninjax INFO    : Sanity check: generated parameters:
21:29 ninjax INFO    : {'M_c': 1.6378201701625676, 'q': 0.42168681615916903, 's1_z': -0.04609816346391156, 's2_z': -0.04700371362572478, 'lambda_1': 3959.11074688014, 'lambda_2': 3106.9112610471516, 'cos_iota': 0.042636402563060116, 'd_L': 401.39726434905265, 't_c': -0.044333504053937704, 'phase_c': 1.6426290074976853, 'psi': 1.9106938810070337, 'ra': 2.759111173834625, 'sin_dec': -0.0718530676223077}
21:29 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
21:29 ninjax INFO    : Injected lambda_1: 7.039733026387287
21:29 ninjax INFO    : Injected lambda_2: 533.9200225401831
21:29 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.6378201701625676 is 128.0
21:29 ninjax INFO    : After transforms, the injection parameters are:
21:29 ninjax INFO    : {'M_c': 1.6378201701625676, 'q': 0.42168681615916903, 's1_z': -0.04609816346391156, 's2_z': -0.04700371362572478, 'lambda_1': 7.039733026387287, 'lambda_2': 533.9200225401831, 'cos_iota': 0.042636402563060116, 'd_L': 401.39726434905265, 't_c': -0.044333504053937704, 'phase_c': 1.6426290074976853, 'psi': 1.9106938810070337, 'ra': 2.759111173834625, 'sin_dec': -0.0718530676223077, 'eta': 0.2086325907669368, 'iota': Array(1.528147, dtype=float64, weak_type=True), 'dec': Array(-0.07191504, dtype=float64, weak_type=True)}
21:29 ninjax INFO    : The trial injection parameters are {'M_c': 1.6378201701625676, 'eta': 0.2086325907669368, 's1_z': -0.04609816346391156, 's2_z': -0.04700371362572478, 'lambda_1': 7.039733026387287, 'lambda_2': 533.9200225401831, 'd_L': 401.39726434905265, 'phase_c': 1.6426290074976853, 'iota': 1.5281469957978966, 't_c': -0.044333504053937704, 'psi': 1.9106938810070337, 'ra': 2.759111173834625, 'dec': -0.07191503963737271}
21:29 ninjax INFO    : Injecting signals . . .
21:29 ninjax INFO    : self.ifos
21:29 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
21:29 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [-5.31747661e-23+5.03848901e-23j  2.63263158e-23+7.02700404e-23j
  4.04061470e-24-2.67856140e-23j ...
 -1.54738232e-23+1.32639537e-23j  3.40524657e-23+9.97639566e-24j
 -1.14389206e-23-2.27718725e-23j]
21:29 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
21:29 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [4.00314832e-23+3.78129364e-23j 3.81513154e-23-6.65849241e-23j
 2.11796901e-23+1.21713721e-24j ...
 1.18477737e-23+4.96294092e-23j 5.85347845e-24-5.29143608e-24j
 5.77545377e-24-6.37400198e-24j]
21:29 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
21:29 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [-2.83973702e-23-5.43816698e-23j -1.25226283e-23+6.70132929e-23j
  8.07273379e-23+4.65711411e-23j ...
 -1.84051610e-23-1.54011098e-24j  6.30217041e-25-4.62472883e-23j
  1.64192795e-23+1.92538816e-24j]
21:29 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
21:29 ninjax INFO    : SNR for ifo H1 is 0.764254015905229
21:29 ninjax INFO    : SNR for ifo L1 is 3.2131142656053333
21:29 ninjax INFO    : SNR for ifo V1 is 5.2943121453090685
21:29 ninjax INFO    : The network SNR is 6.240026328200137
21:29 ninjax INFO    : The network SNR does not pass the threshold, trying again
21:29 ninjax INFO    : Generating new injection
21:29 ninjax INFO    : Sanity check: generated parameters:
21:29 ninjax INFO    : {'M_c': 2.036673130484189, 'q': 0.6290262551362221, 's1_z': -0.0028541458001238446, 's2_z': -0.019082974527534203, 'lambda_1': 2365.814701025094, 'lambda_2': 508.6691957342926, 'cos_iota': 0.20340933607579892, 'd_L': 373.7959892958178, 't_c': 0.016382723496695478, 'phase_c': 5.602315708425741, 'psi': 2.2037859762843355, 'ra': 0.2006031864074195, 'sin_dec': 0.028275808622918674}
21:29 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
21:29 ninjax INFO    : Injected lambda_1: 7.039733026387287
21:29 ninjax INFO    : Injected lambda_2: 31.760476484103993
21:29 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 2.036673130484189 is 128.0
21:29 ninjax INFO    : After transforms, the injection parameters are:
21:29 ninjax INFO    : {'M_c': 2.036673130484189, 'q': 0.6290262551362221, 's1_z': -0.0028541458001238446, 's2_z': -0.019082974527534203, 'lambda_1': 7.039733026387287, 'lambda_2': 31.760476484103993, 'cos_iota': 0.20340933607579892, 'd_L': 373.7959892958178, 't_c': 0.016382723496695478, 'phase_c': 5.602315708425741, 'psi': 2.2037859762843355, 'ra': 0.2006031864074195, 'sin_dec': 0.028275808622918674, 'eta': 0.23703506961739917, 'iota': Array(1.36595752, dtype=float64, weak_type=True), 'dec': Array(0.02827958, dtype=float64, weak_type=True)}
21:29 ninjax INFO    : The trial injection parameters are {'M_c': 2.036673130484189, 'eta': 0.23703506961739917, 's1_z': -0.0028541458001238446, 's2_z': -0.019082974527534203, 'lambda_1': 7.039733026387287, 'lambda_2': 31.760476484103993, 'd_L': 373.7959892958178, 'phase_c': 5.602315708425741, 'iota': 1.3659575232753838, 't_c': 0.016382723496695478, 'psi': 2.2037859762843355, 'ra': 0.2006031864074195, 'dec': 0.028279577831308588}
21:29 ninjax INFO    : Injecting signals . . .
21:29 ninjax INFO    : self.ifos
21:29 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
21:29 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [-5.26112870e-23+5.39827769e-23j  2.64629175e-23+6.64773807e-23j
  2.47988665e-24-2.28304860e-23j ...
 -1.54738228e-23+1.32639522e-23j  3.40524662e-23+9.97639425e-24j
 -1.14389199e-23-2.27718738e-23j]
21:29 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
21:29 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [3.68087965e-23+3.65874890e-23j 4.02368577e-23-6.25223828e-23j
 2.21770657e-23-2.31990471e-24j ...
 1.18477745e-23+4.96294083e-23j 5.85347932e-24-5.29143687e-24j
 5.77545471e-24-6.37400268e-24j]
21:29 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
21:29 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [-2.95841652e-23-5.32565392e-23j -8.04887217e-24+6.92160632e-23j
  8.05723509e-23+4.07544242e-23j ...
 -1.84051604e-23-1.54011181e-24j  6.30217769e-25-4.62472891e-23j
  1.64192803e-23+1.92538747e-24j]
21:29 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
21:29 ninjax INFO    : SNR for ifo H1 is 8.490520210435458
21:29 ninjax INFO    : SNR for ifo L1 is 6.579726220212065
21:29 ninjax INFO    : SNR for ifo V1 is 4.6873662942502925
21:29 ninjax INFO    : The network SNR is 11.71977531155068
21:29 ninjax INFO    : Network SNR passes threshold
21:29 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
21:29 ninjax INFO    :    M_c: 2.036673130484189
21:29 ninjax INFO    :    q: 0.6290262551362221
21:29 ninjax INFO    :    s1_z: -0.0028541458001238446
21:29 ninjax INFO    :    s2_z: -0.019082974527534203
21:29 ninjax INFO    :    lambda_1: 7.039733026387287
21:29 ninjax INFO    :    lambda_2: 31.760476484103993
21:29 ninjax INFO    :    cos_iota: 0.20340933607579892
21:29 ninjax INFO    :    d_L: 373.7959892958178
21:29 ninjax INFO    :    t_c: 0.016382723496695478
21:29 ninjax INFO    :    phase_c: 5.602315708425741
21:29 ninjax INFO    :    psi: 2.2037859762843355
21:29 ninjax INFO    :    ra: 0.2006031864074195
21:29 ninjax INFO    :    sin_dec: 0.028275808622918674
21:29 ninjax INFO    :    eta: 0.23703506961739917
21:29 ninjax INFO    :    iota: 1.3659575232753838
21:29 ninjax INFO    :    dec: 0.028279577831308588
21:29 ninjax INFO    :    H1_SNR: 8.490520210435458
21:29 ninjax INFO    :    L1_SNR: 6.579726220212065
21:29 ninjax INFO    :    V1_SNR: 4.6873662942502925
21:29 ninjax INFO    :    network_SNR: 11.71977531155068
21:29 ninjax INFO    :    epoch: 126.0
21:29 ninjax INFO    :    gmst: 2.7288901910520846
21:29 ninjax INFO    :    duration: 128.0
21:29 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
21:29 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
21:29 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
21:31 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 140.60029244422913 seconds = 2.3433382074038187 minutes
21:31 ninjax INFO    : The priors are not modified after their initialization
21:31 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
21:31 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
21:31 ninjax INFO    : sample: {'M_c': Array([1.68579404, 1.39539842, 1.09191628], dtype=float64), 'q': Array([0.60335788, 0.96662961, 0.91112401], dtype=float64), 's1_z': Array([-0.00831093,  0.04561808,  0.02218581], dtype=float64), 's2_z': Array([-0.04766575,  0.00993468, -0.01396757], dtype=float64), 'lambda_1': Array([1755.64233287, 2594.46636771,  542.25332042], dtype=float64), 'lambda_2': Array([1207.51217988,  846.33661652, 4030.12057717], dtype=float64), 'cos_iota': Array([ 0.75892192,  0.89137983, -0.41483288], dtype=float64), 'd_L': Array([343.23582143, 312.68594328, 230.14312191], dtype=float64), 't_c': Array([-0.01470398,  0.01662214, -0.06442514], dtype=float64), 'phase_c': Array([2.93754649, 2.23585762, 5.01560041], dtype=float64), 'psi': Array([1.76203035, 2.53892985, 0.79022799], dtype=float64), 'ra': Array([2.09918024, 3.65450763, 1.93846137], dtype=float64), 'sin_dec': Array([ 0.5731531 ,  0.72816347, -0.89991509], dtype=float64)}
21:32 ninjax INFO    : log_prob: [-219.59869145  -88.9842037   -78.89782759]
21:32 ninjax INFO    : Checking log_prob at injection parameters: {'M_c': 2.036673130484189, 'q': 0.6290262551362221, 's1_z': -0.0028541458001238446, 's2_z': -0.019082974527534203, 'lambda_1': 7.039733026387287, 'lambda_2': 31.760476484103993, 'cos_iota': 0.20340933607579892, 'd_L': 373.7959892958178, 't_c': 0.016382723496695478, 'phase_c': 5.602315708425741, 'psi': 2.2037859762843355, 'ra': 0.2006031864074195, 'sin_dec': 0.028275808622918674, 'eta': 0.23703506961739917, 'iota': Array(1.36595752, dtype=float64, weak_type=True), 'dec': Array(0.02827958, dtype=float64, weak_type=True), 'H1_SNR': 8.490520210435458, 'L1_SNR': 6.579726220212065, 'V1_SNR': 4.6873662942502925, 'network_SNR': 11.71977531155068, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
21:32 ninjax INFO    : log_prob at the injection parameters is: 48.853405956310354
21:32 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
21:32 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
21:32 ninjax INFO    : Ninjax setup complete.
21:32 ninjax INFO    : Saving output to ./outdir/injection_12/
21:32 ninjax INFO    : Using polynomial learning rate scheduler
21:32 ninjax INFO    : The hyperparameters passed to flowMC and jim are
21:32 ninjax INFO    :    n_loop_training: 200
21:32 ninjax INFO    :    n_loop_production: 10
21:32 ninjax INFO    :    n_local_steps: 100
21:32 ninjax INFO    :    n_global_steps: 1000
21:32 ninjax INFO    :    n_epochs: 25
21:32 ninjax INFO    :    n_chains: 1000
21:32 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x14f840548d30>
21:32 ninjax INFO    :    max_samples: 50000
21:32 ninjax INFO    :    momentum: 0.9
21:32 ninjax INFO    :    batch_size: 30000
21:32 ninjax INFO    :    use_global: True
21:32 ninjax INFO    :    keep_quantile: 0.0
21:32 ninjax INFO    :    train_thinning: 10
21:32 ninjax INFO    :    output_thinning: 50
21:32 ninjax INFO    :    n_sample_max: 10000
21:32 ninjax INFO    :    num_layers: 10
21:32 ninjax INFO    :    hidden_size: [128, 128]
21:32 ninjax INFO    :    num_bins: 8
21:32 ninjax INFO    :    save_training_chains: False
21:32 ninjax INFO    :    eps_mass_matrix: 1e-05
21:32 ninjax INFO    :    use_scheduler: True
21:32 ninjax INFO    :    use_temperature: False
21:32 ninjax INFO    :    which_temperature_schedule: exponential
21:32 ninjax INFO    :    starting_temperature: 2.0
21:32 ninjax INFO    :    stop_tempering_iteration: 75
21:32 ninjax INFO    :    stopping_criterion_global_acc: 0.1
21:32 ninjax INFO    :    stopping_criterion_loss: -inf
21:32 ninjax INFO    :    nf_model_kwargs: {}
21:32 ninjax INFO    :    local sampler arg not shown (pretty print)
21:32 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-5.33804912e-23  2.59996281e-23  4.11713043e-24 -3.20881540e-23
 -4.12078047e-23  3.65056328e-23  1.67172699e-23  3.95787783e-23
 -3.83888607e-23 -1.95370339e-23]
[ 5.00933406e-23  7.04131570e-23 -2.64374245e-23  4.21429843e-23
  9.51628546e-24 -3.05502510e-23 -4.44937394e-23 -4.69642190e-23
  1.04080053e-22  6.14604997e-25]
Checking the noise that was generated in inject_signal ifo:
[ 3.89196501e-23  3.89146561e-23  2.25941067e-23 -3.02774548e-23
  1.54242737e-23 -1.05945828e-23 -1.48824435e-23 -2.88272885e-23
  5.18645993e-23 -9.40527663e-24]
[ 3.88200952e-23 -6.52942698e-23  7.21312820e-25 -6.19342285e-23
  7.22640564e-23  3.16050350e-23 -2.49991591e-23 -4.22678185e-23
 -1.37035621e-23  1.38929255e-23]
Checking the noise that was generated in inject_signal ifo:
[-2.75558451e-23 -9.40046825e-24  8.11276321e-23 -6.14097906e-23
 -6.41660383e-24 -3.46837447e-23 -5.52063269e-23  2.75158074e-23
 -1.86531299e-23 -3.91640107e-23]
[-5.13657450e-23  6.67962862e-23  4.34686003e-23 -8.43831165e-23
 -5.84311330e-24 -1.30290192e-23 -3.43506166e-23 -5.37721326e-23
  5.72157982e-23  3.48859162e-23]
Checking the noise that was generated in inject_signal ifo:
[-5.33804912e-23  2.59996281e-23  4.11713043e-24 -3.20881540e-23
 -4.12078047e-23  3.65056328e-23  1.67172699e-23  3.95787783e-23
 -3.83888607e-23 -1.95370339e-23]
[ 5.00933406e-23  7.04131570e-23 -2.64374245e-23  4.21429843e-23
  9.51628546e-24 -3.05502510e-23 -4.44937394e-23 -4.69642190e-23
  1.04080053e-22  6.14604997e-25]
Checking the noise that was generated in inject_signal ifo:
[ 3.89196501e-23  3.89146561e-23  2.25941067e-23 -3.02774548e-23
  1.54242737e-23 -1.05945828e-23 -1.48824435e-23 -2.88272885e-23
  5.18645993e-23 -9.40527663e-24]
[ 3.88200952e-23 -6.52942698e-23  7.21312820e-25 -6.19342285e-23
  7.22640564e-23  3.16050350e-23 -2.49991591e-23 -4.22678185e-23
 -1.37035621e-23  1.38929255e-23]
Checking the noise that was generated in inject_signal ifo:
[-2.75558451e-23 -9.40046825e-24  8.11276321e-23 -6.14097906e-23
 -6.41660383e-24 -3.46837447e-23 -5.52063269e-23  2.75158074e-23
 -1.86531299e-23 -3.91640107e-23]
[-5.13657450e-23  6.67962862e-23  4.34686003e-23 -8.43831165e-23
 -5.84311330e-24 -1.30290192e-23 -3.43506166e-23 -5.37721326e-23
  5.72157982e-23  3.48859162e-23]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.10937690734863281 seconds
Using provided reference parameters:
ref_params for relative binning:
{'M_c': 2.036673130484189, 'q': 0.6290262551362221, 's1_z': -0.0028541458001238446, 's2_z': -0.019082974527534203, 'lambda_1': 7.039733026387287, 'lambda_2': 31.760476484103993, 'cos_iota': 0.20340933607579892, 'd_L': 373.7959892958178, 't_c': 0.016382723496695478, 'phase_c': 5.602315708425741, 'psi': 2.2037859762843355, 'ra': 0.2006031864074195, 'sin_dec': 0.028275808622918674, 'eta': 0.23703506961739917, 'iota': Array(1.36595752, dtype=float64, weak_type=True), 'dec': Array(0.02827958, dtype=float64, weak_type=True), 'H1_SNR': 8.490520210435458, 'L1_SNR': 6.579726220212065, 'V1_SNR': 4.6873662942502925, 'network_SNR': 11.71977531155068, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.508657693862915 seconds
Time for h_sky_low and h_sky_center: 5.290277004241943 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.6908636093139648
Going to compute coefficients . . .
Time for computing coefficients: 119.91434669494629 seconds
Time for computing coefficients: 6.79276704788208 seconds
Time for computing coefficients: 6.771097898483276 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:01<6:43:36, 121.69s/it]Tuning global sampler:   1%|          | 2/200 [02:06<2:54:16, 52.81s/it] Tuning global sampler:   2%|▏         | 3/200 [02:10<1:41:09, 30.81s/it]Tuning global sampler:   2%|▏         | 4/200 [02:15<1:06:52, 20.47s/it]Tuning global sampler:   2%|▎         | 5/200 [02:21<48:57, 15.06s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:25<37:13, 11.51s/it]Tuning global sampler:   4%|▎         | 7/200 [02:30<29:43,  9.24s/it]Tuning global sampler:   4%|▍         | 8/200 [02:34<24:51,  7.77s/it]Tuning global sampler:   4%|▍         | 9/200 [02:39<21:31,  6.76s/it]Tuning global sampler:   5%|▌         | 10/200 [02:43<19:07,  6.04s/it]Tuning global sampler:   6%|▌         | 11/200 [02:48<17:37,  5.60s/it]Tuning global sampler:   6%|▌         | 12/200 [02:52<16:35,  5.29s/it]Tuning global sampler:   6%|▋         | 13/200 [02:57<15:48,  5.07s/it]Tuning global sampler:   7%|▋         | 14/200 [03:02<15:19,  4.94s/it]Tuning global sampler:   8%|▊         | 15/200 [03:06<14:57,  4.85s/it]Tuning global sampler:   8%|▊         | 16/200 [03:11<14:40,  4.79s/it]Tuning global sampler:   8%|▊         | 17/200 [03:16<14:28,  4.74s/it]Tuning global sampler:   9%|▉         | 18/200 [03:20<14:17,  4.71s/it]Tuning global sampler:  10%|▉         | 19/200 [03:25<14:08,  4.69s/it]Tuning global sampler:  10%|█         | 20/200 [03:29<14:00,  4.67s/it]Tuning global sampler:  10%|█         | 21/200 [03:34<13:53,  4.66s/it]Tuning global sampler:  11%|█         | 22/200 [03:39<13:45,  4.64s/it]Tuning global sampler:  12%|█▏        | 23/200 [03:43<13:38,  4.63s/it]Tuning global sampler:  12%|█▏        | 24/200 [03:49<14:10,  4.83s/it]Tuning global sampler:  12%|█▎        | 25/200 [03:53<13:42,  4.70s/it]Tuning global sampler:  13%|█▎        | 26/200 [03:57<13:21,  4.61s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:02<13:05,  4.54s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:06<12:53,  4.49s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:11<12:43,  4.46s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:15<12:35,  4.44s/it]Tuning global sampler:  16%|█▌        | 31/200 [04:19<12:28,  4.43s/it]Tuning global sampler:  16%|█▌        | 32/200 [04:24<12:21,  4.42s/it]Tuning global sampler:  16%|█▋        | 33/200 [04:28<12:14,  4.40s/it]Tuning global sampler:  17%|█▋        | 34/200 [04:32<12:08,  4.39s/it]Tuning global sampler:  18%|█▊        | 35/200 [04:37<12:04,  4.39s/it]Tuning global sampler:  18%|█▊        | 36/200 [04:41<11:59,  4.39s/it]Tuning global sampler:  18%|█▊        | 37/200 [04:46<11:55,  4.39s/it]Tuning global sampler:  19%|█▉        | 38/200 [04:50<11:51,  4.39s/it]Tuning global sampler:  20%|█▉        | 39/200 [04:54<11:46,  4.39s/it]Tuning global sampler:  20%|██        | 40/200 [04:59<11:42,  4.39s/it]Tuning global sampler:  20%|██        | 41/200 [05:03<11:38,  4.39s/it]Tuning global sampler:  21%|██        | 42/200 [05:08<11:33,  4.39s/it]Tuning global sampler:  22%|██▏       | 43/200 [05:12<11:29,  4.39s/it]Tuning global sampler:  22%|██▏       | 44/200 [05:17<12:07,  4.66s/it]Tuning global sampler:  22%|██▎       | 45/200 [05:22<11:48,  4.57s/it]Tuning global sampler:  23%|██▎       | 46/200 [05:26<11:35,  4.52s/it]Tuning global sampler:  24%|██▎       | 47/200 [05:30<11:25,  4.48s/it]Tuning global sampler:  24%|██▍       | 48/200 [05:35<11:16,  4.45s/it]Tuning global sampler:  24%|██▍       | 49/200 [05:39<11:09,  4.44s/it]Tuning global sampler:  25%|██▌       | 50/200 [05:44<11:03,  4.42s/it]Tuning global sampler:  26%|██▌       | 51/200 [05:48<10:57,  4.41s/it]Tuning global sampler:  26%|██▌       | 52/200 [05:52<10:51,  4.40s/it]Tuning global sampler:  26%|██▋       | 53/200 [05:57<10:46,  4.40s/it]Tuning global sampler:  27%|██▋       | 54/200 [06:01<10:42,  4.40s/it]Tuning global sampler:  28%|██▊       | 55/200 [06:06<10:36,  4.39s/it]Tuning global sampler:  28%|██▊       | 56/200 [06:10<10:30,  4.38s/it]Tuning global sampler:  28%|██▊       | 57/200 [06:14<10:27,  4.38s/it]Tuning global sampler:  29%|██▉       | 58/200 [06:19<10:23,  4.39s/it]Tuning global sampler:  30%|██▉       | 59/200 [06:23<10:18,  4.39s/it]Tuning global sampler:  30%|███       | 60/200 [06:27<10:14,  4.39s/it]Tuning global sampler:  30%|███       | 61/200 [06:32<10:10,  4.39s/it]Tuning global sampler:  31%|███       | 62/200 [06:36<10:06,  4.40s/it]Tuning global sampler:  32%|███▏      | 63/200 [06:41<10:02,  4.40s/it]Tuning global sampler:  32%|███▏      | 64/200 [06:45<09:57,  4.39s/it]Tuning global sampler:  32%|███▎      | 65/200 [06:50<10:31,  4.68s/it]Tuning global sampler:  33%|███▎      | 66/200 [06:55<10:13,  4.58s/it]Tuning global sampler:  34%|███▎      | 67/200 [06:59<10:00,  4.51s/it]Tuning global sampler:  34%|███▍      | 68/200 [07:03<09:50,  4.47s/it]Tuning global sampler:  34%|███▍      | 69/200 [07:08<09:42,  4.45s/it]Tuning global sampler:  35%|███▌      | 70/200 [07:12<09:36,  4.43s/it]Tuning global sampler:  36%|███▌      | 71/200 [07:17<09:30,  4.42s/it]Tuning global sampler:  36%|███▌      | 72/200 [07:21<09:25,  4.42s/it]Tuning global sampler:  36%|███▋      | 73/200 [07:25<09:19,  4.41s/it]Tuning global sampler:  37%|███▋      | 74/200 [07:30<09:14,  4.40s/it]Tuning global sampler:  38%|███▊      | 75/200 [07:34<09:10,  4.40s/it]Tuning global sampler:  38%|███▊      | 76/200 [07:39<09:05,  4.40s/it]Tuning global sampler:  38%|███▊      | 77/200 [07:43<08:59,  4.39s/it]Tuning global sampler:  39%|███▉      | 78/200 [07:47<08:54,  4.38s/it]Tuning global sampler:  40%|███▉      | 79/200 [07:52<08:50,  4.38s/it]Tuning global sampler:  40%|████      | 80/200 [07:56<08:46,  4.39s/it]Tuning global sampler:  40%|████      | 80/200 [08:01<12:01,  6.01s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.22s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.22s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.22s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.22s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.22s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.22s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.22s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.22s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]
21:40 ninjax INFO    : Saving samples to ./outdir/injection_12/results_training.npz
21:40 ninjax INFO    : Saving the NF
21:40 ninjax INFO    : Time taken: 524.9207818508148 seconds (8.74867969751358 minutes)
21:40 ninjax INFO    : Creating the final corner plot
21:40 ninjax INFO    : Dumping the final production chains
21:40 ninjax INFO    : Chains shape is: (13, 220000)
21:41 ninjax INFO    : Key: M_c: ESS = 41380, Rhat = 1.0164882951055885
21:41 ninjax INFO    : Key: q: ESS = 27575, Rhat = 1.0233531735589227
21:41 ninjax INFO    : Key: s1_z: ESS = 39176, Rhat = 1.0168447677964125
21:41 ninjax INFO    : Key: s2_z: ESS = 49729, Rhat = 1.0152224101594398
21:41 ninjax INFO    : Key: lambda_1: ESS = 39745, Rhat = 1.0168390674958279
21:41 ninjax INFO    : Key: lambda_2: ESS = 38440, Rhat = 1.0171237137519966
21:41 ninjax INFO    : Key: cos_iota: ESS = 27079, Rhat = 1.022963740338728
21:41 ninjax INFO    : Key: d_L: ESS = 39449, Rhat = 1.0169365192730853
21:41 ninjax INFO    : Key: t_c: ESS = 50250, Rhat = 1.0147231008841426
21:41 ninjax INFO    : Key: phase_c: ESS = 52259, Rhat = 1.0137089279574587
21:41 ninjax INFO    : Key: psi: ESS = 35761, Rhat = 1.0238556703333126
21:41 ninjax INFO    : Key: ra: ESS = 48811, Rhat = 1.0140473860442338
21:41 ninjax INFO    : Key: sin_dec: ESS = 47408, Rhat = 1.0145391829298218
21:41 ninjax INFO    : Key: eta: ESS = 27575, Rhat = 1.0233531735589227
21:41 ninjax INFO    : Key: iota: ESS = 27079, Rhat = 1.022963740338728
21:41 ninjax INFO    : Key: dec: ESS = 47408, Rhat = 1.0145391829298218
21:41 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.826 +/- 0.348
q: 0.662 +/- 0.228
s1_z: 0.000 +/- 0.028
s2_z: 0.000 +/- 0.028
lambda_1: 2053.880 +/- 1450.008
lambda_2: 2195.740 +/- 1434.163
cos_iota: 0.081 +/- 0.177
d_L: 391.609 +/- 53.299
t_c: 0.010 +/- 0.035
phase_c: 3.299 +/- 1.819
psi: 1.523 +/- 0.868
ra: 1.977 +/- 2.077
sin_dec: 0.059 +/- 0.413
Log probability: 7.036 +/- 28.236
Local acceptance: 0.996 +/- 0.065
Global acceptance: 0.014 +/- 0.117
Max loss: 22.874, Min loss: 7.693
Production summary
==========
M_c: 2.038 +/- 0.001
q: 0.781 +/- 0.124
s1_z: -0.004 +/- 0.027
s2_z: -0.004 +/- 0.028
lambda_1: 672.179 +/- 773.145
lambda_2: 1219.686 +/- 1183.509
cos_iota: 0.272 +/- 0.133
d_L: 383.168 +/- 53.994
t_c: 0.020 +/- 0.003
phase_c: 3.192 +/- 1.837
psi: 1.334 +/- 0.806
ra: 0.239 +/- 0.048
sin_dec: 0.033 +/- 0.078
Log probability: 42.582 +/- 2.924
Local acceptance: 0.995 +/- 0.073
Global acceptance: 0.107 +/- 0.310
DONE

JOB STATISTICS
==============
Job ID: 10848204
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:10:33
CPU Efficiency: 5.48% of 03:12:32 core-walltime
Job Wall-clock time: 00:12:02
Memory Utilized: 4.34 GB
Memory Efficiency: 43.40% of 10.00 GB
