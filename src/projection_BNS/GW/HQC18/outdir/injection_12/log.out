Fri Mar 28 12:53:02 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
12:53 ninjax INFO    : Checking and setting outdir
12:53 ninjax INFO    : Found generation prior file ./outdir/injection_12/generation_prior.prior
12:53 ninjax INFO    : The outdir is set to ./outdir/injection_12
12:53 ninjax INFO    : Loading the given config
12:53 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
12:53 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
12:53 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/outdir/injection_12/complete_config.json
12:53 ninjax INFO    : No seed specified. Generating a random seed: 914172
12:53 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 788747
12:53 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 634750
12:53 ninjax INFO    : Loading the priors
12:53 ninjax INFO    : Setting up the prior
12:53 ninjax INFO    :    Mc_prior = Uniform(0.98, 2.6, naming=["M_c"])
12:53 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
12:53 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
12:53 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
12:53 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
12:53 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
12:53 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
12:53 ninjax INFO    :    dL_prior = PowerLaw(1.0, 1000.0, 2.0, naming=["d_L"])
12:53 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
12:53 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
12:53 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
12:53 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
12:53 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
12:53 ninjax INFO    : Setting up the generation prior
12:53 ninjax INFO    :    mass_1_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_1_source"])
12:53 ninjax INFO    :    mass_2_source_prior = Uniform(1.0, 2.0452447532113593, naming=["mass_2_source"])
12:53 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
12:53 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
12:53 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
12:53 ninjax INFO    :    dL_prior = PowerLaw(10.0, 460.0, 2.0, naming=["d_L"])
12:53 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
12:53 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
12:53 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
12:53 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
12:53 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
12:53 ninjax INFO    : Finished prior setup
12:53 ninjax INFO    : Setting the transforms
12:53 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
12:53 ninjax INFO    : transforms_str_list has 3 elements
12:53 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
12:53 ninjax INFO    : Setting the likelihood
12:53 ninjax INFO    : GW likelihood provided, setting up the GW pipe
12:53 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
12:53 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
12:53 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
12:53 ninjax INFO    : self.is_BNS_run is True
12:53 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
12:53 ninjax INFO    : GW run is an injection
12:53 ninjax INFO    : Setting up GW injection . . . 
12:53 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
12:53 ninjax INFO    : Generating new injection
12:53 ninjax INFO    : Sanity check: generated parameters:
12:53 ninjax INFO    : {'mass_1_source': 1.0107695536112442, 'mass_2_source': 1.4645880469713255, 's1_z': -0.017060248827757432, 's2_z': 0.036138885393937656, 'cos_iota': -0.27636741677312493, 'd_L': 317.0337958570009, 't_c': -0.056653896248496864, 'phase_c': 2.0386513430054656, 'psi': 2.65211171637962, 'ra': 1.7554049036702664, 'sin_dec': 0.4746609143054501}
12:53 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
12:53 ninjax INFO    : Injected lambda_1: 192.30053567138086
12:53 ninjax INFO    : Injected lambda_2: 1786.7683138814136
12:53 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.131202097875822 is 256.0
12:53 ninjax INFO    : After transforms, the injection parameters are:
12:53 ninjax INFO    : {'mass_1_source': 1.4645880469713255, 'mass_2_source': 1.0107695536112442, 's1_z': -0.017060248827757432, 's2_z': 0.036138885393937656, 'cos_iota': -0.27636741677312493, 'd_L': 317.0337958570009, 't_c': -0.056653896248496864, 'phase_c': 2.0386513430054656, 'psi': 2.65211171637962, 'ra': 1.7554049036702664, 'sin_dec': 0.4746609143054501, 'q': 0.6901391525770343, 'M_c': 1.131202097875822, 'eta': 0.24159711359855532, 'iota': Array(1.85080857, dtype=float64, weak_type=True), 'dec': Array(0.49457874, dtype=float64, weak_type=True), 'lambda_1': 192.30053567138086, 'lambda_2': 1786.7683138814136}
12:53 ninjax INFO    : The trial injection parameters are {'M_c': 1.131202097875822, 'eta': 0.24159711359855532, 's1_z': -0.017060248827757432, 's2_z': 0.036138885393937656, 'lambda_1': 192.30053567138086, 'lambda_2': 1786.7683138814136, 'd_L': 317.0337958570009, 'phase_c': 2.0386513430054656, 'iota': 1.8508085719050755, 't_c': -0.056653896248496864, 'psi': 2.65211171637962, 'ra': 1.7554049036702664, 'dec': 0.4945787408995954}
12:53 ninjax INFO    : Injecting signals . . .
12:53 ninjax INFO    : self.ifos
12:53 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
12:53 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
12:53 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
12:53 ninjax INFO    : [-7.25809149e-23-5.74277334e-24j -5.79689056e-23+5.84098100e-24j
 -5.18888852e-23+8.07865333e-24j ...
 -6.74458740e-23+3.92808379e-24j -3.47516886e-24+3.03056181e-24j
  2.16503725e-23+1.21447147e-23j]
12:53 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
12:53 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
12:53 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
12:53 ninjax INFO    : [-1.39143088e-23+7.05559024e-23j -1.48233732e-23+3.75967005e-23j
  3.35165061e-23-2.66806830e-23j ...
 -2.59782318e-23-1.22765513e-23j -1.44594967e-23-1.92736342e-23j
  2.91199748e-23-6.76355656e-24j]
12:53 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
12:53 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
12:53 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
12:53 ninjax INFO    : [ 9.51585942e-23+4.22836927e-23j  9.74230663e-23+3.50696783e-25j
  8.40714276e-23-8.40964779e-23j ...
  4.34713950e-23-1.00501511e-22j -3.64400961e-23+3.39065951e-23j
 -7.28832944e-24-7.84603800e-23j]
12:53 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
12:53 ninjax INFO    : SNR for ifo H1 is 3.5469910697629192
12:53 ninjax INFO    : SNR for ifo L1 is 5.857562759758212
12:53 ninjax INFO    : SNR for ifo V1 is 4.927906044578876
12:53 ninjax INFO    : The network SNR is 8.436613367796415
12:53 ninjax INFO    : The network SNR does not pass the threshold, trying again
12:53 ninjax INFO    : Generating new injection
12:53 ninjax INFO    : Sanity check: generated parameters:
12:53 ninjax INFO    : {'mass_1_source': 1.5388112121661894, 'mass_2_source': 1.135227952226311, 's1_z': 0.04827026736440558, 's2_z': -0.012793873396696513, 'cos_iota': 0.20003460767746173, 'd_L': 400.2611129058931, 't_c': 0.05892170651411838, 'phase_c': 5.646883051069482, 'psi': 2.9672951393554596, 'ra': 1.129651155301752, 'sin_dec': 0.819873979108038}
12:53 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
12:53 ninjax INFO    : Injected lambda_1: 138.44430177630866
12:53 ninjax INFO    : Injected lambda_2: 918.1719428146431
12:53 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.2517853958721479 is 256.0
12:53 ninjax INFO    : After transforms, the injection parameters are:
12:53 ninjax INFO    : {'mass_1_source': 1.5388112121661894, 'mass_2_source': 1.135227952226311, 's1_z': 0.04827026736440558, 's2_z': -0.012793873396696513, 'cos_iota': 0.20003460767746173, 'd_L': 400.2611129058931, 't_c': 0.05892170651411838, 'phase_c': 5.646883051069482, 'psi': 2.9672951393554596, 'ra': 1.129651155301752, 'sin_dec': 0.819873979108038, 'q': 0.7377304917269526, 'M_c': 1.2517853958721479, 'eta': 0.24430530106029083, 'iota': Array(1.36940308, dtype=float64, weak_type=True), 'dec': Array(0.96119088, dtype=float64, weak_type=True), 'lambda_1': 138.44430177630866, 'lambda_2': 918.1719428146431}
12:53 ninjax INFO    : The trial injection parameters are {'M_c': 1.2517853958721479, 'eta': 0.24430530106029083, 's1_z': 0.04827026736440558, 's2_z': -0.012793873396696513, 'lambda_1': 138.44430177630866, 'lambda_2': 918.1719428146431, 'd_L': 400.2611129058931, 'phase_c': 5.646883051069482, 'iota': 1.3694030845643237, 't_c': 0.05892170651411838, 'psi': 2.9672951393554596, 'ra': 1.129651155301752, 'dec': 0.9611908771603197}
12:53 ninjax INFO    : Injecting signals . . .
12:53 ninjax INFO    : self.ifos
12:53 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
12:53 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
12:53 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
12:53 ninjax INFO    : [-7.54906106e-23-5.14908910e-24j -5.45458190e-23+7.98791669e-24j
 -5.26039892e-23+3.33573287e-24j ...
 -6.74458740e-23+3.92808379e-24j -3.47516886e-24+3.03056181e-24j
  2.16503725e-23+1.21447147e-23j]
12:53 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
12:53 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
12:53 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
12:53 ninjax INFO    : [-1.04616548e-23+6.87085408e-23j -1.94297898e-23+3.52002019e-23j
  3.41265092e-23-2.08509324e-23j ...
 -2.59782318e-23-1.22765513e-23j -1.44594967e-23-1.92736342e-23j
  2.91199748e-23-6.76355656e-24j]
12:53 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
12:53 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
12:53 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
12:53 ninjax INFO    : [ 9.75918434e-23+4.24259766e-23j  9.75412289e-23-1.65469178e-24j
  8.19787084e-23-8.44157929e-23j ...
  4.34713950e-23-1.00501511e-22j -3.64400961e-23+3.39065951e-23j
 -7.28832944e-24-7.84603800e-23j]
12:53 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
12:53 ninjax INFO    : SNR for ifo H1 is 7.4714865287587315
12:53 ninjax INFO    : SNR for ifo L1 is 7.029770385956032
12:53 ninjax INFO    : SNR for ifo V1 is 1.5474984671246004
12:53 ninjax INFO    : The network SNR is 10.374754654180531
12:53 ninjax INFO    : The network SNR does not pass the threshold, trying again
12:53 ninjax INFO    : Generating new injection
12:53 ninjax INFO    : Sanity check: generated parameters:
12:53 ninjax INFO    : {'mass_1_source': 1.5662744950640881, 'mass_2_source': 1.7751869113158025, 's1_z': 0.020233338010116578, 's2_z': 0.047875813870209144, 'cos_iota': 0.8990012579510589, 'd_L': 444.9380234131852, 't_c': -0.08777514819900914, 'phase_c': 6.0439957985871, 'psi': 1.295308685031859, 'ra': 4.2986232638068165, 'sin_dec': 0.543457267357573}
12:53 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
12:53 ninjax INFO    : Injected lambda_1: 48.73607149341181
12:53 ninjax INFO    : Injected lambda_2: 122.71675392732512
12:53 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.596924417661595 is 128.0
12:53 ninjax INFO    : After transforms, the injection parameters are:
12:53 ninjax INFO    : {'mass_1_source': 1.7751869113158025, 'mass_2_source': 1.5662744950640881, 's1_z': 0.020233338010116578, 's2_z': 0.047875813870209144, 'cos_iota': 0.8990012579510589, 'd_L': 444.9380234131852, 't_c': -0.08777514819900914, 'phase_c': 6.0439957985871, 'psi': 1.295308685031859, 'ra': 4.2986232638068165, 'sin_dec': 0.543457267357573, 'q': 0.8823152565400201, 'M_c': 1.596924417661595, 'eta': 0.24902277264823353, 'iota': Array(0.45331269, dtype=float64, weak_type=True), 'dec': Array(0.5745502, dtype=float64, weak_type=True), 'lambda_1': 48.73607149341181, 'lambda_2': 122.71675392732512}
12:53 ninjax INFO    : The trial injection parameters are {'M_c': 1.596924417661595, 'eta': 0.24902277264823353, 's1_z': 0.020233338010116578, 's2_z': 0.047875813870209144, 'lambda_1': 48.73607149341181, 'lambda_2': 122.71675392732512, 'd_L': 444.9380234131852, 'phase_c': 6.0439957985871, 'iota': 0.4533126908022418, 't_c': -0.08777514819900914, 'psi': 1.295308685031859, 'ra': 4.2986232638068165, 'dec': 0.5745502004445462}
12:53 ninjax INFO    : Injecting signals . . .
12:53 ninjax INFO    : self.ifos
12:53 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
12:53 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
12:53 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
12:53 ninjax INFO    : [ 2.47268968e-23-6.71093444e-23j  1.79426403e-23-5.08809902e-23j
 -1.26307763e-23+6.41629889e-24j ...
 -3.41957181e-23+2.62223168e-23j  1.01627007e-23-2.18303470e-23j
 -1.98026211e-23+1.93619620e-23j]
12:53 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
12:53 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
12:53 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
12:53 ninjax INFO    : [ 3.11598847e-25+5.08007274e-23j  2.52281225e-23-9.03584244e-24j
 -2.88393355e-23-3.99190971e-23j ...
 -8.09900696e-24-5.91408825e-24j  1.80221737e-23+2.74557757e-24j
  3.04533641e-23+1.86779244e-23j]
12:53 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
12:53 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
12:53 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
12:53 ninjax INFO    : [ 4.94700512e-23+2.77277295e-23j -4.36317605e-23+2.40480070e-23j
  4.34571059e-23-5.41099462e-23j ...
 -5.43012529e-23-1.07136059e-22j -2.04043873e-23-5.76246770e-23j
  3.75774148e-23+4.45900990e-23j]
12:53 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
12:53 ninjax INFO    : SNR for ifo H1 is 7.077544758857656
12:53 ninjax INFO    : SNR for ifo L1 is 8.429187833942759
12:53 ninjax INFO    : SNR for ifo V1 is 5.921927492935867
12:53 ninjax INFO    : The network SNR is 12.498482811330014
12:53 ninjax INFO    : Network SNR passes threshold
12:53 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
12:53 ninjax INFO    :    mass_1_source: 1.7751869113158025
12:53 ninjax INFO    :    mass_2_source: 1.5662744950640881
12:53 ninjax INFO    :    s1_z: 0.020233338010116578
12:53 ninjax INFO    :    s2_z: 0.047875813870209144
12:53 ninjax INFO    :    cos_iota: 0.8990012579510589
12:53 ninjax INFO    :    d_L: 444.9380234131852
12:53 ninjax INFO    :    t_c: -0.08777514819900914
12:53 ninjax INFO    :    phase_c: 6.0439957985871
12:53 ninjax INFO    :    psi: 1.295308685031859
12:53 ninjax INFO    :    ra: 4.2986232638068165
12:53 ninjax INFO    :    sin_dec: 0.543457267357573
12:53 ninjax INFO    :    q: 0.8823152565400201
12:53 ninjax INFO    :    M_c: 1.596924417661595
12:53 ninjax INFO    :    eta: 0.24902277264823353
12:53 ninjax INFO    :    iota: 0.4533126908022418
12:53 ninjax INFO    :    dec: 0.5745502004445462
12:53 ninjax INFO    :    lambda_1: 48.73607149341181
12:53 ninjax INFO    :    lambda_2: 122.71675392732512
12:53 ninjax INFO    :    H1_SNR: 7.077544758857656
12:53 ninjax INFO    :    L1_SNR: 8.429187833942759
12:53 ninjax INFO    :    V1_SNR: 5.921927492935867
12:53 ninjax INFO    :    network_SNR: 12.498482811330014
12:53 ninjax INFO    :    epoch: 126.0
12:53 ninjax INFO    :    gmst: 2.7288901910520846
12:53 ninjax INFO    :    duration: 128.0
12:53 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
12:53 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
12:53 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
12:55 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 146.87709879875183 seconds = 2.4479516466458637 minutes
12:55 ninjax INFO    : The priors are not modified after their initialization
12:55 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
12:55 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
12:55 ninjax INFO    : sample: {'M_c': Array([1.26969786, 1.38850967, 1.81977947], dtype=float64), 'q': Array([0.95306357, 0.29045284, 0.74529965], dtype=float64), 's1_z': Array([ 0.03567458,  0.02583164, -0.03405012], dtype=float64), 's2_z': Array([-0.00146856,  0.01386764, -0.02903016], dtype=float64), 'lambda_1': Array([ 823.62854351, 4265.33162795,  990.58925717], dtype=float64), 'lambda_2': Array([1466.47603276, 1219.38174488, 3002.52406665], dtype=float64), 'cos_iota': Array([-0.04027994, -0.81311592,  0.71665394], dtype=float64), 'd_L': Array([783.75389695, 867.69574191, 774.6145324 ], dtype=float64), 't_c': Array([-0.0354847 , -0.03691247, -0.0267251 ], dtype=float64), 'phase_c': Array([2.79887981, 4.71813892, 6.22247617], dtype=float64), 'psi': Array([2.68189966, 1.19307914, 2.20371048], dtype=float64), 'ra': Array([4.18773251, 4.28363145, 0.08307468], dtype=float64), 'sin_dec': Array([0.18935439, 0.45255492, 0.03131432], dtype=float64)}
12:55 ninjax INFO    : log_prob: [ -0.91463261  -7.637888   -46.54334462]
12:55 ninjax INFO    : Checking log_prob at injection parameters: {'mass_1_source': 1.7751869113158025, 'mass_2_source': 1.5662744950640881, 's1_z': 0.020233338010116578, 's2_z': 0.047875813870209144, 'cos_iota': 0.8990012579510589, 'd_L': 444.9380234131852, 't_c': -0.08777514819900914, 'phase_c': 6.0439957985871, 'psi': 1.295308685031859, 'ra': 4.2986232638068165, 'sin_dec': 0.543457267357573, 'q': 0.8823152565400201, 'M_c': 1.596924417661595, 'eta': 0.24902277264823353, 'iota': Array(0.45331269, dtype=float64, weak_type=True), 'dec': Array(0.5745502, dtype=float64, weak_type=True), 'lambda_1': 48.73607149341181, 'lambda_2': 122.71675392732512, 'H1_SNR': 7.077544758857656, 'L1_SNR': 8.429187833942759, 'V1_SNR': 5.921927492935867, 'network_SNR': 12.498482811330014, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
12:56 ninjax INFO    : log_prob at the injection parameters is: 46.01016515015337
12:56 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
12:56 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
12:56 ninjax INFO    : Ninjax setup complete.
12:56 ninjax INFO    : Saving output to ./outdir/injection_12/
12:56 ninjax INFO    : Using polynomial learning rate scheduler
12:56 ninjax INFO    : The hyperparameters passed to flowMC and jim are
12:56 ninjax INFO    :    n_loop_training: 200
12:56 ninjax INFO    :    n_loop_production: 10
12:56 ninjax INFO    :    n_local_steps: 100
12:56 ninjax INFO    :    n_global_steps: 1000
12:56 ninjax INFO    :    n_epochs: 25
12:56 ninjax INFO    :    n_chains: 1000
12:56 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x1470620d16c0>
12:56 ninjax INFO    :    max_samples: 50000
12:56 ninjax INFO    :    momentum: 0.9
12:56 ninjax INFO    :    batch_size: 30000
12:56 ninjax INFO    :    use_global: True
12:56 ninjax INFO    :    keep_quantile: 0.0
12:56 ninjax INFO    :    train_thinning: 10
12:56 ninjax INFO    :    output_thinning: 50
12:56 ninjax INFO    :    n_sample_max: 10000
12:56 ninjax INFO    :    num_layers: 10
12:56 ninjax INFO    :    hidden_size: [128, 128]
12:56 ninjax INFO    :    num_bins: 8
12:56 ninjax INFO    :    save_training_chains: False
12:56 ninjax INFO    :    eps_mass_matrix: 1e-05
12:56 ninjax INFO    :    use_scheduler: True
12:56 ninjax INFO    :    use_temperature: False
12:56 ninjax INFO    :    which_temperature_schedule: exponential
12:56 ninjax INFO    :    starting_temperature: 2.0
12:56 ninjax INFO    :    stop_tempering_iteration: 75
12:56 ninjax INFO    :    stopping_criterion_global_acc: 0.1
12:56 ninjax INFO    :    stopping_criterion_loss: -inf
12:56 ninjax INFO    :    nf_model_kwargs: {}
12:56 ninjax INFO    :    local sampler arg not shown (pretty print)
12:56 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-7.21898597e-23 -5.64909151e-23 -5.28689937e-23  5.16331481e-23
 -4.73131155e-23  5.39113515e-23 -8.14160479e-23  1.28569783e-22
 -1.15262969e-23  5.51123492e-23]
[-4.15533503e-24  5.14297973e-24  6.77104987e-24  4.57298361e-23
  2.38941331e-23 -8.59873037e-23  1.76811138e-22 -2.83149657e-23
 -2.47354606e-23  3.11645712e-24]
Checking the noise that was generated in inject_signal ifo:
[-1.35959783e-23 -1.75137200e-23  3.42706849e-23 -7.95103416e-23
  4.01055071e-23  7.78605964e-24 -4.83040466e-24 -3.47891670e-25
  4.32086186e-24 -1.00522800e-23]
[ 6.78748388e-23  3.78160965e-23 -2.40895478e-23  1.26014399e-22
 -1.19086398e-23 -7.76322902e-23  8.03471190e-23 -8.55869051e-23
  7.65572442e-23  3.56303996e-23]
Checking the noise that was generated in inject_signal ifo:
[ 9.78611251e-23  9.78746994e-23  8.11912846e-23  1.09150784e-22
 -2.47275299e-23  9.75057048e-23 -2.34531253e-23  9.52428321e-23
 -9.88309299e-23 -3.33067751e-23]
[ 4.32915591e-23 -2.49740586e-24 -8.39675101e-23 -1.67588430e-23
  9.06977686e-24  4.52299644e-24 -2.39816425e-23  1.53533439e-23
 -8.86180607e-23  3.58765880e-23]
Checking the noise that was generated in inject_signal ifo:
[-7.21898597e-23 -5.64909151e-23 -5.28689937e-23  5.16331481e-23
 -4.73131155e-23  5.39113515e-23 -8.14160479e-23  1.28569783e-22
 -1.15262969e-23  5.51123492e-23]
[-4.15533503e-24  5.14297973e-24  6.77104987e-24  4.57298361e-23
  2.38941331e-23 -8.59873037e-23  1.76811138e-22 -2.83149657e-23
 -2.47354606e-23  3.11645712e-24]
Checking the noise that was generated in inject_signal ifo:
[-1.35959783e-23 -1.75137200e-23  3.42706849e-23 -7.95103416e-23
  4.01055071e-23  7.78605964e-24 -4.83040466e-24 -3.47891670e-25
  4.32086186e-24 -1.00522800e-23]
[ 6.78748388e-23  3.78160965e-23 -2.40895478e-23  1.26014399e-22
 -1.19086398e-23 -7.76322902e-23  8.03471190e-23 -8.55869051e-23
  7.65572442e-23  3.56303996e-23]
Checking the noise that was generated in inject_signal ifo:
[ 9.78611251e-23  9.78746994e-23  8.11912846e-23  1.09150784e-22
 -2.47275299e-23  9.75057048e-23 -2.34531253e-23  9.52428321e-23
 -9.88309299e-23 -3.33067751e-23]
[ 4.32915591e-23 -2.49740586e-24 -8.39675101e-23 -1.67588430e-23
  9.06977686e-24  4.52299644e-24 -2.39816425e-23  1.53533439e-23
 -8.86180607e-23  3.58765880e-23]
Checking the noise that was generated in inject_signal ifo:
[ 2.76843582e-23  1.78750505e-23 -1.56478638e-23 -9.87743058e-25
  3.65275404e-23 -2.20545249e-23 -3.66022256e-23  4.72449717e-23
  5.91626279e-24  8.78801160e-23]
[-6.85202141e-23 -5.41555482e-23  5.14560542e-24 -1.12192550e-23
 -2.89208017e-23 -3.02241992e-23  1.92500299e-23  6.87246269e-23
  1.24304512e-23 -4.33912352e-23]
Checking the noise that was generated in inject_signal ifo:
[-1.64189843e-24  2.75022206e-23 -2.50208222e-23  4.10497728e-23
  4.07883983e-24 -1.08289165e-22  2.36436879e-23  4.17581654e-23
 -8.57576193e-24  1.16253681e-22]
[ 5.41791380e-23 -5.86656165e-24 -4.07070632e-23  3.39749479e-23
 -4.38867873e-23 -1.10953666e-23 -1.77915028e-23  5.49796818e-23
 -1.00280340e-23  1.10613327e-25]
Checking the noise that was generated in inject_signal ifo:
[ 5.23566992e-23 -4.42100906e-23  4.00916973e-23 -1.35424236e-23
  1.48902731e-23  2.54282761e-23 -2.47643589e-23 -2.82514586e-23
 -4.43565348e-23  7.99397456e-23]
[ 2.57857757e-23  2.06189588e-23 -5.49793092e-23 -2.33157131e-23
 -3.23019402e-25 -5.55391393e-24  2.85966615e-23  5.83508010e-23
 -4.54668937e-23 -7.43046644e-23]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.10891199111938477 seconds
Using provided reference parameters:
ref_params for relative binning:
{'mass_1_source': 1.7751869113158025, 'mass_2_source': 1.5662744950640881, 's1_z': 0.020233338010116578, 's2_z': 0.047875813870209144, 'cos_iota': 0.8990012579510589, 'd_L': 444.9380234131852, 't_c': -0.08777514819900914, 'phase_c': 6.0439957985871, 'psi': 1.295308685031859, 'ra': 4.2986232638068165, 'sin_dec': 0.543457267357573, 'q': 0.8823152565400201, 'M_c': 1.596924417661595, 'eta': 0.24902277264823353, 'iota': Array(0.45331269, dtype=float64, weak_type=True), 'dec': Array(0.5745502, dtype=float64, weak_type=True), 'lambda_1': 48.73607149341181, 'lambda_2': 122.71675392732512, 'H1_SNR': 7.077544758857656, 'L1_SNR': 8.429187833942759, 'V1_SNR': 5.921927492935867, 'network_SNR': 12.498482811330014, 'epoch': 126.0, 'gmst': 2.7288901910520846, 'duration': 128.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5120851993560791 seconds
Time for h_sky_low and h_sky_center: 5.429165840148926 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.6771161556243896
Going to compute coefficients . . .
Time for computing coefficients: 125.50492119789124 seconds
Time for computing coefficients: 6.8725175857543945 seconds
Time for computing coefficients: 7.224313974380493 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:01<6:42:30, 121.36s/it]Tuning global sampler:   1%|          | 2/200 [02:05<2:53:49, 52.68s/it] Tuning global sampler:   2%|▏         | 3/200 [02:10<1:40:52, 30.73s/it]Tuning global sampler:   2%|▏         | 4/200 [02:16<1:07:48, 20.76s/it]Tuning global sampler:   2%|▎         | 5/200 [02:20<48:33, 14.94s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:25<36:57, 11.43s/it]Tuning global sampler:   4%|▎         | 7/200 [02:29<29:31,  9.18s/it]Tuning global sampler:   4%|▍         | 8/200 [02:34<24:42,  7.72s/it]Tuning global sampler:   4%|▍         | 9/200 [02:38<21:24,  6.73s/it]Tuning global sampler:   5%|▌         | 10/200 [02:43<19:02,  6.01s/it]Tuning global sampler:   6%|▌         | 11/200 [02:47<17:34,  5.58s/it]Tuning global sampler:   6%|▌         | 12/200 [02:52<16:32,  5.28s/it]Tuning global sampler:   6%|▋         | 13/200 [02:57<15:47,  5.06s/it]Tuning global sampler:   7%|▋         | 14/200 [03:01<15:20,  4.95s/it]Tuning global sampler:   8%|▊         | 15/200 [03:06<14:58,  4.86s/it]Tuning global sampler:   8%|▊         | 16/200 [03:11<14:41,  4.79s/it]Tuning global sampler:   8%|▊         | 17/200 [03:15<14:28,  4.75s/it]Tuning global sampler:   9%|▉         | 18/200 [03:20<14:18,  4.72s/it]Tuning global sampler:  10%|▉         | 19/200 [03:25<14:09,  4.69s/it]Tuning global sampler:  10%|█         | 20/200 [03:29<14:02,  4.68s/it]Tuning global sampler:  10%|█         | 21/200 [03:34<13:55,  4.67s/it]Tuning global sampler:  11%|█         | 22/200 [03:38<13:47,  4.65s/it]Tuning global sampler:  12%|█▏        | 23/200 [03:44<14:29,  4.91s/it]Tuning global sampler:  12%|█▏        | 24/200 [03:49<14:10,  4.83s/it]Tuning global sampler:  12%|█▎        | 25/200 [03:53<13:42,  4.70s/it]Tuning global sampler:  13%|█▎        | 26/200 [03:57<13:21,  4.61s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:02<13:05,  4.54s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:06<12:53,  4.50s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:11<12:43,  4.46s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:15<12:36,  4.45s/it]Tuning global sampler:  16%|█▌        | 31/200 [04:19<12:28,  4.43s/it]Tuning global sampler:  16%|█▌        | 32/200 [04:24<12:21,  4.42s/it]Tuning global sampler:  16%|█▋        | 33/200 [04:28<12:14,  4.40s/it]Tuning global sampler:  17%|█▋        | 34/200 [04:32<12:08,  4.39s/it]Tuning global sampler:  18%|█▊        | 35/200 [04:37<12:04,  4.39s/it]Tuning global sampler:  18%|█▊        | 36/200 [04:41<12:00,  4.39s/it]Tuning global sampler:  18%|█▊        | 37/200 [04:46<11:55,  4.39s/it]Tuning global sampler:  19%|█▉        | 38/200 [04:50<11:51,  4.39s/it]Tuning global sampler:  20%|█▉        | 39/200 [04:54<11:47,  4.39s/it]Tuning global sampler:  20%|██        | 40/200 [04:59<11:42,  4.39s/it]Tuning global sampler:  20%|██        | 41/200 [05:03<11:38,  4.39s/it]Tuning global sampler:  21%|██        | 42/200 [05:08<11:34,  4.39s/it]Tuning global sampler:  22%|██▏       | 43/200 [05:13<12:14,  4.68s/it]Tuning global sampler:  22%|██▏       | 44/200 [05:17<11:55,  4.59s/it]Tuning global sampler:  22%|██▎       | 45/200 [05:22<11:40,  4.52s/it]Tuning global sampler:  23%|██▎       | 46/200 [05:26<11:29,  4.48s/it]Tuning global sampler:  24%|██▎       | 47/200 [05:30<11:21,  4.46s/it]Tuning global sampler:  24%|██▍       | 48/200 [05:35<11:14,  4.44s/it]Tuning global sampler:  24%|██▍       | 49/200 [05:39<11:08,  4.43s/it]Tuning global sampler:  25%|██▌       | 50/200 [05:44<11:02,  4.42s/it]Tuning global sampler:  26%|██▌       | 51/200 [05:48<10:57,  4.41s/it]Tuning global sampler:  26%|██▌       | 52/200 [05:52<10:52,  4.41s/it]Tuning global sampler:  26%|██▋       | 53/200 [05:57<10:47,  4.40s/it]Tuning global sampler:  27%|██▋       | 54/200 [06:01<10:44,  4.41s/it]Tuning global sampler:  28%|██▊       | 55/200 [06:06<10:37,  4.40s/it]Tuning global sampler:  28%|██▊       | 56/200 [06:10<10:32,  4.39s/it]Tuning global sampler:  28%|██▊       | 57/200 [06:14<10:29,  4.40s/it]Tuning global sampler:  29%|██▉       | 58/200 [06:19<10:25,  4.40s/it]Tuning global sampler:  30%|██▉       | 59/200 [06:23<10:21,  4.41s/it]Tuning global sampler:  30%|███       | 60/200 [06:28<10:17,  4.41s/it]Tuning global sampler:  30%|███       | 61/200 [06:32<10:12,  4.41s/it]Tuning global sampler:  31%|███       | 62/200 [06:37<10:09,  4.42s/it]Tuning global sampler:  32%|███▏      | 63/200 [06:42<10:44,  4.71s/it]Tuning global sampler:  32%|███▏      | 64/200 [06:46<10:27,  4.61s/it]Tuning global sampler:  32%|███▎      | 65/200 [06:51<10:14,  4.55s/it]Tuning global sampler:  33%|███▎      | 66/200 [06:55<10:01,  4.49s/it]Tuning global sampler:  34%|███▎      | 67/200 [06:59<09:52,  4.46s/it]Tuning global sampler:  34%|███▍      | 68/200 [07:04<09:46,  4.44s/it]Tuning global sampler:  34%|███▍      | 69/200 [07:08<09:40,  4.43s/it]Tuning global sampler:  35%|███▌      | 70/200 [07:13<09:36,  4.43s/it]Tuning global sampler:  36%|███▌      | 71/200 [07:17<09:31,  4.43s/it]Tuning global sampler:  36%|███▌      | 72/200 [07:22<09:26,  4.43s/it]Tuning global sampler:  36%|███▋      | 73/200 [07:26<09:21,  4.42s/it]Tuning global sampler:  37%|███▋      | 74/200 [07:30<09:16,  4.42s/it]Tuning global sampler:  38%|███▊      | 75/200 [07:35<09:12,  4.42s/it]Tuning global sampler:  38%|███▊      | 76/200 [07:39<09:07,  4.42s/it]Tuning global sampler:  38%|███▊      | 77/200 [07:44<09:03,  4.42s/it]Tuning global sampler:  39%|███▉      | 78/200 [07:48<08:56,  4.40s/it]Tuning global sampler:  40%|███▉      | 79/200 [07:52<08:52,  4.40s/it]Tuning global sampler:  40%|████      | 80/200 [07:57<08:48,  4.40s/it]Tuning global sampler:  40%|████      | 81/200 [08:01<08:45,  4.42s/it]Tuning global sampler:  41%|████      | 82/200 [08:06<08:40,  4.41s/it]Tuning global sampler:  42%|████▏     | 83/200 [08:10<08:35,  4.41s/it]Tuning global sampler:  42%|████▏     | 84/200 [08:15<09:06,  4.71s/it]Tuning global sampler:  42%|████▎     | 85/200 [08:20<08:50,  4.62s/it]Tuning global sampler:  43%|████▎     | 86/200 [08:24<08:39,  4.56s/it]Tuning global sampler:  44%|████▎     | 87/200 [08:29<08:29,  4.51s/it]Tuning global sampler:  44%|████▍     | 88/200 [08:33<08:20,  4.47s/it]Tuning global sampler:  44%|████▍     | 89/200 [08:37<08:13,  4.44s/it]Tuning global sampler:  45%|████▌     | 90/200 [08:42<08:07,  4.43s/it]Tuning global sampler:  46%|████▌     | 91/200 [08:46<08:02,  4.42s/it]Tuning global sampler:  46%|████▌     | 92/200 [08:51<07:57,  4.42s/it]Tuning global sampler:  46%|████▋     | 93/200 [08:55<07:54,  4.43s/it]Tuning global sampler:  47%|████▋     | 94/200 [09:00<07:49,  4.43s/it]Tuning global sampler:  48%|████▊     | 95/200 [09:04<07:44,  4.43s/it]Tuning global sampler:  48%|████▊     | 96/200 [09:08<07:41,  4.44s/it]Tuning global sampler:  48%|████▊     | 97/200 [09:13<07:37,  4.44s/it]Tuning global sampler:  49%|████▉     | 98/200 [09:17<07:32,  4.44s/it]Tuning global sampler:  50%|████▉     | 99/200 [09:22<07:26,  4.42s/it]Tuning global sampler:  50%|█████     | 100/200 [09:26<07:20,  4.40s/it]Tuning global sampler:  50%|█████     | 101/200 [09:30<07:16,  4.41s/it]Tuning global sampler:  51%|█████     | 102/200 [09:35<07:12,  4.41s/it]Tuning global sampler:  52%|█████▏    | 103/200 [09:39<07:07,  4.41s/it]Tuning global sampler:  52%|█████▏    | 104/200 [09:45<07:34,  4.73s/it]Tuning global sampler:  52%|█████▎    | 105/200 [09:49<07:19,  4.63s/it]Tuning global sampler:  53%|█████▎    | 106/200 [09:54<07:09,  4.56s/it]Tuning global sampler:  54%|█████▎    | 107/200 [09:58<06:59,  4.52s/it]Tuning global sampler:  54%|█████▍    | 108/200 [10:02<06:52,  4.48s/it]Tuning global sampler:  55%|█████▍    | 109/200 [10:07<06:45,  4.46s/it]Tuning global sampler:  55%|█████▌    | 110/200 [10:11<06:39,  4.43s/it]Tuning global sampler:  56%|█████▌    | 111/200 [10:16<06:32,  4.41s/it]Tuning global sampler:  56%|█████▌    | 112/200 [10:20<06:28,  4.41s/it]Tuning global sampler:  56%|█████▋    | 113/200 [10:24<06:24,  4.42s/it]Tuning global sampler:  57%|█████▋    | 114/200 [10:29<06:19,  4.42s/it]Tuning global sampler:  57%|█████▊    | 115/200 [10:33<06:15,  4.42s/it]Tuning global sampler:  58%|█████▊    | 116/200 [10:38<06:11,  4.42s/it]Tuning global sampler:  58%|█████▊    | 117/200 [10:42<06:06,  4.42s/it]Tuning global sampler:  59%|█████▉    | 118/200 [10:47<06:05,  4.46s/it]Tuning global sampler:  60%|█████▉    | 119/200 [10:51<06:00,  4.44s/it]Tuning global sampler:  60%|██████    | 120/200 [10:55<05:54,  4.44s/it]Tuning global sampler:  60%|██████    | 121/200 [11:00<05:48,  4.41s/it]Tuning global sampler:  61%|██████    | 122/200 [11:04<05:43,  4.40s/it]Tuning global sampler:  62%|██████▏   | 123/200 [11:09<05:39,  4.41s/it]Tuning global sampler:  62%|██████▏   | 124/200 [11:13<05:35,  4.41s/it]Tuning global sampler:  62%|██████▎   | 125/200 [11:17<05:31,  4.42s/it]Tuning global sampler:  63%|██████▎   | 126/200 [11:23<05:51,  4.75s/it]Tuning global sampler:  64%|██████▎   | 127/200 [11:27<05:39,  4.65s/it]Tuning global sampler:  64%|██████▍   | 128/200 [11:32<05:29,  4.58s/it]Tuning global sampler:  64%|██████▍   | 129/200 [11:36<05:21,  4.53s/it]Tuning global sampler:  65%|██████▌   | 130/200 [11:41<05:14,  4.49s/it]Tuning global sampler:  66%|██████▌   | 131/200 [11:45<05:07,  4.46s/it]Tuning global sampler:  66%|██████▌   | 132/200 [11:49<05:01,  4.43s/it]Tuning global sampler:  66%|██████▋   | 133/200 [11:54<04:55,  4.41s/it]Tuning global sampler:  67%|██████▋   | 134/200 [11:58<04:51,  4.42s/it]Tuning global sampler:  67%|██████▋   | 134/200 [12:03<05:56,  5.40s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.22s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.22s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.22s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.22s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.22s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.22s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.22s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.22s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]
13:08 ninjax INFO    : Saving samples to ./outdir/injection_12/results_training.npz
13:08 ninjax INFO    : Saving the NF
13:08 ninjax INFO    : Time taken: 762.9946374893188 seconds (12.716577291488647 minutes)
13:08 ninjax INFO    : Creating the final corner plot
13:08 ninjax INFO    : Dumping the final production chains
13:08 ninjax INFO    : Chains shape is: (13, 220000)
13:08 ninjax INFO    : Key: M_c: ESS = 15773, Rhat = 1.0381938652001945
13:08 ninjax INFO    : Key: q: ESS = 25938, Rhat = 1.0272436149000588
13:08 ninjax INFO    : Key: s1_z: ESS = 19657, Rhat = 1.0311526144936012
13:08 ninjax INFO    : Key: s2_z: ESS = 19154, Rhat = 1.0318310027210795
13:08 ninjax INFO    : Key: lambda_1: ESS = 18537, Rhat = 1.0329264750931137
13:08 ninjax INFO    : Key: lambda_2: ESS = 17986, Rhat = 1.0335702863534995
13:08 ninjax INFO    : Key: cos_iota: ESS = 13592, Rhat = 1.0460269833629265
13:08 ninjax INFO    : Key: d_L: ESS = 18843, Rhat = 1.0329432467013417
13:08 ninjax INFO    : Key: t_c: ESS = 13254, Rhat = 1.0449397007606767
13:08 ninjax INFO    : Key: phase_c: ESS = 20161, Rhat = 1.0311832067501305
13:08 ninjax INFO    : Key: psi: ESS = 29870, Rhat = 1.0223439252034021
13:08 ninjax INFO    : Key: ra: ESS = 14152, Rhat = 1.0418571310378997
13:08 ninjax INFO    : Key: sin_dec: ESS = 13812, Rhat = 1.042949188548711
13:08 ninjax INFO    : Key: eta: ESS = 25938, Rhat = 1.0265214017202962
13:08 ninjax INFO    : Key: iota: ESS = 13592, Rhat = 1.0460269833629265
13:08 ninjax INFO    : Key: dec: ESS = 13812, Rhat = 1.042949188548711
13:08 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.609 +/- 0.343
q: 0.694 +/- 0.249
s1_z: 0.009 +/- 0.028
s2_z: 0.006 +/- 0.028
lambda_1: 2219.779 +/- 1481.635
lambda_2: 2330.585 +/- 1451.467
cos_iota: 0.236 +/- 0.433
d_L: 743.007 +/- 196.332
t_c: -0.043 +/- 0.063
phase_c: 3.242 +/- 1.757
psi: 1.599 +/- 0.900
ra: 3.875 +/- 1.451
sin_dec: 0.116 +/- 0.465
Log probability: -1.322 +/- 23.854
Local acceptance: 0.990 +/- 0.102
Global acceptance: 0.032 +/- 0.177
Max loss: 22.853, Min loss: 7.465
Production summary
==========
M_c: 1.597 +/- 0.000
q: 0.890 +/- 0.074
s1_z: 0.033 +/- 0.014
s2_z: 0.031 +/- 0.015
lambda_1: 675.699 +/- 834.888
lambda_2: 896.445 +/- 970.374
cos_iota: 0.771 +/- 0.184
d_L: 438.154 +/- 95.178
t_c: -0.086 +/- 0.002
phase_c: 3.206 +/- 1.805
psi: 1.615 +/- 0.916
ra: 4.265 +/- 0.141
sin_dec: 0.567 +/- 0.063
Log probability: 40.333 +/- 3.316
Local acceptance: 0.966 +/- 0.182
Global acceptance: 0.098 +/- 0.298
DONE

JOB STATISTICS
==============
Job ID: 10863576
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:13:46
CPU Efficiency: 5.32% of 04:18:56 core-walltime
Job Wall-clock time: 00:16:11
Memory Utilized: 4.52 GB
Memory Efficiency: 45.15% of 10.00 GB
