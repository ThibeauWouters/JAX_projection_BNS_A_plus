Thu Mar 27 21:29:26 CET 2025
NVIDIA H100
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:94: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:149: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class Unconstrained_Uniform(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:263: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class AlignedSpin(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/prior.py:377: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  class PowerLaw(Prior):
/gpfs/home6/twouters2/ninjax_dev/jim/src/jimgw/single_event/detector.py:496: UserWarning: As of jaxtyping version 0.2.24, jaxtyping now prefers the syntax
```
from jaxtyping import jaxtyped
# Use your favourite typechecker: usually one of the two lines below.
from typeguard import typechecked as typechecker
from beartype import beartype as typechecker

@jaxtyped(typechecker=typechecker)
def foo(...):
```
and the old double-decorator syntax
```
@jaxtyped
@typechecker
def foo(...):
```
should no longer be used. (It will continue to work as it did before, but the new approach will produce more readable error messages.)
In particular note that `typechecker` must be passed via keyword argument; the following is not valid:
```
@jaxtyped(typechecker)
def foo(...):
```

  def load_psd(
21:29 ninjax INFO    : Checking and setting outdir
21:29 ninjax INFO    : The outdir is set to ./outdir/injection_28
21:29 ninjax INFO    : Loading the given config
21:29 ninjax WARNING : Unrecognized keys given: {'n_max_examples'}. These will be ignored
21:29 ninjax INFO    : Arguments loaded into the config: {'likelihood': 'HeterodynedTransientLikelihoodFD', 'gw_injection': 'True', 'gw_load_existing_injection': 'False', 'gw_dump_injection_data': 'False', 'gw_SNR_threshold_low': '11.2', 'gw_SNR_threshold_high': '100', 'waveform_approximant': 'IMRPhenomD_NRTidalv2', 'waveform_approximant_1': 'None', 'waveform_approximant_2': 'None', 'gw_overlapping_tight_priors': 'False', 'ifos': 'H1,L1,V1', 'eos_file': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz', 'fmin': '20.0', 'fref': '20.0', 'fmax': '2048.0', 'duration': 'None', 'post_trigger_duration': '2.0', 'trigger_time': '1187008882.4', 'psd_file_H1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_L1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/AplusDesign_PSD.txt', 'psd_file_V1': '/home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/avirgo_O5high_NEW_PSD.txt', 'psd_file_ET1': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET2': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_ET3': '/home/twouters2/psds/ET_D_psd.txt', 'psd_file_CE': '/home/twouters2/psds/CE_psd.txt', 'data_file_H1': 'None', 'data_file_L1': 'None', 'data_file_V1': 'None', 'data_file_ET1': 'None', 'data_file_ET2': 'None', 'data_file_ET3': 'None', 'relative_binning_binsize': '1000', 'relative_binning_ref_params_equal_true_params': 'True', 'relative_binning_ref_params': 'None', 'transforms': 'q_to_eta,cos_iota_to_iota,sin_dec_to_dec', 'gw_kwargs': 'None', 'filters': 'None', 'tmin': '0.05', 'tmax': '15.0', 'em_injection': 'False', 'em_trigger_time': '0.0', 'em_data_path': 'None', 'KN_model_name': 'None', 'KN_class_name': 'None', 'KN_model_dir': 'None', 'GRB_model_name': 'None', 'GRB_class_name': 'None', 'GRB_model_dir': 'None', 'detection_limit': 'None', 'n_loop_training': '200', 'n_loop_production': '10', 'n_local_steps': '100', 'n_global_steps': '1_000', 'n_epochs': '25', 'n_chains': '1_000', 'learning_rate': '0.001', 'max_samples': '50000', 'momentum': '0.9', 'batch_size': '30000', 'use_global': 'True', 'keep_quantile': '0.0', 'train_thinning': '10', 'output_thinning': '50', 'n_sample_max': '10000', 'verbose': 'False', 'save_training_chains': 'False', 'eps_mass_matrix': '1e-5', 'use_scheduler': 'True', 'use_temperature': 'False', 'which_temperature_schedule': 'exponential', 'starting_temperature': '2.0', 'stop_tempering_iteration': '75', 'stopping_criterion_global_acc': '0.10', 'stopping_criterion_loss': '-inf', 'seed': 'None', 'sampling_seed': 'None', 'injection_generation_seed': 'None', 'num_layers': '10', 'hidden_size': '128,128', 'num_bins': '8', 'nf_model_kwargs': 'None', 'run_sampler': 'True', 'keys_to_plot': 'M_c, q, s1_z, s2_z, lambda_1, lambda_2, d_L, t_c, phase_c, iota, psi, ra, dec'}
21:29 ninjax INFO    : Complete config file written to /gpfs/home6/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/GW/HQC18/outdir/injection_28/complete_config.json
21:29 ninjax INFO    : No seed specified. Generating a random seed: 927185
21:29 ninjax INFO    : No sampling_seed specified. Generating a random sampling_seed: 889038
21:29 ninjax INFO    : No injection_generation_seed specified. Generating a random injection_generation_seed: 591106
21:29 ninjax INFO    : Loading the priors
21:29 ninjax INFO    :    Mc_prior = Uniform(1.0, 2.2, naming=["M_c"])
21:29 ninjax INFO    :    q_prior = Uniform(0.125, 1.0, naming=["q"])
21:29 ninjax INFO    :    s1_z_prior = Uniform(-0.05, 0.05, naming=["s1_z"])
21:29 ninjax INFO    :    s2_z_prior = Uniform(-0.05, 0.05, naming=["s2_z"])
21:29 ninjax INFO    :    lambda1_prior = Uniform(0.0, 5000.0, naming=["lambda_1"])
21:29 ninjax INFO    :    lambda2_prior = Uniform(0.0, 5000.0, naming=["lambda_2"])
21:29 ninjax INFO    :    cos_iota_prior = Uniform(-1.0, 1.0, naming=["cos_iota"])
21:29 ninjax INFO    :    dL_prior = PowerLaw(1.0, 460.0, 2.0, naming=["d_L"])
21:29 ninjax INFO    :    t_c_prior = Uniform(-0.1, 0.1, naming=["t_c"])
21:29 ninjax INFO    :    phase_c_prior = Uniform(0.0, 2 * jnp.pi, naming=["phase_c"])
21:29 ninjax INFO    :    psi_prior = Uniform(0.0, jnp.pi, naming=["psi"])
21:29 ninjax INFO    :    ra_prior = Uniform(0.0, 2 * jnp.pi, naming=["ra"])
21:29 ninjax INFO    :    sin_dec_prior = Uniform(-1.0, 1.0, naming=["sin_dec"])
21:29 ninjax INFO    : Finished prior setup
21:29 ninjax INFO    : Setting the transforms
21:29 ninjax INFO    : Raw transforms list is q_to_eta,cos_iota_to_iota,sin_dec_to_dec
21:29 ninjax INFO    : transforms_str_list has 3 elements
21:29 ninjax INFO    : DEBUG: Checking that all_transforms is OK: the list is ['binary_Love', 'binary_love_fit', 'cos_iota1_to_iota1', 'cos_iota2_to_iota2', 'cos_iota_to_iota', 'log_lambda_to_lambda', 'm1_m2_to_Mc_q', 'q1_to_eta1', 'q2_to_eta2', 'q_to_eta', 'sin_dec1_to_dec1', 'sin_dec2_to_dec2', 'sin_dec_to_dec', 'spin_sphere_to_cartesian_s1', 'spin_sphere_to_cartesian_s2', 'swap_lambdas_eos', 't_c_dt_to_tcs']
21:29 ninjax INFO    : Setting the likelihood
21:29 ninjax INFO    : GW likelihood provided, setting up the GW pipe
21:29 ninjax INFO    : eos_file is /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz
21:29 ninjax INFO    : Using eos_file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz for BNS injections
21:29 ninjax INFO    : Note: No specific waveform approximant 1 so defaulting to IMRPhenomD_NRTidalv2
21:29 ninjax INFO    : self.is_BNS_run is True
21:29 ninjax INFO    : Using IMRPhenomD_NRTidalv2 waveform. Therefore, we will use no taper as the reference waveform for the likelihood if relative binning is used
21:29 ninjax INFO    : GW run is an injection
21:29 ninjax INFO    : Setting up GW injection . . . 
21:29 ninjax INFO    : The SNR thresholds are: 11.2 - 100.0
21:29 ninjax INFO    : Generating new injection
21:29 ninjax INFO    : Sanity check: generated parameters:
21:29 ninjax INFO    : {'M_c': 1.3919290089857335, 'q': 0.5687304145573274, 's1_z': -0.04188811321235533, 's2_z': 0.04336297491386154, 'lambda_1': 2459.7321689903606, 'lambda_2': 1237.2890745939092, 'cos_iota': -0.4292742905629132, 'd_L': 440.1348393635618, 't_c': -0.008758850953766245, 'phase_c': 3.090026425194905, 'psi': 0.826539728208401, 'ra': 0.6867664721672045, 'sin_dec': 0.08454074941803258}
21:29 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
21:29 ninjax INFO    : Injected lambda_1: 7.039733026387287
21:29 ninjax INFO    : Injected lambda_2: 614.1289324901134
21:29 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.3919290089857335 is 128.0
21:29 ninjax INFO    : After transforms, the injection parameters are:
21:29 ninjax INFO    : {'M_c': 1.3919290089857335, 'q': 0.5687304145573274, 's1_z': -0.04188811321235533, 's2_z': 0.04336297491386154, 'lambda_1': 7.039733026387287, 'lambda_2': 614.1289324901134, 'cos_iota': -0.4292742905629132, 'd_L': 440.1348393635618, 't_c': -0.008758850953766245, 'phase_c': 3.090026425194905, 'psi': 0.826539728208401, 'ra': 0.6867664721672045, 'sin_dec': 0.08454074941803258, 'eta': 0.23110525488026232, 'iota': Array(2.01448544, dtype=float64, weak_type=True), 'dec': Array(0.08464178, dtype=float64, weak_type=True)}
21:29 ninjax INFO    : The trial injection parameters are {'M_c': 1.3919290089857335, 'eta': 0.23110525488026232, 's1_z': -0.04188811321235533, 's2_z': 0.04336297491386154, 'lambda_1': 7.039733026387287, 'lambda_2': 614.1289324901134, 'd_L': 440.1348393635618, 'phase_c': 3.090026425194905, 'iota': 2.0144854401991754, 't_c': -0.008758850953766245, 'psi': 0.826539728208401, 'ra': 0.6867664721672045, 'dec': 0.08464177875984531}
21:29 ninjax INFO    : Injecting signals . . .
21:29 ninjax INFO    : self.ifos
21:29 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
21:29 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [-7.39099100e-23+1.68302904e-23j -2.49409173e-23+4.09332612e-23j
 -6.25839281e-23+4.89710382e-23j ...
  2.44191198e-23-2.48217563e-23j -1.77129252e-23+4.02324718e-24j
 -1.44339292e-23+7.07755191e-24j]
21:29 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
21:29 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [ 6.23955437e-24-6.87051659e-23j  9.09046971e-23+3.06359337e-23j
 -4.65632930e-23-4.58515630e-23j ...
 -2.61972813e-24-1.35253419e-23j  1.48841293e-23-7.04648040e-24j
 -1.69979605e-23+2.45690920e-23j]
21:29 ninjax INFO    : [1.44906511e-46 1.44667215e-46 1.44435812e-46 ... 2.17775889e-47
 2.17777440e-47 2.17778992e-47]
21:29 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.          20.0078125   20.015625  ... 2047.9765625
 2047.984375  2047.9921875]
21:29 ninjax INFO    : [ 4.10642113e-23+2.82977377e-23j -1.01914099e-23+2.15159310e-23j
  8.45321882e-24+2.06094902e-23j ...
 -1.94664684e-23-3.78803195e-23j  6.18882588e-24-2.67057876e-23j
 -3.52487458e-24+3.05942432e-23j]
21:29 ninjax INFO    : [1.43183556e-46 1.42935095e-46 1.42688205e-46 ... 6.39786094e-47
 6.39790724e-47 6.39795354e-47]
21:29 ninjax INFO    : SNR for ifo H1 is 6.633577162164469
21:29 ninjax INFO    : SNR for ifo L1 is 6.84991652117325
21:29 ninjax INFO    : SNR for ifo V1 is 3.86723521681559
21:29 ninjax INFO    : The network SNR is 10.289859597468324
21:29 ninjax INFO    : The network SNR does not pass the threshold, trying again
21:29 ninjax INFO    : Generating new injection
21:29 ninjax INFO    : Sanity check: generated parameters:
21:29 ninjax INFO    : {'M_c': 1.183449240481226, 'q': 0.139443777201569, 's1_z': -0.011832650494512945, 's2_z': -0.02343979540528185, 'lambda_1': 1884.1456549318402, 'lambda_2': 4581.665770149202, 'cos_iota': -0.045400023623963115, 'd_L': 141.5145108960982, 't_c': 0.07516834696077127, 'phase_c': 5.3490591126773595, 'psi': 2.898737592345799, 'ra': 1.4337238209738035, 'sin_dec': -0.03891128765170082}
21:29 ninjax INFO    : Computing lambdas from EOS file /home/twouters2/projects/projection_BNS_A_plus/src/projection_BNS/data/HQC18.npz . . . 
21:29 ninjax INFO    : Injected lambda_1: 7.039733026387287
21:29 ninjax INFO    : Injected lambda_2: 46834.0383711716
21:29 ninjax INFO    : Duration is not specified in the config. Computed chirp time: for fmin = 20.0 and M_c = 1.183449240481226 is 256.0
21:29 ninjax INFO    : After transforms, the injection parameters are:
21:29 ninjax INFO    : {'M_c': 1.183449240481226, 'q': 0.139443777201569, 's1_z': -0.011832650494512945, 's2_z': -0.02343979540528185, 'lambda_1': 7.039733026387287, 'lambda_2': 46834.0383711716, 'cos_iota': -0.045400023623963115, 'd_L': 141.5145108960982, 't_c': 0.07516834696077127, 'phase_c': 5.3490591126773595, 'psi': 2.898737592345799, 'ra': 1.4337238209738035, 'sin_dec': -0.03891128765170082, 'eta': 0.1074022393059512, 'iota': Array(1.61621196, dtype=float64, weak_type=True), 'dec': Array(-0.03892111, dtype=float64, weak_type=True)}
21:29 ninjax INFO    : The trial injection parameters are {'M_c': 1.183449240481226, 'eta': 0.1074022393059512, 's1_z': -0.011832650494512945, 's2_z': -0.02343979540528185, 'lambda_1': 7.039733026387287, 'lambda_2': 46834.0383711716, 'd_L': 141.5145108960982, 'phase_c': 5.3490591126773595, 'iota': 1.616211961037419, 't_c': 0.07516834696077127, 'psi': 2.898737592345799, 'ra': 1.4337238209738035, 'dec': -0.038921113535544685}
21:29 ninjax INFO    : Injecting signals . . .
21:29 ninjax INFO    : self.ifos
21:29 ninjax INFO    : [GroundBased2G(H1), GroundBased2G(L1), GroundBased2G(V1)]
21:29 ninjax INFO    : Signal injected in ifo H1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
21:29 ninjax INFO    : [ 1.50145261e-23-8.68105497e-24j -4.60115874e-23-8.68383621e-23j
  7.13503995e-23-8.27373878e-23j ...
  4.01703382e-23+1.02489405e-23j  2.53900248e-23-2.61215079e-23j
  4.36741678e-25+1.89981999e-23j]
21:29 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
21:29 ninjax INFO    : Signal injected in ifo L1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
21:29 ninjax INFO    : [-9.28772428e-24+9.33985709e-23j  3.83754701e-23-1.71230468e-23j
 -1.39921641e-24+2.55610330e-23j ...
  3.45082590e-23-4.65110056e-23j  3.40736113e-23-1.77301739e-23j
 -4.97927107e-24-1.36769745e-23j]
21:29 ninjax INFO    : [1.44906511e-46 1.44785671e-46 1.44667215e-46 ... 2.17778216e-47
 2.17778992e-47 2.17779767e-47]
21:29 ninjax INFO    : Signal injected in ifo V1. Frequencies, data, and PSD:
21:29 ninjax INFO    : [  20.           20.00390625   20.0078125  ... 2047.98828125
 2047.9921875  2047.99609375]
21:29 ninjax INFO    : [ 3.08765572e-23-4.37385940e-23j  6.45737826e-23-6.10916487e-23j
 -5.87720181e-23+1.49691718e-22j ...
  4.12160676e-23+5.97911258e-23j -7.55268833e-24+8.09896260e-23j
  2.34992749e-23-4.64136080e-23j]
21:29 ninjax INFO    : [1.43183556e-46 1.43058540e-46 1.42935095e-46 ... 6.39793039e-47
 6.39795354e-47 6.39797668e-47]
21:29 ninjax INFO    : SNR for ifo H1 is 11.043761199875858
21:29 ninjax INFO    : SNR for ifo L1 is 16.478442374302322
21:29 ninjax INFO    : SNR for ifo V1 is 3.0425135039505333
21:29 ninjax INFO    : The network SNR is 20.068896654893788
21:29 ninjax INFO    : Network SNR passes threshold
21:29 ninjax INFO    : Sanity checking the GW injection for ArrayImpl
21:29 ninjax INFO    :    M_c: 1.183449240481226
21:29 ninjax INFO    :    q: 0.139443777201569
21:29 ninjax INFO    :    s1_z: -0.011832650494512945
21:29 ninjax INFO    :    s2_z: -0.02343979540528185
21:29 ninjax INFO    :    lambda_1: 7.039733026387287
21:29 ninjax INFO    :    lambda_2: 46834.0383711716
21:29 ninjax INFO    :    cos_iota: -0.045400023623963115
21:29 ninjax INFO    :    d_L: 141.5145108960982
21:29 ninjax INFO    :    t_c: 0.07516834696077127
21:29 ninjax INFO    :    phase_c: 5.3490591126773595
21:29 ninjax INFO    :    psi: 2.898737592345799
21:29 ninjax INFO    :    ra: 1.4337238209738035
21:29 ninjax INFO    :    sin_dec: -0.03891128765170082
21:29 ninjax INFO    :    eta: 0.1074022393059512
21:29 ninjax INFO    :    iota: 1.616211961037419
21:29 ninjax INFO    :    dec: -0.038921113535544685
21:29 ninjax INFO    :    H1_SNR: 11.043761199875858
21:29 ninjax INFO    :    L1_SNR: 16.478442374302322
21:29 ninjax INFO    :    V1_SNR: 3.0425135039505333
21:29 ninjax INFO    :    network_SNR: 20.068896654893788
21:29 ninjax INFO    :    epoch: 254.0
21:29 ninjax INFO    :    gmst: 2.7288901910520846
21:29 ninjax INFO    :    duration: 256.0
21:29 ninjax INFO    : Using GW HeterodynedTransientLikelihoodFD. Initializing likelihood
21:29 ninjax INFO    : Using the injection parameters as reference parameters for the relative binning
21:29 ninjax INFO    : Using the following kwargs for the GW likelihood: {}
21:32 ninjax INFO    : Initialization of HeterodynedTransientLikelihoodFD took 180.16931629180908 seconds = 3.002821938196818 minutes
21:32 ninjax INFO    : The priors are not modified after their initialization
21:32 ninjax INFO    : Required keys for the likelihood: ['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
21:32 ninjax INFO    : Checking the setup between prior, transforms, and likelihood
21:32 ninjax INFO    : sample: {'M_c': Array([1.70055738, 1.41643339, 1.91109049], dtype=float64), 'q': Array([0.50314568, 0.83557929, 0.55815278], dtype=float64), 's1_z': Array([0.04639728, 0.04442101, 0.02307254], dtype=float64), 's2_z': Array([ 0.04014417, -0.04507235,  0.02908156], dtype=float64), 'lambda_1': Array([2585.26135123, 1028.59509476, 3327.71805679], dtype=float64), 'lambda_2': Array([1467.13305948, 4237.79075936, 2065.98935765], dtype=float64), 'cos_iota': Array([-0.29823757,  0.63053972,  0.7195137 ], dtype=float64), 'd_L': Array([379.28320104, 385.0337804 , 269.83902711], dtype=float64), 't_c': Array([-0.07878276, -0.06160993, -0.05722796], dtype=float64), 'phase_c': Array([0.375826  , 3.61295555, 4.35761933], dtype=float64), 'psi': Array([1.3670044 , 1.23895074, 0.1122674 ], dtype=float64), 'ra': Array([6.23155321, 5.75714947, 3.55275974], dtype=float64), 'sin_dec': Array([ 0.70120403, -0.38980908,  0.96341486], dtype=float64)}
21:32 ninjax INFO    : log_prob: [ -23.61180712  -73.01104737 -244.36142804]
21:32 ninjax INFO    : Checking log_prob at injection parameters: {'M_c': 1.183449240481226, 'q': 0.139443777201569, 's1_z': -0.011832650494512945, 's2_z': -0.02343979540528185, 'lambda_1': 7.039733026387287, 'lambda_2': 46834.0383711716, 'cos_iota': -0.045400023623963115, 'd_L': 141.5145108960982, 't_c': 0.07516834696077127, 'phase_c': 5.3490591126773595, 'psi': 2.898737592345799, 'ra': 1.4337238209738035, 'sin_dec': -0.03891128765170082, 'eta': 0.1074022393059512, 'iota': Array(1.61621196, dtype=float64, weak_type=True), 'dec': Array(-0.03892111, dtype=float64, weak_type=True), 'H1_SNR': 11.043761199875858, 'L1_SNR': 16.478442374302322, 'V1_SNR': 3.0425135039505333, 'network_SNR': 20.068896654893788, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
21:32 ninjax INFO    : log_prob at the injection parameters is: -inf
21:32 ninjax INFO    : Will plot these keys: ['M_c', 'q', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 't_c', 'phase_c', 'iota', 'psi', 'ra', 'dec']
21:32 ninjax INFO    : Will plot the labels: ['$M_c/M_\\odot$', '$q$', '$\\chi_1$', '$\\chi_2$', '$\\Lambda_1$', '$\\Lambda_2$', '$d_{\\rm{L}}/{\\rm Mpc}$', '$t_c$', '$\\phi_c$', '$\\iota$', '$\\psi$', '$\\alpha$', '$\\delta$']
21:32 ninjax INFO    : Ninjax setup complete.
21:32 ninjax INFO    : Saving output to ./outdir/injection_28/
21:32 ninjax INFO    : Using polynomial learning rate scheduler
21:32 ninjax INFO    : The hyperparameters passed to flowMC and jim are
21:32 ninjax INFO    :    n_loop_training: 200
21:32 ninjax INFO    :    n_loop_production: 10
21:32 ninjax INFO    :    n_local_steps: 100
21:32 ninjax INFO    :    n_global_steps: 1000
21:32 ninjax INFO    :    n_epochs: 25
21:32 ninjax INFO    :    n_chains: 1000
21:32 ninjax INFO    :    learning_rate: <function polynomial_schedule.<locals>.schedule at 0x1493e724dea0>
21:32 ninjax INFO    :    max_samples: 50000
21:32 ninjax INFO    :    momentum: 0.9
21:32 ninjax INFO    :    batch_size: 30000
21:32 ninjax INFO    :    use_global: True
21:32 ninjax INFO    :    keep_quantile: 0.0
21:32 ninjax INFO    :    train_thinning: 10
21:32 ninjax INFO    :    output_thinning: 50
21:32 ninjax INFO    :    n_sample_max: 10000
21:32 ninjax INFO    :    num_layers: 10
21:32 ninjax INFO    :    hidden_size: [128, 128]
21:32 ninjax INFO    :    num_bins: 8
21:32 ninjax INFO    :    save_training_chains: False
21:32 ninjax INFO    :    eps_mass_matrix: 1e-05
21:32 ninjax INFO    :    use_scheduler: True
21:32 ninjax INFO    :    use_temperature: False
21:32 ninjax INFO    :    which_temperature_schedule: exponential
21:32 ninjax INFO    :    starting_temperature: 2.0
21:32 ninjax INFO    :    stop_tempering_iteration: 75
21:32 ninjax INFO    :    stopping_criterion_global_acc: 0.1
21:32 ninjax INFO    :    stopping_criterion_loss: -inf
21:32 ninjax INFO    :    nf_model_kwargs: {}
21:32 ninjax INFO    :    local sampler arg not shown (pretty print)
21:32 ninjax INFO    : Fetching the injected values for plotting
Checking the noise that was generated in inject_signal ifo:
[-7.08714393e-23 -2.19918432e-23 -5.97691678e-23 -1.86324852e-23
 -6.37250156e-23 -6.80540206e-23  3.94955707e-23  3.48411472e-23
  6.65709996e-23  1.00606133e-23]
[ 1.72834670e-23  4.17888265e-23  5.01947713e-23 -2.54657811e-23
  1.00372850e-22 -5.99623727e-23  5.64031455e-23 -4.48431804e-24
  4.94386177e-23  1.91713443e-23]
Checking the noise that was generated in inject_signal ifo:
[ 3.52745036e-24  8.84386252e-23 -4.87541961e-23  5.17821592e-24
 -3.57185633e-24 -5.57860282e-23 -1.29400525e-23 -4.06946022e-23
 -6.68094973e-23  5.59765430e-23]
[-7.03506993e-23  2.86428051e-23 -4.81417184e-23 -9.98520269e-23
  1.61128997e-23 -2.75983818e-23 -1.15224541e-22  5.44638140e-23
 -6.84335946e-23 -5.82774327e-23]
Checking the noise that was generated in inject_signal ifo:
[ 3.87933665e-23 -1.24300726e-23  6.28190854e-24  9.47493436e-23
  4.11414875e-23 -9.24494710e-23  2.55426159e-23 -1.61447333e-23
  5.49290227e-23  5.95460822e-23]
[ 2.82143886e-23  2.11320768e-23  1.99464341e-23 -8.19327829e-24
 -1.03588201e-22 -5.45645763e-23  3.15206650e-23 -1.86014763e-23
 -4.80430984e-23  3.58218261e-23]
Checking the noise that was generated in inject_signal ifo:
[ 1.08574761e-23 -4.11422657e-23  7.04542244e-23  1.20436710e-23
 -8.69869794e-24 -4.92414223e-23 -2.79677106e-23  1.59076436e-23
 -9.94910099e-23 -1.20093740e-22]
[-5.50372651e-24 -8.49269229e-23 -8.78898810e-23 -2.10839246e-23
 -2.20959680e-23  1.09694693e-23 -2.14341372e-23 -3.99490148e-23
  5.87423315e-23  4.16989165e-23]
Checking the noise that was generated in inject_signal ifo:
[-1.82370692e-24  3.64716594e-23 -6.87783728e-24 -2.17214439e-22
 -5.56441115e-24  6.82430435e-26  6.14604211e-23 -2.98794993e-24
  4.30226596e-23  3.65583447e-23]
[ 9.56874034e-23 -2.46925773e-23  3.11179203e-23 -6.41301362e-23
 -5.07213212e-26  5.46365071e-23  6.86318063e-23  1.83741720e-23
 -2.36210187e-23 -7.42922479e-24]
Checking the noise that was generated in inject_signal ifo:
[ 3.14246598e-23  6.57735307e-23 -6.05628592e-23 -2.47085629e-23
  6.95399696e-24  7.86103151e-24 -9.65822231e-23 -6.54933034e-23
  6.01915909e-23 -2.92216445e-23]
[-4.20040292e-23 -6.24584752e-23  1.49377111e-22  7.12245666e-23
  5.70477255e-23 -1.31851944e-22 -5.69328678e-24  5.20694913e-23
  3.76037086e-23 -1.80692416e-23]
NOTE: we are given a reference waveform!
Initializing heterodyned likelihood..
Comparing against relative binning in bilby
Using 5941 bins for relative binning for epsilon 0.01
Time for binning scheme: 0.18701481819152832 seconds
Using provided reference parameters:
ref_params for relative binning:
{'M_c': 1.183449240481226, 'q': 0.139443777201569, 's1_z': -0.011832650494512945, 's2_z': -0.02343979540528185, 'lambda_1': 7.039733026387287, 'lambda_2': 46834.0383711716, 'cos_iota': -0.045400023623963115, 'd_L': 141.5145108960982, 't_c': 0.07516834696077127, 'phase_c': 5.3490591126773595, 'psi': 2.898737592345799, 'ra': 1.4337238209738035, 'sin_dec': -0.03891128765170082, 'eta': 0.1074022393059512, 'iota': Array(1.61621196, dtype=float64, weak_type=True), 'dec': Array(-0.03892111, dtype=float64, weak_type=True), 'H1_SNR': 11.043761199875858, 'L1_SNR': 16.478442374302322, 'V1_SNR': 3.0425135039505333, 'network_SNR': 20.068896654893788, 'epoch': 254.0, 'gmst': 2.7288901910520846, 'duration': 256.0}
Constructing reference waveforms. . .
Time for reference waveforms: 0.5116403102874756 seconds
Time for h_sky_low and h_sky_center: 5.447982549667358 seconds
Going to compute the masks . . .
Time taken for f_index_array calculation is 0.7638998031616211
Going to compute coefficients . . .
Time for computing coefficients: 158.99134230613708 seconds
Time for computing coefficients: 6.9069695472717285 seconds
Time for computing coefficients: 6.834879636764526 seconds
['M_c', 'eta', 's1_z', 's2_z', 'lambda_1', 'lambda_2', 'd_L', 'phase_c', 'iota', 't_c', 'psi', 'ra', 'dec']
INFO: Using MALA as local sampler
Setting up a single Gaussian distribution
No autotune found, use input sampler_params
Training normalizing flow
Tuning global sampler:   0%|          | 0/200 [00:00<?, ?it/s]Tuning global sampler:   0%|          | 1/200 [02:02<6:46:22, 122.53s/it]Tuning global sampler:   1%|          | 2/200 [02:07<2:55:22, 53.14s/it] Tuning global sampler:   2%|▏         | 3/200 [02:11<1:41:43, 30.98s/it]Tuning global sampler:   2%|▏         | 4/200 [02:16<1:07:12, 20.57s/it]Tuning global sampler:   2%|▎         | 5/200 [02:20<48:08, 14.81s/it]  Tuning global sampler:   3%|▎         | 6/200 [02:25<36:38, 11.33s/it]Tuning global sampler:   4%|▎         | 7/200 [02:30<29:17,  9.11s/it]Tuning global sampler:   4%|▍         | 8/200 [02:34<24:32,  7.67s/it]Tuning global sampler:   4%|▍         | 9/200 [02:39<21:16,  6.69s/it]Tuning global sampler:   5%|▌         | 10/200 [02:43<18:56,  5.98s/it]Tuning global sampler:   6%|▌         | 11/200 [02:48<17:29,  5.56s/it]Tuning global sampler:   6%|▌         | 12/200 [02:52<16:28,  5.26s/it]Tuning global sampler:   6%|▋         | 13/200 [02:57<15:43,  5.04s/it]Tuning global sampler:   7%|▋         | 14/200 [03:01<15:14,  4.92s/it]Tuning global sampler:   8%|▊         | 15/200 [03:06<14:53,  4.83s/it]Tuning global sampler:   8%|▊         | 16/200 [03:11<14:37,  4.77s/it]Tuning global sampler:   8%|▊         | 17/200 [03:16<15:17,  5.01s/it]Tuning global sampler:   9%|▉         | 18/200 [03:21<14:51,  4.90s/it]Tuning global sampler:  10%|▉         | 19/200 [03:25<14:31,  4.82s/it]Tuning global sampler:  10%|█         | 20/200 [03:30<14:16,  4.76s/it]Tuning global sampler:  10%|█         | 21/200 [03:35<14:04,  4.72s/it]Tuning global sampler:  11%|█         | 22/200 [03:39<13:52,  4.68s/it]Tuning global sampler:  12%|█▏        | 23/200 [03:44<13:43,  4.66s/it]Tuning global sampler:  12%|█▏        | 24/200 [03:48<13:26,  4.58s/it]Tuning global sampler:  12%|█▎        | 25/200 [03:53<13:11,  4.52s/it]Tuning global sampler:  13%|█▎        | 26/200 [03:57<12:59,  4.48s/it]Tuning global sampler:  14%|█▎        | 27/200 [04:01<12:50,  4.45s/it]Tuning global sampler:  14%|█▍        | 28/200 [04:06<12:41,  4.43s/it]Tuning global sampler:  14%|█▍        | 29/200 [04:10<12:34,  4.41s/it]Tuning global sampler:  15%|█▌        | 30/200 [04:15<12:27,  4.40s/it]Tuning global sampler:  16%|█▌        | 31/200 [04:19<12:22,  4.39s/it]Tuning global sampler:  16%|█▌        | 32/200 [04:23<12:17,  4.39s/it]Tuning global sampler:  16%|█▋        | 33/200 [04:28<12:10,  4.37s/it]Tuning global sampler:  17%|█▋        | 34/200 [04:32<12:04,  4.37s/it]Tuning global sampler:  18%|█▊        | 35/200 [04:36<12:01,  4.37s/it]Tuning global sampler:  18%|█▊        | 36/200 [04:41<11:56,  4.37s/it]Tuning global sampler:  18%|█▊        | 37/200 [04:45<11:52,  4.37s/it]Tuning global sampler:  19%|█▉        | 38/200 [04:51<12:37,  4.67s/it]Tuning global sampler:  20%|█▉        | 39/200 [04:55<12:18,  4.58s/it]Tuning global sampler:  20%|██        | 40/200 [04:59<12:03,  4.52s/it]Tuning global sampler:  20%|██        | 41/200 [05:04<11:52,  4.48s/it]Tuning global sampler:  21%|██        | 42/200 [05:08<11:43,  4.45s/it]Tuning global sampler:  22%|██▏       | 43/200 [05:12<11:35,  4.43s/it]Tuning global sampler:  22%|██▏       | 44/200 [05:17<11:27,  4.40s/it]Tuning global sampler:  22%|██▎       | 45/200 [05:21<11:20,  4.39s/it]Tuning global sampler:  23%|██▎       | 46/200 [05:26<11:15,  4.38s/it]Tuning global sampler:  24%|██▎       | 47/200 [05:30<11:10,  4.38s/it]Tuning global sampler:  24%|██▍       | 48/200 [05:34<11:05,  4.38s/it]Tuning global sampler:  24%|██▍       | 49/200 [05:39<11:01,  4.38s/it]Tuning global sampler:  25%|██▌       | 50/200 [05:43<10:57,  4.39s/it]Tuning global sampler:  26%|██▌       | 51/200 [05:47<10:53,  4.38s/it]Tuning global sampler:  26%|██▌       | 52/200 [05:52<10:49,  4.39s/it]Tuning global sampler:  26%|██▋       | 53/200 [05:56<10:44,  4.38s/it]Tuning global sampler:  27%|██▋       | 54/200 [06:01<10:40,  4.38s/it]Tuning global sampler:  28%|██▊       | 55/200 [06:05<10:34,  4.37s/it]Tuning global sampler:  28%|██▊       | 56/200 [06:09<10:28,  4.37s/it]Tuning global sampler:  28%|██▊       | 57/200 [06:14<10:25,  4.37s/it]Tuning global sampler:  29%|██▉       | 58/200 [06:18<10:21,  4.38s/it]Tuning global sampler:  30%|██▉       | 59/200 [06:23<11:02,  4.70s/it]Tuning global sampler:  30%|███       | 60/200 [06:28<10:44,  4.60s/it]Tuning global sampler:  30%|███       | 61/200 [06:32<10:30,  4.53s/it]Tuning global sampler:  31%|███       | 62/200 [06:37<10:19,  4.49s/it]Tuning global sampler:  32%|███▏      | 63/200 [06:41<10:11,  4.46s/it]Tuning global sampler:  32%|███▏      | 64/200 [06:45<10:03,  4.44s/it]Tuning global sampler:  32%|███▎      | 65/200 [06:50<09:56,  4.42s/it]Tuning global sampler:  33%|███▎      | 66/200 [06:54<09:48,  4.40s/it]Tuning global sampler:  34%|███▎      | 67/200 [06:58<09:42,  4.38s/it]Tuning global sampler:  34%|███▍      | 68/200 [07:03<09:38,  4.38s/it]Tuning global sampler:  34%|███▍      | 69/200 [07:07<09:34,  4.39s/it]Tuning global sampler:  35%|███▌      | 70/200 [07:12<09:30,  4.39s/it]Tuning global sampler:  36%|███▌      | 71/200 [07:16<09:26,  4.39s/it]Tuning global sampler:  36%|███▌      | 72/200 [07:20<09:21,  4.39s/it]Tuning global sampler:  36%|███▋      | 73/200 [07:25<09:17,  4.39s/it]Tuning global sampler:  37%|███▋      | 74/200 [07:29<09:13,  4.39s/it]Tuning global sampler:  38%|███▊      | 75/200 [07:34<09:09,  4.39s/it]Tuning global sampler:  38%|███▊      | 76/200 [07:38<09:04,  4.39s/it]Tuning global sampler:  38%|███▊      | 77/200 [07:42<08:58,  4.38s/it]Tuning global sampler:  39%|███▉      | 78/200 [07:47<08:52,  4.37s/it]Tuning global sampler:  40%|███▉      | 79/200 [07:51<08:48,  4.37s/it]Tuning global sampler:  40%|████      | 80/200 [07:57<09:23,  4.69s/it]Tuning global sampler:  40%|████      | 81/200 [08:01<09:08,  4.61s/it]Tuning global sampler:  41%|████      | 82/200 [08:05<08:56,  4.54s/it]Tuning global sampler:  42%|████▏     | 83/200 [08:10<08:46,  4.50s/it]Tuning global sampler:  42%|████▏     | 84/200 [08:14<08:38,  4.47s/it]Tuning global sampler:  42%|████▏     | 84/200 [08:18<11:29,  5.94s/it]
Compiling MALA body
Early stopping: global acceptance target rate achieved
Starting Production run
Production run:   0%|          | 0/10 [00:00<?, ?it/s]Production run:  10%|█         | 1/10 [00:03<00:28,  3.22s/it]Production run:  20%|██        | 2/10 [00:06<00:25,  3.22s/it]Production run:  30%|███       | 3/10 [00:09<00:22,  3.22s/it]Production run:  40%|████      | 4/10 [00:12<00:19,  3.22s/it]Production run:  50%|█████     | 5/10 [00:16<00:16,  3.22s/it]Production run:  60%|██████    | 6/10 [00:19<00:12,  3.22s/it]Production run:  70%|███████   | 7/10 [00:22<00:09,  3.22s/it]Production run:  80%|████████  | 8/10 [00:25<00:06,  3.22s/it]Production run:  90%|█████████ | 9/10 [00:28<00:03,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]Production run: 100%|██████████| 10/10 [00:32<00:00,  3.22s/it]
21:41 ninjax INFO    : Saving samples to ./outdir/injection_28/results_training.npz
21:41 ninjax INFO    : Saving the NF
21:41 ninjax INFO    : Time taken: 541.6231803894043 seconds (9.027053006490071 minutes)
21:41 ninjax INFO    : Creating the final corner plot
21:41 ninjax INFO    : Dumping the final production chains
21:41 ninjax INFO    : Chains shape is: (13, 220000)
21:42 ninjax INFO    : Key: M_c: ESS = 30429, Rhat = 1.0206461029017346
21:42 ninjax INFO    : Key: q: ESS = 38036, Rhat = 1.017403365981074
21:42 ninjax INFO    : Key: s1_z: ESS = 29546, Rhat = 1.0214666208858902
21:42 ninjax INFO    : Key: s2_z: ESS = 41483, Rhat = 1.016533942624373
21:42 ninjax INFO    : Key: lambda_1: ESS = 44937, Rhat = 1.0152010871415533
21:42 ninjax INFO    : Key: lambda_2: ESS = 54241, Rhat = 1.0156608044963937
21:42 ninjax INFO    : Key: cos_iota: ESS = 39037, Rhat = 1.0171739358178042
21:42 ninjax INFO    : Key: d_L: ESS = 22166, Rhat = 1.0283845746832323
21:42 ninjax INFO    : Key: t_c: ESS = 17141, Rhat = 1.035487725059661
21:42 ninjax INFO    : Key: phase_c: ESS = 38356, Rhat = 1.0168317813437149
21:42 ninjax INFO    : Key: psi: ESS = 36686, Rhat = 1.0175957912182747
21:42 ninjax INFO    : Key: ra: ESS = 14538, Rhat = 1.041388787981214
21:42 ninjax INFO    : Key: sin_dec: ESS = 14707, Rhat = 1.0408083138728847
21:42 ninjax INFO    : Key: eta: ESS = 38036, Rhat = 1.017403365981074
21:42 ninjax INFO    : Key: iota: ESS = 39037, Rhat = 1.0171739358178042
21:42 ninjax INFO    : Key: dec: ESS = 14707, Rhat = 1.0408083138728847
21:42 ninjax INFO    : Finished successfully!
Training summary
==========
M_c: 1.223 +/- 0.152
q: 0.240 +/- 0.197
s1_z: -0.008 +/- 0.027
s2_z: 0.000 +/- 0.028
lambda_1: 1751.497 +/- 1485.037
lambda_2: 2582.605 +/- 1444.785
cos_iota: 0.144 +/- 0.339
d_L: 301.608 +/- 114.672
t_c: 0.068 +/- 0.038
phase_c: 3.001 +/- 1.720
psi: 1.784 +/- 0.885
ra: 2.240 +/- 1.228
sin_dec: -0.276 +/- 0.426
Log probability: 73.965 +/- 78.271
Local acceptance: 0.602 +/- 0.490
Global acceptance: 0.009 +/- 0.095
Max loss: 22.791, Min loss: 4.492
Production summary
==========
M_c: 1.183 +/- 0.000
q: 0.141 +/- 0.008
s1_z: -0.015 +/- 0.024
s2_z: -0.002 +/- 0.029
lambda_1: 167.025 +/- 105.660
lambda_2: 2502.533 +/- 1441.469
cos_iota: 0.225 +/- 0.249
d_L: 155.027 +/- 32.857
t_c: 0.075 +/- 0.002
phase_c: 2.814 +/- 1.757
psi: 2.073 +/- 0.818
ra: 1.358 +/- 0.060
sin_dec: -0.136 +/- 0.104
Log probability: 170.036 +/- 2.478
Local acceptance: 0.195 +/- 0.396
Global acceptance: 0.102 +/- 0.302
DONE

JOB STATISTICS
==============
Job ID: 10848220
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:11:32
CPU Efficiency: 5.55% of 03:27:44 core-walltime
Job Wall-clock time: 00:12:59
Memory Utilized: 4.70 GB
Memory Efficiency: 47.01% of 10.00 GB
